   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	transmit_message,20,4
  16              		.section	.text.led_spark,"ax",%progbits
  17              		.align	1
  18              		.global	led_spark
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	led_spark:
  26              	.LFB119:
  27              		.file 1 "../src/main.c"
   1:../src/main.c **** /*!
   2:../src/main.c ****     \file    main.c
   3:../src/main.c ****     \brief   led spark with systick, USART print and key example
   4:../src/main.c **** 
   5:../src/main.c ****    \version 2024-12-20, V3.0.1, firmware for GD32F30x
   6:../src/main.c **** */
   7:../src/main.c **** 
   8:../src/main.c **** /*
   9:../src/main.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:../src/main.c **** 
  11:../src/main.c ****     Redistribution and use in source and binary forms, with or without modification, 
  12:../src/main.c **** are permitted provided that the following conditions are met:
  13:../src/main.c **** 
  14:../src/main.c ****     1. Redistributions of source code must retain the above copyright notice, this 
  15:../src/main.c ****        list of conditions and the following disclaimer.
  16:../src/main.c ****     2. Redistributions in binary form must reproduce the above copyright notice, 
  17:../src/main.c ****        this list of conditions and the following disclaimer in the documentation 
  18:../src/main.c ****        and/or other materials provided with the distribution.
  19:../src/main.c ****     3. Neither the name of the copyright holder nor the names of its contributors 
  20:../src/main.c ****        may be used to endorse or promote products derived from this software without 
  21:../src/main.c ****        specific prior written permission.
  22:../src/main.c **** 
  23:../src/main.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  24:../src/main.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  25:../src/main.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  26:../src/main.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  27:../src/main.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  28:../src/main.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  29:../src/main.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  30:../src/main.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:../src/main.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  32:../src/main.c **** OF SUCH DAMAGE.
  33:../src/main.c **** */
  34:../src/main.c **** 
  35:../src/main.c **** #include "gd32f30x.h"
  36:../src/main.c **** #include "systick.h"
  37:../src/main.c **** #include <stdio.h>
  38:../src/main.c **** #include "main.h"
  39:../src/main.c **** #include "gd32f307c_eval.h"
  40:../src/main.c **** 
  41:../src/main.c **** //extern FlagStatus receive_flag;
  42:../src/main.c **** extern can_receive_message_struct receive_message;
  43:../src/main.c **** can_trasnmit_message_struct transmit_message;
  44:../src/main.c **** 
  45:../src/main.c **** void nvic_config(void);
  46:../src/main.c **** void led_config(void);
  47:../src/main.c **** void gpio_config(void);
  48:../src/main.c **** ErrStatus can_networking(void);
  49:../src/main.c **** void can_networking_init(void);
  50:../src/main.c **** 
  51:../src/main.c **** /*!
  52:../src/main.c ****     \brief      toggle the led every 500ms
  53:../src/main.c ****     \param[in]  none
  54:../src/main.c ****     \param[out] none
  55:../src/main.c ****     \retval     none
  56:../src/main.c **** */
  57:../src/main.c **** void led_spark(void)
  58:../src/main.c **** {
  28              		.loc 1 58 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  59:../src/main.c ****     static __IO uint32_t timingdelaylocal = 0U;
  60:../src/main.c **** 
  61:../src/main.c ****     if(timingdelaylocal){
  38              		.loc 1 61 8
  39 0004 0D4B     		ldr	r3, .L7
  40 0006 1B68     		ldr	r3, [r3]
  41              		.loc 1 61 7
  42 0008 002B     		cmp	r3, #0
  43 000a 11D0     		beq	.L2
  62:../src/main.c **** 
  63:../src/main.c ****         if(timingdelaylocal < 500U){
  44              		.loc 1 63 29
  45 000c 0B4B     		ldr	r3, .L7
  46 000e 1B68     		ldr	r3, [r3]
  47              		.loc 1 63 11
  48 0010 B3F5FA7F 		cmp	r3, #500
  49 0014 03D2     		bcs	.L3
  64:../src/main.c ****             gd_eval_led_on(LED2);
  50              		.loc 1 64 13
  51 0016 0020     		movs	r0, #0
  52 0018 FFF7FEFF 		bl	gd_eval_led_on
  53 001c 02E0     		b	.L4
  54              	.L3:
  65:../src/main.c ****         }else{
  66:../src/main.c ****             gd_eval_led_off(LED2);
  55              		.loc 1 66 13
  56 001e 0020     		movs	r0, #0
  57 0020 FFF7FEFF 		bl	gd_eval_led_off
  58              	.L4:
  67:../src/main.c ****         }
  68:../src/main.c **** 
  69:../src/main.c ****         timingdelaylocal--;
  59              		.loc 1 69 25
  60 0024 054B     		ldr	r3, .L7
  61 0026 1B68     		ldr	r3, [r3]
  62 0028 013B     		subs	r3, r3, #1
  63 002a 044A     		ldr	r2, .L7
  64 002c 1360     		str	r3, [r2]
  70:../src/main.c ****     }else{
  71:../src/main.c ****         timingdelaylocal = 1000U;
  72:../src/main.c ****     }
  73:../src/main.c **** }
  65              		.loc 1 73 1
  66 002e 03E0     		b	.L6
  67              	.L2:
  71:../src/main.c ****     }
  68              		.loc 1 71 26
  69 0030 024B     		ldr	r3, .L7
  70 0032 4FF47A72 		mov	r2, #1000
  71 0036 1A60     		str	r2, [r3]
  72              	.L6:
  73              		.loc 1 73 1
  74 0038 00BF     		nop
  75 003a 80BD     		pop	{r7, pc}
  76              	.L8:
  77              		.align	2
  78              	.L7:
  79 003c 00000000 		.word	timingdelaylocal.8671
  80              		.cfi_endproc
  81              	.LFE119:
  83              		.section	.rodata
  84              		.align	2
  85              	.LC0:
  86 0000 0D0A434B 		.ascii	"\015\012CK_SYS is %d\000"
  86      5F535953 
  86      20697320 
  86      256400
  87 000f 00       		.align	2
  88              	.LC1:
  89 0010 0D0A434B 		.ascii	"\015\012CK_AHB is %d\000"
  89      5F414842 
  89      20697320 
  89      256400
  90 001f 00       		.align	2
  91              	.LC2:
  92 0020 0D0A434B 		.ascii	"\015\012CK_APB1 is %d\000"
  92      5F415042 
  92      31206973 
  92      20256400 
  93              		.align	2
  94              	.LC3:
  95 0030 0D0A434B 		.ascii	"\015\012CK_APB2 is %d\000"
  95      5F415042 
  95      32206973 
  95      20256400 
  96              		.align	2
  97              	.LC4:
  98 0040 0D0A4744 		.ascii	"\015\012GD32F30x series firmware version: V%d.%d.%d"
  98      33324633 
  98      30782073 
  98      65726965 
  98      73206669 
  99 006d 00       		.ascii	"\000"
 100 006e 0000     		.align	2
 101              	.LC5:
 102 0070 0D0A2063 		.ascii	"\015\012 can0 transmit data:\000"
 102      616E3020 
 102      7472616E 
 102      736D6974 
 102      20646174 
 103 0087 00       		.align	2
 104              	.LC6:
 105 0088 20253032 		.ascii	" %02x\000"
 105      7800
 106              		.section	.text.main,"ax",%progbits
 107              		.align	1
 108              		.global	main
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu softvfp
 114              	main:
 115              	.LFB120:
  74:../src/main.c **** 
  75:../src/main.c **** /*!
  76:../src/main.c ****     \brief      main function
  77:../src/main.c ****     \param[in]  none
  78:../src/main.c ****     \param[out] none
  79:../src/main.c ****     \retval     none
  80:../src/main.c **** */
  81:../src/main.c **** 
  82:../src/main.c **** int main(void)
  83:../src/main.c **** {
 116              		.loc 1 83 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 16
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 84B0     		sub	sp, sp, #16
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
  84:../src/main.c **** #ifdef __FIRMWARE_VERSION_DEFINE
  85:../src/main.c ****     uint32_t fw_ver = 0;
 128              		.loc 1 85 14
 129 0006 0023     		movs	r3, #0
 130 0008 7B60     		str	r3, [r7, #4]
  86:../src/main.c **** #endif
  87:../src/main.c ****     uint8_t i = 0;
 131              		.loc 1 87 13
 132 000a 0023     		movs	r3, #0
 133 000c FB73     		strb	r3, [r7, #15]
  88:../src/main.c ****     uint32_t timeout = 0xFFFF;
 134              		.loc 1 88 14
 135 000e 4FF6FF73 		movw	r3, #65535
 136 0012 BB60     		str	r3, [r7, #8]
  89:../src/main.c ****     uint8_t transmit_mailbox = 0;
 137              		.loc 1 89 13
 138 0014 0023     		movs	r3, #0
 139 0016 FB70     		strb	r3, [r7, #3]
  90:../src/main.c ****     //receive_flag = RESET;
  91:../src/main.c ****     SystemInit();
 140              		.loc 1 91 5
 141 0018 FFF7FEFF 		bl	SystemInit
  92:../src/main.c ****     /* configure systick */
  93:../src/main.c ****     systick_config();
 142              		.loc 1 93 5
 143 001c FFF7FEFF 		bl	systick_config
  94:../src/main.c ****     /* initialize the LEDs, USART and key */
  95:../src/main.c ****     gd_eval_led_init(LED2); 
 144              		.loc 1 95 5
 145 0020 0020     		movs	r0, #0
 146 0022 FFF7FEFF 		bl	gd_eval_led_init
  96:../src/main.c ****     gd_eval_led_init(LED3); 
 147              		.loc 1 96 5
 148 0026 0120     		movs	r0, #1
 149 0028 FFF7FEFF 		bl	gd_eval_led_init
  97:../src/main.c ****     gd_eval_led_init(LED4);
 150              		.loc 1 97 5
 151 002c 0220     		movs	r0, #2
 152 002e FFF7FEFF 		bl	gd_eval_led_init
  98:../src/main.c ****     gd_eval_com_init(EVAL_COM0);
 153              		.loc 1 98 5
 154 0032 4D48     		ldr	r0, .L16
 155 0034 FFF7FEFF 		bl	gd_eval_com_init
  99:../src/main.c ****     gd_eval_key_init(KEY_WAKEUP, KEY_MODE_GPIO);
 156              		.loc 1 99 5
 157 0038 0021     		movs	r1, #0
 158 003a 0020     		movs	r0, #0
 159 003c FFF7FEFF 		bl	gd_eval_key_init
 100:../src/main.c ****     
 101:../src/main.c ****     /* print out the clock frequency of system, AHB, APB1 and APB2 */
 102:../src/main.c ****     printf("\r\nCK_SYS is %d", rcu_clock_freq_get(CK_SYS));
 160              		.loc 1 102 5
 161 0040 0020     		movs	r0, #0
 162 0042 FFF7FEFF 		bl	rcu_clock_freq_get
 163 0046 0346     		mov	r3, r0
 164 0048 1946     		mov	r1, r3
 165 004a 4848     		ldr	r0, .L16+4
 166 004c FFF7FEFF 		bl	printf
 103:../src/main.c ****     printf("\r\nCK_AHB is %d", rcu_clock_freq_get(CK_AHB));
 167              		.loc 1 103 5
 168 0050 0120     		movs	r0, #1
 169 0052 FFF7FEFF 		bl	rcu_clock_freq_get
 170 0056 0346     		mov	r3, r0
 171 0058 1946     		mov	r1, r3
 172 005a 4548     		ldr	r0, .L16+8
 173 005c FFF7FEFF 		bl	printf
 104:../src/main.c ****     printf("\r\nCK_APB1 is %d", rcu_clock_freq_get(CK_APB1));
 174              		.loc 1 104 5
 175 0060 0220     		movs	r0, #2
 176 0062 FFF7FEFF 		bl	rcu_clock_freq_get
 177 0066 0346     		mov	r3, r0
 178 0068 1946     		mov	r1, r3
 179 006a 4248     		ldr	r0, .L16+12
 180 006c FFF7FEFF 		bl	printf
 105:../src/main.c ****     printf("\r\nCK_APB2 is %d", rcu_clock_freq_get(CK_APB2));
 181              		.loc 1 105 5
 182 0070 0320     		movs	r0, #3
 183 0072 FFF7FEFF 		bl	rcu_clock_freq_get
 184 0076 0346     		mov	r3, r0
 185 0078 1946     		mov	r1, r3
 186 007a 3F48     		ldr	r0, .L16+16
 187 007c FFF7FEFF 		bl	printf
 106:../src/main.c **** 
 107:../src/main.c ****     /* configure GPIO */
 108:../src/main.c ****     gpio_config();
 188              		.loc 1 108 5
 189 0080 FFF7FEFF 		bl	gpio_config
 109:../src/main.c **** 
 110:../src/main.c ****     /* initialize CAN and CAN filter */
 111:../src/main.c ****     can_networking_init();
 190              		.loc 1 111 5
 191 0084 FFF7FEFF 		bl	can_networking_init
 112:../src/main.c **** 
 113:../src/main.c ****     /* enable CAN receive FIFO0 not empty interrupt */
 114:../src/main.c ****     can_interrupt_enable(CAN0, CAN_INTEN_RFNEIE0);
 192              		.loc 1 114 5
 193 0088 0221     		movs	r1, #2
 194 008a 3C48     		ldr	r0, .L16+20
 195 008c FFF7FEFF 		bl	can_interrupt_enable
 115:../src/main.c **** 
 116:../src/main.c ****     /* initialize transmit message */
 117:../src/main.c ****     transmit_message.tx_sfid = 0x7ab;
 196              		.loc 1 117 30
 197 0090 3B4B     		ldr	r3, .L16+24
 198 0092 40F2AB72 		movw	r2, #1963
 199 0096 1A60     		str	r2, [r3]
 118:../src/main.c ****     transmit_message.tx_efid = 0x00;
 200              		.loc 1 118 30
 201 0098 394B     		ldr	r3, .L16+24
 202 009a 0022     		movs	r2, #0
 203 009c 5A60     		str	r2, [r3, #4]
 119:../src/main.c ****     transmit_message.tx_ft = CAN_FT_DATA;
 204              		.loc 1 119 28
 205 009e 384B     		ldr	r3, .L16+24
 206 00a0 0022     		movs	r2, #0
 207 00a2 5A72     		strb	r2, [r3, #9]
 120:../src/main.c ****     transmit_message.tx_ff = CAN_FF_STANDARD;
 208              		.loc 1 120 28
 209 00a4 364B     		ldr	r3, .L16+24
 210 00a6 0022     		movs	r2, #0
 211 00a8 1A72     		strb	r2, [r3, #8]
 121:../src/main.c ****     transmit_message.tx_dlen = 8;
 212              		.loc 1 121 30
 213 00aa 354B     		ldr	r3, .L16+24
 214 00ac 0822     		movs	r2, #8
 215 00ae 9A72     		strb	r2, [r3, #10]
 122:../src/main.c **** 
 123:../src/main.c **** #ifdef __FIRMWARE_VERSION_DEFINE
 124:../src/main.c ****     fw_ver = gd32f30x_firmware_version_get();
 216              		.loc 1 124 14
 217 00b0 FFF7FEFF 		bl	gd32f30x_firmware_version_get
 218 00b4 7860     		str	r0, [r7, #4]
 125:../src/main.c ****     /* print firmware version */
 126:../src/main.c ****     printf("\r\nGD32F30x series firmware version: V%d.%d.%d", (uint8_t)(fw_ver >> 24), (uint8_t)(fw
 219              		.loc 1 126 80
 220 00b6 7B68     		ldr	r3, [r7, #4]
 221 00b8 1B0E     		lsrs	r3, r3, #24
 222              		.loc 1 126 63
 223 00ba DBB2     		uxtb	r3, r3
 224              		.loc 1 126 5
 225 00bc 1946     		mov	r1, r3
 226              		.loc 1 126 105
 227 00be 7B68     		ldr	r3, [r7, #4]
 228 00c0 1B0C     		lsrs	r3, r3, #16
 229              		.loc 1 126 88
 230 00c2 DBB2     		uxtb	r3, r3
 231              		.loc 1 126 5
 232 00c4 1A46     		mov	r2, r3
 233              		.loc 1 126 130
 234 00c6 7B68     		ldr	r3, [r7, #4]
 235 00c8 1B0A     		lsrs	r3, r3, #8
 236              		.loc 1 126 113
 237 00ca DBB2     		uxtb	r3, r3
 238              		.loc 1 126 5
 239 00cc 2D48     		ldr	r0, .L16+28
 240 00ce FFF7FEFF 		bl	printf
 241              	.L15:
 127:../src/main.c **** #endif /* __FIRMWARE_VERSION_DEFINE */
 128:../src/main.c **** 
 129:../src/main.c ****     while (1){
 130:../src/main.c **** 
 131:../src/main.c ****             delay_1ms(500);
 242              		.loc 1 131 13
 243 00d2 4FF4FA70 		mov	r0, #500
 244 00d6 FFF7FEFF 		bl	delay_1ms
 132:../src/main.c ****             transmit_message.tx_data[0] = 0xA0;
 245              		.loc 1 132 41
 246 00da 294B     		ldr	r3, .L16+24
 247 00dc A022     		movs	r2, #160
 248 00de DA72     		strb	r2, [r3, #11]
 133:../src/main.c ****             transmit_message.tx_data[1] = 0xA1;
 249              		.loc 1 133 41
 250 00e0 274B     		ldr	r3, .L16+24
 251 00e2 A122     		movs	r2, #161
 252 00e4 1A73     		strb	r2, [r3, #12]
 134:../src/main.c ****             transmit_message.tx_data[2] = 0xA2;
 253              		.loc 1 134 41
 254 00e6 264B     		ldr	r3, .L16+24
 255 00e8 A222     		movs	r2, #162
 256 00ea 5A73     		strb	r2, [r3, #13]
 135:../src/main.c ****             transmit_message.tx_data[3] = 0xA3;
 257              		.loc 1 135 41
 258 00ec 244B     		ldr	r3, .L16+24
 259 00ee A322     		movs	r2, #163
 260 00f0 9A73     		strb	r2, [r3, #14]
 136:../src/main.c ****             transmit_message.tx_data[4] = 0xA4;
 261              		.loc 1 136 41
 262 00f2 234B     		ldr	r3, .L16+24
 263 00f4 A422     		movs	r2, #164
 264 00f6 DA73     		strb	r2, [r3, #15]
 137:../src/main.c ****             transmit_message.tx_data[5] = 0xA5;
 265              		.loc 1 137 41
 266 00f8 214B     		ldr	r3, .L16+24
 267 00fa A522     		movs	r2, #165
 268 00fc 1A74     		strb	r2, [r3, #16]
 138:../src/main.c ****             transmit_message.tx_data[6] = 0xA6;
 269              		.loc 1 138 41
 270 00fe 204B     		ldr	r3, .L16+24
 271 0100 A622     		movs	r2, #166
 272 0102 5A74     		strb	r2, [r3, #17]
 139:../src/main.c ****             transmit_message.tx_data[7] = 0xA7;
 273              		.loc 1 139 41
 274 0104 1E4B     		ldr	r3, .L16+24
 275 0106 A722     		movs	r2, #167
 276 0108 9A74     		strb	r2, [r3, #18]
 140:../src/main.c ****             printf("\r\n can0 transmit data:");
 277              		.loc 1 140 13
 278 010a 1F48     		ldr	r0, .L16+32
 279 010c FFF7FEFF 		bl	printf
 141:../src/main.c ****             for(i = 0; i < transmit_message.tx_dlen; i++){
 280              		.loc 1 141 19
 281 0110 0023     		movs	r3, #0
 282 0112 FB73     		strb	r3, [r7, #15]
 283              		.loc 1 141 13
 284 0114 0AE0     		b	.L10
 285              	.L11:
 142:../src/main.c ****                 printf(" %02x", transmit_message.tx_data[i]);
 286              		.loc 1 142 57 discriminator 3
 287 0116 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 288 0118 194A     		ldr	r2, .L16+24
 289 011a 1344     		add	r3, r3, r2
 290 011c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 291              		.loc 1 142 17 discriminator 3
 292 011e 1946     		mov	r1, r3
 293 0120 1A48     		ldr	r0, .L16+36
 294 0122 FFF7FEFF 		bl	printf
 141:../src/main.c ****             for(i = 0; i < transmit_message.tx_dlen; i++){
 295              		.loc 1 141 55 discriminator 3
 296 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 297 0128 0133     		adds	r3, r3, #1
 298 012a FB73     		strb	r3, [r7, #15]
 299              	.L10:
 141:../src/main.c ****             for(i = 0; i < transmit_message.tx_dlen; i++){
 300              		.loc 1 141 44 discriminator 1
 301 012c 144B     		ldr	r3, .L16+24
 302 012e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 141:../src/main.c ****             for(i = 0; i < transmit_message.tx_dlen; i++){
 303              		.loc 1 141 13 discriminator 1
 304 0130 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 305 0132 9A42     		cmp	r2, r3
 306 0134 EFD3     		bcc	.L11
 143:../src/main.c ****             }
 144:../src/main.c **** 
 145:../src/main.c ****             /* transmit message */
 146:../src/main.c ****             transmit_mailbox = can_message_transmit(CAN0, &transmit_message);
 307              		.loc 1 146 32
 308 0136 1249     		ldr	r1, .L16+24
 309 0138 1048     		ldr	r0, .L16+20
 310 013a FFF7FEFF 		bl	can_message_transmit
 311 013e 0346     		mov	r3, r0
 312 0140 FB70     		strb	r3, [r7, #3]
 147:../src/main.c ****             /* waiting for transmit completed */
 148:../src/main.c ****             timeout = 0xFFFF;
 313              		.loc 1 148 21
 314 0142 4FF6FF73 		movw	r3, #65535
 315 0146 BB60     		str	r3, [r7, #8]
 149:../src/main.c ****             while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout
 316              		.loc 1 149 18
 317 0148 02E0     		b	.L12
 318              	.L14:
 150:../src/main.c ****                 timeout--;
 319              		.loc 1 150 24
 320 014a BB68     		ldr	r3, [r7, #8]
 321 014c 013B     		subs	r3, r3, #1
 322 014e BB60     		str	r3, [r7, #8]
 323              	.L12:
 149:../src/main.c ****             while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout
 324              		.loc 1 149 39
 325 0150 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 326 0152 1946     		mov	r1, r3
 327 0154 0948     		ldr	r0, .L16+20
 328 0156 FFF7FEFF 		bl	can_transmit_states
 329 015a 0346     		mov	r3, r0
 149:../src/main.c ****             while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout
 330              		.loc 1 149 18
 331 015c 012B     		cmp	r3, #1
 332 015e B8D0     		beq	.L15
 149:../src/main.c ****             while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout
 333              		.loc 1 149 84 discriminator 1
 334 0160 BB68     		ldr	r3, [r7, #8]
 335 0162 002B     		cmp	r3, #0
 336 0164 F1D1     		bne	.L14
 131:../src/main.c ****             transmit_message.tx_data[0] = 0xA0;
 337              		.loc 1 131 13
 338 0166 B4E7     		b	.L15
 339              	.L17:
 340              		.align	2
 341              	.L16:
 342 0168 00380140 		.word	1073821696
 343 016c 00000000 		.word	.LC0
 344 0170 10000000 		.word	.LC1
 345 0174 20000000 		.word	.LC2
 346 0178 30000000 		.word	.LC3
 347 017c 00640040 		.word	1073767424
 348 0180 00000000 		.word	transmit_message
 349 0184 40000000 		.word	.LC4
 350 0188 70000000 		.word	.LC5
 351 018c 88000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE120:
 355              		.section	.text.can_networking_init,"ax",%progbits
 356              		.align	1
 357              		.global	can_networking_init
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	can_networking_init:
 364              	.LFB121:
 151:../src/main.c ****             }
 152:../src/main.c **** 
 153:../src/main.c **** 
 154:../src/main.c ****     }
 155:../src/main.c **** }
 156:../src/main.c **** 
 157:../src/main.c **** /*!
 158:../src/main.c ****     \brief      initialize CAN and filter
 159:../src/main.c ****     \param[in]  none
 160:../src/main.c ****     \param[out] none
 161:../src/main.c ****     \retval     none
 162:../src/main.c **** */
 163:../src/main.c **** void can_networking_init(void)
 164:../src/main.c **** {
 365              		.loc 1 164 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 32
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369 0000 80B5     		push	{r7, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 88B0     		sub	sp, sp, #32
 374              		.cfi_def_cfa_offset 40
 375 0004 00AF     		add	r7, sp, #0
 376              		.cfi_def_cfa_register 7
 165:../src/main.c ****     can_parameter_struct can_parameter;
 166:../src/main.c ****     can_filter_parameter_struct can_filter;
 167:../src/main.c ****     /* initialize CAN structures */
 168:../src/main.c ****     can_struct_para_init(CAN_INIT_STRUCT, &can_parameter);
 377              		.loc 1 168 5
 378 0006 07F11403 		add	r3, r7, #20
 379 000a 1946     		mov	r1, r3
 380 000c 0020     		movs	r0, #0
 381 000e FFF7FEFF 		bl	can_struct_para_init
 169:../src/main.c ****     can_struct_para_init(CAN_FILTER_STRUCT, &can_filter);
 382              		.loc 1 169 5
 383 0012 3B46     		mov	r3, r7
 384 0014 1946     		mov	r1, r3
 385 0016 0120     		movs	r0, #1
 386 0018 FFF7FEFF 		bl	can_struct_para_init
 170:../src/main.c ****     /* initialize CAN register */
 171:../src/main.c ****     can_deinit(CAN0);
 387              		.loc 1 171 5
 388 001c 1C48     		ldr	r0, .L19
 389 001e FFF7FEFF 		bl	can_deinit
 172:../src/main.c **** 
 173:../src/main.c ****     /* initialize CAN */
 174:../src/main.c ****     can_parameter.time_triggered = DISABLE;
 390              		.loc 1 174 34
 391 0022 0023     		movs	r3, #0
 392 0024 3B76     		strb	r3, [r7, #24]
 175:../src/main.c ****     can_parameter.auto_bus_off_recovery = ENABLE;
 393              		.loc 1 175 41
 394 0026 0123     		movs	r3, #1
 395 0028 7B76     		strb	r3, [r7, #25]
 176:../src/main.c ****     can_parameter.auto_wake_up = DISABLE;
 396              		.loc 1 176 32
 397 002a 0023     		movs	r3, #0
 398 002c BB76     		strb	r3, [r7, #26]
 177:../src/main.c ****     can_parameter.auto_retrans = ENABLE;
 399              		.loc 1 177 32
 400 002e 0123     		movs	r3, #1
 401 0030 FB76     		strb	r3, [r7, #27]
 178:../src/main.c ****     can_parameter.rec_fifo_overwrite = DISABLE;
 402              		.loc 1 178 38
 403 0032 0023     		movs	r3, #0
 404 0034 3B77     		strb	r3, [r7, #28]
 179:../src/main.c ****     can_parameter.trans_fifo_order = DISABLE;
 405              		.loc 1 179 36
 406 0036 0023     		movs	r3, #0
 407 0038 7B77     		strb	r3, [r7, #29]
 180:../src/main.c ****     can_parameter.working_mode = CAN_NORMAL_MODE;
 408              		.loc 1 180 32
 409 003a 0023     		movs	r3, #0
 410 003c 3B75     		strb	r3, [r7, #20]
 181:../src/main.c ****     can_parameter.resync_jump_width = CAN_BT_SJW_1TQ;
 411              		.loc 1 181 37
 412 003e 0023     		movs	r3, #0
 413 0040 7B75     		strb	r3, [r7, #21]
 182:../src/main.c ****     can_parameter.time_segment_1 = CAN_BT_BS1_7TQ;
 414              		.loc 1 182 34
 415 0042 0623     		movs	r3, #6
 416 0044 BB75     		strb	r3, [r7, #22]
 183:../src/main.c ****     can_parameter.time_segment_2 = CAN_BT_BS2_2TQ;
 417              		.loc 1 183 34
 418 0046 0123     		movs	r3, #1
 419 0048 FB75     		strb	r3, [r7, #23]
 184:../src/main.c ****     /* baudrate 1Mbps */
 185:../src/main.c ****     can_parameter.prescaler = 36;
 420              		.loc 1 185 29
 421 004a 2423     		movs	r3, #36
 422 004c FB83     		strh	r3, [r7, #30]	@ movhi
 186:../src/main.c ****     can_init(CAN0, &can_parameter);
 423              		.loc 1 186 5
 424 004e 07F11403 		add	r3, r7, #20
 425 0052 1946     		mov	r1, r3
 426 0054 0E48     		ldr	r0, .L19
 427 0056 FFF7FEFF 		bl	can_init
 187:../src/main.c **** 
 188:../src/main.c ****     /* initialize filter */
 189:../src/main.c ****     /* CAN0 filter number */
 190:../src/main.c ****     can_filter.filter_number = 0;
 428              		.loc 1 190 30
 429 005a 0023     		movs	r3, #0
 430 005c 7B81     		strh	r3, [r7, #10]	@ movhi
 191:../src/main.c **** 
 192:../src/main.c ****     /* initialize filter */
 193:../src/main.c ****     can_filter.filter_mode = CAN_FILTERMODE_MASK;
 431              		.loc 1 193 28
 432 005e 0023     		movs	r3, #0
 433 0060 BB81     		strh	r3, [r7, #12]	@ movhi
 194:../src/main.c ****     can_filter.filter_bits = CAN_FILTERBITS_32BIT;
 434              		.loc 1 194 28
 435 0062 0123     		movs	r3, #1
 436 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 195:../src/main.c ****     can_filter.filter_list_high = 0x0000;
 437              		.loc 1 195 33
 438 0066 0023     		movs	r3, #0
 439 0068 3B80     		strh	r3, [r7]	@ movhi
 196:../src/main.c ****     can_filter.filter_list_low = 0x0000;
 440              		.loc 1 196 32
 441 006a 0023     		movs	r3, #0
 442 006c 7B80     		strh	r3, [r7, #2]	@ movhi
 197:../src/main.c ****     can_filter.filter_mask_high = 0x0000;
 443              		.loc 1 197 33
 444 006e 0023     		movs	r3, #0
 445 0070 BB80     		strh	r3, [r7, #4]	@ movhi
 198:../src/main.c ****     can_filter.filter_mask_low = 0x0000;
 446              		.loc 1 198 32
 447 0072 0023     		movs	r3, #0
 448 0074 FB80     		strh	r3, [r7, #6]	@ movhi
 199:../src/main.c ****     can_filter.filter_fifo_number = CAN_FIFO0;
 449              		.loc 1 199 35
 450 0076 0023     		movs	r3, #0
 451 0078 3B81     		strh	r3, [r7, #8]	@ movhi
 200:../src/main.c ****     can_filter.filter_enable = ENABLE;
 452              		.loc 1 200 30
 453 007a 0123     		movs	r3, #1
 454 007c 3B74     		strb	r3, [r7, #16]
 201:../src/main.c ****     can_filter_init(&can_filter);
 455              		.loc 1 201 5
 456 007e 3B46     		mov	r3, r7
 457 0080 1846     		mov	r0, r3
 458 0082 FFF7FEFF 		bl	can_filter_init
 202:../src/main.c **** }
 459              		.loc 1 202 1
 460 0086 00BF     		nop
 461 0088 2037     		adds	r7, r7, #32
 462              		.cfi_def_cfa_offset 8
 463 008a BD46     		mov	sp, r7
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 008c 80BD     		pop	{r7, pc}
 467              	.L20:
 468 008e 00BF     		.align	2
 469              	.L19:
 470 0090 00640040 		.word	1073767424
 471              		.cfi_endproc
 472              	.LFE121:
 474              		.section	.text.gpio_config,"ax",%progbits
 475              		.align	1
 476              		.global	gpio_config
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu softvfp
 482              	gpio_config:
 483              	.LFB122:
 203:../src/main.c **** 
 204:../src/main.c **** /*!
 205:../src/main.c ****     \brief      configure GPIO
 206:../src/main.c ****     \param[in]  none
 207:../src/main.c ****     \param[out] none
 208:../src/main.c ****     \retval     none
 209:../src/main.c **** */
 210:../src/main.c **** void gpio_config(void)
 211:../src/main.c **** {
 484              		.loc 1 211 1
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 212:../src/main.c ****     /* enable can clock */
 213:../src/main.c ****     rcu_periph_clock_enable(RCU_CAN0);
 494              		.loc 1 213 5
 495 0004 40F21970 		movw	r0, #1817
 496 0008 FFF7FEFF 		bl	rcu_periph_clock_enable
 214:../src/main.c ****     rcu_periph_clock_enable(RCU_GPIOA);
 497              		.loc 1 214 5
 498 000c 40F20260 		movw	r0, #1538
 499 0010 FFF7FEFF 		bl	rcu_periph_clock_enable
 215:../src/main.c **** 
 216:../src/main.c ****     /* configure CAN0 GPIO, CAN0_TX(PD1) and CAN0_RX(PD0) */
 217:../src/main.c ****     gpio_init(GPIOA, GPIO_MODE_AF_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_12);
 500              		.loc 1 217 5
 501 0014 4FF48053 		mov	r3, #4096
 502 0018 0322     		movs	r2, #3
 503 001a 1821     		movs	r1, #24
 504 001c 0548     		ldr	r0, .L22
 505 001e FFF7FEFF 		bl	gpio_init
 218:../src/main.c **** 
 219:../src/main.c ****     gpio_init(GPIOA, GPIO_MODE_IPU, GPIO_OSPEED_50MHZ, GPIO_PIN_11);
 506              		.loc 1 219 5
 507 0022 4FF40063 		mov	r3, #2048
 508 0026 0322     		movs	r2, #3
 509 0028 4821     		movs	r1, #72
 510 002a 0248     		ldr	r0, .L22
 511 002c FFF7FEFF 		bl	gpio_init
 220:../src/main.c **** 
 221:../src/main.c ****     //gpio_pin_remap_config(GPIO_CAN_FULL_REMAP,ENABLE);
 222:../src/main.c **** }
 512              		.loc 1 222 1
 513 0030 00BF     		nop
 514 0032 80BD     		pop	{r7, pc}
 515              	.L23:
 516              		.align	2
 517              	.L22:
 518 0034 00080140 		.word	1073809408
 519              		.cfi_endproc
 520              	.LFE122:
 522              		.section	.text.nvic_config,"ax",%progbits
 523              		.align	1
 524              		.global	nvic_config
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu softvfp
 530              	nvic_config:
 531              	.LFB123:
 223:../src/main.c **** /*!
 224:../src/main.c ****     \brief      configure the nested vectored interrupt controller
 225:../src/main.c ****     \param[in]  none
 226:../src/main.c ****     \param[out] none
 227:../src/main.c ****     \retval     none
 228:../src/main.c **** */
 229:../src/main.c **** void nvic_config(void)
 230:../src/main.c **** {
 532              		.loc 1 230 1
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 231:../src/main.c ****     /* configure CAN0 NVIC */
 232:../src/main.c ****     nvic_irq_enable(USBD_LP_CAN0_RX0_IRQn,0,0);
 542              		.loc 1 232 5
 543 0004 0022     		movs	r2, #0
 544 0006 0021     		movs	r1, #0
 545 0008 1420     		movs	r0, #20
 546 000a FFF7FEFF 		bl	nvic_irq_enable
 233:../src/main.c **** }
 547              		.loc 1 233 1
 548 000e 00BF     		nop
 549 0010 80BD     		pop	{r7, pc}
 550              		.cfi_endproc
 551              	.LFE123:
 553              		.section	.text.__io_putchar,"ax",%progbits
 554              		.align	1
 555              		.global	__io_putchar
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 561              	__io_putchar:
 562              	.LFB124:
 234:../src/main.c **** 
 235:../src/main.c **** #ifdef GD_ECLIPSE_GCC
 236:../src/main.c **** /* retarget the C library printf function to the USART, in Eclipse GCC environment */
 237:../src/main.c **** int __io_putchar(int ch)
 238:../src/main.c **** {
 563              		.loc 1 238 1
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 82B0     		sub	sp, sp, #8
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 239:../src/main.c ****     usart_data_transmit(EVAL_COM0, (uint8_t)ch);
 576              		.loc 1 239 36
 577 0008 7B68     		ldr	r3, [r7, #4]
 578 000a DBB2     		uxtb	r3, r3
 579              		.loc 1 239 5
 580 000c 9BB2     		uxth	r3, r3
 581 000e 1946     		mov	r1, r3
 582 0010 0748     		ldr	r0, .L28
 583 0012 FFF7FEFF 		bl	usart_data_transmit
 240:../src/main.c ****     while(RESET == usart_flag_get(EVAL_COM0, USART_FLAG_TBE));
 584              		.loc 1 240 10
 585 0016 00BF     		nop
 586              	.L26:
 587              		.loc 1 240 20 discriminator 1
 588 0018 0721     		movs	r1, #7
 589 001a 0548     		ldr	r0, .L28
 590 001c FFF7FEFF 		bl	usart_flag_get
 591 0020 0346     		mov	r3, r0
 592              		.loc 1 240 10 discriminator 1
 593 0022 002B     		cmp	r3, #0
 594 0024 F8D0     		beq	.L26
 241:../src/main.c ****     return ch;
 595              		.loc 1 241 12
 596 0026 7B68     		ldr	r3, [r7, #4]
 242:../src/main.c **** }
 597              		.loc 1 242 1
 598 0028 1846     		mov	r0, r3
 599 002a 0837     		adds	r7, r7, #8
 600              		.cfi_def_cfa_offset 8
 601 002c BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 002e 80BD     		pop	{r7, pc}
 605              	.L29:
 606              		.align	2
 607              	.L28:
 608 0030 00380140 		.word	1073821696
 609              		.cfi_endproc
 610              	.LFE124:
 612              		.section	.bss.timingdelaylocal.8671,"aw",%nobits
 613              		.align	2
 616              	timingdelaylocal.8671:
 617 0000 00000000 		.space	4
 618              		.text
 619              	.Letext0:
 620              		.file 2 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools ar
 621              		.file 3 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools ar
 622              		.file 4 "../Firmware/CMSIS/core_cm4.h"
 623              		.file 5 "../Firmware/CMSIS/GD/GD32F30x/Include/system_gd32f30x.h"
 624              		.file 6 "../Firmware/CMSIS/GD/GD32F30x/Include/gd32f30x.h"
 625              		.file 7 "../Firmware/GD32F30x_standard_peripheral/Include/gd32f30x_rcu.h"
 626              		.file 8 "../Firmware/GD32F30x_standard_peripheral/Include/gd32f30x_can.h"
 627              		.file 9 "../Firmware/GD32F30x_standard_peripheral/Include/gd32f30x_dbg.h"
 628              		.file 10 "../Firmware/GD32F30x_standard_peripheral/Include/gd32f30x_usart.h"
 629              		.file 11 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools a
 630              		.file 12 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools a
 631              		.file 13 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools a
 632              		.file 14 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools a
 633              		.file 15 "../inc/gd32f307c_eval.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000014 transmit_message
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:17     .text.led_spark:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:25     .text.led_spark:00000000 led_spark
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:79     .text.led_spark:0000003c $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:616    .bss.timingdelaylocal.8671:00000000 timingdelaylocal.8671
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:84     .rodata:00000000 $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:107    .text.main:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:114    .text.main:00000000 main
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:482    .text.gpio_config:00000000 gpio_config
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:363    .text.can_networking_init:00000000 can_networking_init
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:342    .text.main:00000168 $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:356    .text.can_networking_init:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:470    .text.can_networking_init:00000090 $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:475    .text.gpio_config:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:518    .text.gpio_config:00000034 $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:523    .text.nvic_config:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:530    .text.nvic_config:00000000 nvic_config
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:554    .text.__io_putchar:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:561    .text.__io_putchar:00000000 __io_putchar
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:608    .text.__io_putchar:00000030 $d
C:\Users\gaswerke\AppData\Local\Temp\ccWSPQPQ.s:613    .bss.timingdelaylocal.8671:00000000 $d
                           .group:00000000 wm4.0.0b2cbd0a579afdcbc37120f4ceb86892
                           .group:00000000 wm4.gd32f30x.h.39.a203e36f89dbb1753b66e1e665732b11
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.6f0a9ac4bbc7fecc10f22e6a71f29e52
                           .group:00000000 wm4.system_gd32f30x.h.38.120525a84dcd3d76a4734e6bcde7b49c
                           .group:00000000 wm4.gd32f30x.h.294.5e6753de52124d3e3ab34f8aafd628cc
                           .group:00000000 wm4.gd32f30x_rcu.h.41.eb7011467c51e1274d4ea5dfbe3b7403
                           .group:00000000 wm4.gd32f30x_adc.h.36.124b47377c29d63ea85a6515ff99e7d0
                           .group:00000000 wm4.gd32f30x_can.h.36.85eb2b9bdffce148e9f2cf53e35a47f8
                           .group:00000000 wm4.gd32f30x_crc.h.36.3e50e7397bf79ecca0d280169ab2b7e1
                           .group:00000000 wm4.gd32f30x_ctc.h.36.42aeab0e42f8a7b6cc58608cdc08a712
                           .group:00000000 wm4.gd32f30x_dac.h.36.f867e713911fc6770d5f38223b88a122
                           .group:00000000 wm4.gd32f30x_dbg.h.36.4d3777753862ded915f1f9e71f4c290a
                           .group:00000000 wm4.gd32f30x_dma.h.36.00aa3536820feed4ebeab0c0060e7723
                           .group:00000000 wm4.gd32f30x_exti.h.36.64affc4e75ae7f53393e90b0bfc38f38
                           .group:00000000 wm4.gd32f30x_fmc.h.37.17b3f65aacec1755989aca30031b6a7c
                           .group:00000000 wm4.gd32f30x_fwdgt.h.36.1e7c1bfe259ede52150f5b1c58591a95
                           .group:00000000 wm4.gd32f30x_gpio.h.36.faffc48a681d1163918cf519d3cc7454
                           .group:00000000 wm4.gd32f30x_i2c.h.36.5765e4fd7e67145781f52c3602fdf526
                           .group:00000000 wm4.gd32f30x_pmu.h.37.9dd0def5d1159a6e20d49fadc0da3d91
                           .group:00000000 wm4.gd32f30x_bkp.h.36.74dcfa31c344ae6ddc6f3a850e1b1f1c
                           .group:00000000 wm4.gd32f30x_rtc.h.37.6e2dc4b1c1143d8443b19d8b8578e187
                           .group:00000000 wm4.gd32f30x_sdio.h.36.6dde0ac1ffebc8ac87750ca48ebf5355
                           .group:00000000 wm4.gd32f30x_spi.h.36.761dbcfdf151612384a2a7e1dfbd70a2
                           .group:00000000 wm4.gd32f30x_timer.h.36.aa3a076608594e31d0be360d6248cd0c
                           .group:00000000 wm4.gd32f30x_usart.h.36.c16033d6419d9317c5e1d5c9a4db894a
                           .group:00000000 wm4.gd32f30x_wwdgt.h.37.074fc90df4806e0bcba242ad61cb154f
                           .group:00000000 wm4.gd32f30x_misc.h.36.ca5ec56efc9d42fdcdbc33fa419c4320
                           .group:00000000 wm4.gd32f30x_enet.h.36.7f39b2eaaae239e349e809a8bdf838ed
                           .group:00000000 wm4.gd32f30x_exmc.h.36.6a5eb51a45aba96edb0f318836bccfc7
                           .group:00000000 wm4.newlib.h.8.2aecb9f3b2dc9d2e83d06d10f0c6ed3e
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f307c_eval.h.36.6c21755df5c357c4540b0169fa213b5b

UNDEFINED SYMBOLS
gd_eval_led_on
gd_eval_led_off
SystemInit
systick_config
gd_eval_led_init
gd_eval_com_init
gd_eval_key_init
rcu_clock_freq_get
printf
can_interrupt_enable
gd32f30x_firmware_version_get
delay_1ms
can_message_transmit
can_transmit_states
can_struct_para_init
can_deinit
can_init
can_filter_init
rcu_periph_clock_enable
gpio_init
nvic_irq_enable
usart_data_transmit
usart_flag_get
