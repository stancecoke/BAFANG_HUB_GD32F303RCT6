
CAN_TEST.elf:     file format elf32-littlearm
CAN_TEST.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0800087d

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00002e44 memsz 0x00002e44 flags rwx
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x08002e44 align 2**16
         filesz 0x000000ec memsz 0x0000013c flags rw-
    LOAD off    0x0002013c vaddr 0x2000013c paddr 0x08002f30 align 2**16
         filesz 0x00000000 memsz 0x00000c04 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .vectors        00000130  08000000  08000000  00010000  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text           00002bcc  08000130  08000130  00010130  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata         00000140  08002cfc  08002cfc  00012cfc  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.attributes 0000002a  08002e3c  08002e3c  000200ec  2**0  CONTENTS, READONLY
  4 .init_array     00000004  08002e3c  08002e3c  00012e3c  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array     00000004  08002e40  08002e40  00012e40  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data           000000ec  20000000  08002e44  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss            00000050  200000ec  08002f30  000200ec  2**2  ALLOC
  8 .heap_stack     00000c04  2000013c  08002f30  0002013c  2**0  ALLOC
  9 .debug_info     0000792a  00000000  00000000  00020116  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev   00001674  00000000  00000000  00027a40  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges  000007b8  00000000  00000000  000290b8  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges   000006f0  00000000  00000000  00029870  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro    0000d57a  00000000  00000000  00029f60  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_line     00006dbe  00000000  00000000  000374da  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_str      000350f4  00000000  00000000  0003e298  2**0  CONTENTS, READONLY, DEBUGGING
 16 .comment        00000066  00000000  00000000  0007338c  2**0  CONTENTS, READONLY
 17 .debug_frame    00002818  00000000  00000000  000733f4  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  .vectors	00000000 .vectors
08000130 l    d  .text	00000000 .text
08002cfc l    d  .rodata	00000000 .rodata
08002e3c l    d  .ARM.attributes	00000000 .ARM.attributes
08002e3c l    d  .init_array	00000000 .init_array
08002e40 l    d  .fini_array	00000000 .fini_array
20000000 l    d  .data	00000000 .data
200000ec l    d  .bss	00000000 .bss
2000013c l    d  .heap_stack	00000000 .heap_stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./gcc_startup/startup_gd32f30x_hd.o
08000888 l       .text	00000000 DataInit
08000880 l       .text	00000000 CopyData
0800089c l       .text	00000000 Zerobss
08000896 l       .text	00000000 FillZerobss
080008c4 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 crtstuff.c
08002ce4 l     O .text	00000000 __EH_FRAME_BEGIN__
080001d0 l     F .text	00000000 __do_global_dtors_aux
200000ec l     O .bss	00000000 completed.8911
08002e40 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
080001f4 l     F .text	00000000 frame_dummy
200000f0 l     O .bss	00000000 object.8916
08002e3c l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 gd32f307c_eval.c
20000000 l     O .data	00000010 GPIO_PORT
20000010 l     O .data	00000010 GPIO_PIN
20000020 l     O .data	00000004 COM_CLK
20000024 l     O .data	00000008 COM_TX_PIN
2000002c l     O .data	00000008 COM_RX_PIN
20000034 l     O .data	00000008 COM_GPIO_PORT
2000003c l     O .data	00000004 COM_GPIO_CLK
20000040 l     O .data	00000008 GPIO_CLK
20000048 l     O .data	0000000c KEY_PORT
20000054 l     O .data	0000000c KEY_PIN
20000060 l     O .data	00000006 KEY_CLK
20000068 l     O .data	0000000c KEY_EXTI_LINE
20000074 l     O .data	00000003 KEY_PORT_SOURCE
20000078 l     O .data	00000003 KEY_PIN_SOURCE
2000007c l     O .data	00000003 KEY_IRQn
00000000 l    df *ABS*	00000000 gd32f30x_it.c
00000000 l    df *ABS*	00000000 main.c
20000108 l     O .bss	00000004 timingdelaylocal.8671
00000000 l    df *ABS*	00000000 systick.c
08000764 l     F .text	00000054 NVIC_SetPriority
080007b8 l     F .text	00000044 SysTick_Config
2000010c l     O .bss	00000004 delay
00000000 l    df *ABS*	00000000 gd32f30x_can.c
00000000 l    df *ABS*	00000000 gd32f30x_exti.c
00000000 l    df *ABS*	00000000 gd32f30x_gpio.c
00000000 l    df *ABS*	00000000 gd32f30x_misc.c
00000000 l    df *ABS*	00000000 gd32f30x_rcu.c
00000000 l    df *ABS*	00000000 gd32f30x_usart.c
00000000 l    df *ABS*	00000000 syscalls.c
20000080 l     O .data	00000004 curbrk.6120
00000000 l    df *ABS*	00000000 system_gd32f30x.c
08001af8 l     F .text	00000032 _soft_delay_
08001c80 l     F .text	0000000c system_clock_config
08001c8c l     F .text	0000014c system_clock_120m_hxtal
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 findfp.c
08001e70 l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
080021b0 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 c:/gd32embeddedbuilder_1.5.3.31964/gd32embeddedbuilder_1.5.3.31964/tools/gnu tools arm embedded/xpack-arm-none-eabi-gcc/9.2.1-1.1/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7e-m/nofp/crti.o
00000000 l    df *ABS*	00000000 c:/gd32embeddedbuilder_1.5.3.31964/gd32embeddedbuilder_1.5.3.31964/tools/gnu tools arm embedded/xpack-arm-none-eabi-gcc/9.2.1-1.1/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v7e-m/nofp/crtn.o
00000000 l    df *ABS*	00000000 impure.c
2000008c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
08002e40 l       .init_array	00000000 __init_array_end
08002e3c l       .ARM.attributes	00000000 __preinit_array_end
08002e3c l       .init_array	00000000 __init_array_start
08002e3c l       .ARM.attributes	00000000 __preinit_array_start
080008c4  w    F .text	00000002 RTC_Alarm_IRQHandler
080008c4  w    F .text	00000002 EXTI2_IRQHandler
08000bd8 g     F .text	00000170 can_filter_init
08002cc4 g     F .text	00000020 _isatty_r
080018fe g     F .text	00000038 usart_transmit_config
08001260 g     F .text	000000f0 gpio_exti_source_select
080008c4  w    F .text	00000002 TIMER2_IRQHandler
08002b78 g     F .text	00000024 _lseek_r
080008c4  w    F .text	00000002 TIMER5_IRQHandler
0800046c g     F .text	0000000c DebugMon_Handler
080008c4  w    F .text	00000002 LVD_IRQHandler
08000000 g       .vectors	00000130 __gVectors
08000380 g     F .text	000000bc gd_eval_com_init
08001e40 g     F .text	00000030 printf
20000130 g     O .bss	00000001 __lock___atexit_recursive_mutex
08002802 g     F .text	00000024 __sseek
08001f20 g     F .text	00000070 __sinit
080008c4  w    F .text	00000002 TIMER0_BRK_IRQHandler
08002830 g     F .text	000000a4 __swbuf_r
08000448 g     F .text	00000006 HardFault_Handler
08001ec4 g     F .text	0000002c __sfmoreglue
08002c70 g     F .text	0000000c __malloc_unlock
080008c4  w    F .text	00000002 ADC0_1_IRQHandler
080006f8 g     F .text	00000038 gpio_config
08000484 g     F .text	00000010 SysTick_Handler
08000858 g     F .text	00000024 delay_decrement
080008c4  w    F .text	00000002 TIMER0_UP_IRQHandler
20000131 g     O .bss	00000001 __lock___arc4random_mutex
080008c4  w    F .text	00000002 SDIO_IRQHandler
08002e44 g       *ABS*	00000000 _sidata
08000478 g     F .text	0000000c PendSV_Handler
0800043c g     F .text	0000000c NMI_Handler
08002e3c g       .rodata	00000000 __exidx_end
080008c4  w    F .text	00000002 EXTI3_IRQHandler
08002ca0 g     F .text	00000024 _fstat_r
2000012c g     O .bss	00000004 errno
08001554 g     F .text	000001e4 rcu_clock_freq_get
08002cfc g       .text	00000000 _etext
200000ec g       .bss	00000000 _sbss
00000800 g       *ABS*	00000000 __stack_size
080008c4  w    F .text	00000002 TIMER3_IRQHandler
080008c4  w    F .text	00000002 DMA0_Channel6_IRQHandler
080018dc g     F .text	00000022 usart_enable
08001eb8 g     F .text	0000000c _cleanup_r
080008c4  w    F .text	00000002 I2C0_EV_IRQHandler
080008c4  w    F .text	00000002 EXTI0_IRQHandler
20000084 g     O .data	00000004 SystemCoreClock
080008f4 g     F .text	0000013c can_struct_para_init
0800150c g     F .text	00000048 rcu_periph_reset_disable
08001a74 g     F .text	0000001e _fstat
0800045a g     F .text	00000006 UsageFault_Handler
200000ec g       .bss	00000000 __bss_start__
08001374 g     F .text	00000110 nvic_irq_enable
080008c4  w    F .text	00000002 TIMER4_IRQHandler
20000000 g       .data	00000000 _sdata
080008c4  w    F .text	00000002 SPI1_IRQHandler
080008c4  w    F .text	00000002 DMA0_Channel0_IRQHandler
08002788 g     F .text	00000020 _sbrk_r
080008c4  w    F .text	00000002 TAMPER_IRQHandler
08002c7c g     F .text	00000024 _read_r
080002d4 g     F .text	000000ac gd_eval_key_init
080008c4  w    F .text	00000002 DMA1_Channel0_IRQHandler
08000a30 g     F .text	000001a8 can_init
08000fe8 g     F .text	000000f4 exti_init
20000540 g       .heap_stack	00000000 _heap_end
08002e3c g       .rodata	00000000 __exidx_start
20000132 g     O .bss	00000001 __lock___env_recursive_mutex
08001a92 g     F .text	00000014 _isatty
20000133 g     O .bss	00000001 __lock___sinit_recursive_mutex
08002da4 g     O .rodata	00000004 _global_impure_ptr
08001de8 g     F .text	00000048 __libc_init_array
080008c4  w    F .text	00000002 TIMER6_IRQHandler
080019cc g     F .text	00000058 _sbrk
080008c4  w    F .text	00000002 DMA0_Channel3_IRQHandler
080008c4  w    F .text	00000002 I2C0_ER_IRQHandler
08002ce4 g     F .text	00000000 _init
08001dd8 g     F .text	00000010 gd32f30x_firmware_version_get
08000494 g     F .text	00000040 led_spark
080008c4  w    F .text	00000002 RTC_IRQHandler
2000013c g       .bss	00000000 _ebss
080008c4  w    F .text	00000002 TIMER7_UP_IRQHandler
0800087c  w    F .text	00000034 Reset_Handler
20000134 g     O .bss	00000001 __lock___malloc_recursive_mutex
080008c4  w    F .text	00000002 DMA0_Channel2_IRQHandler
08000d48 g     F .text	000001b6 can_message_transmit
08000210 g     F .text	0000005c gd_eval_led_init
08000830 g     F .text	00000028 delay_1ms
08001936 g     F .text	00000038 usart_receive_config
080008c4  w    F .text	00000002 USART0_IRQHandler
00000400 g       *ABS*	00000000 __heap_size
080008c4  w    F .text	00000002 TIMER1_IRQHandler
08000f00 g     F .text	000000c0 can_transmit_states
08002da8 g     O .rodata	00000020 __sf_fake_stderr
080008c4  w    F .text	00000002 TIMER7_TRG_CMT_IRQHandler
080008c4  w    F .text	00000002 TIMER0_TRG_CMT_IRQHandler
080008c4  w    F .text	00000002 I2C1_EV_IRQHandler
0800205e g     F .text	00000002 __retarget_lock_release_recursive
08000fc0 g     F .text	00000026 can_interrupt_enable
08000130 g       .vectors	00000000 __Vectors_Size
080021da g     F .text	00000024 __sfputs_r
080008c4  w    F .text	00000002 UART4_IRQHandler
08001ef0 g     F .text	0000000c __sfp_lock_acquire
08000130 g     F .text	00000000 memchr
2000013c g       .bss	00000000 __bss_end__
08002060 g     F .text	0000009c _free_r
080008c4  w    F .text	00000002 EXTI10_15_IRQHandler
08000730 g     F .text	00000034 __io_putchar
20000d40 g       .heap_stack	00000000 _sp
080008c4  w    F .text	00000002 DMA1_Channel1_IRQHandler
080008c4 g       .text	00000002 Default_Handler
08001484 g     F .text	00000044 rcu_periph_clock_enable
080008c4  w    F .text	00000002 TIMER7_Channel_IRQHandler
08001aa6 g     F .text	00000018 _lseek
08000664 g     F .text	00000094 can_networking_init
0800026c g     F .text	00000034 gd_eval_led_on
080008c4  w    F .text	00000002 WWDGT_IRQHandler
080008c4  w    F .text	00000002 EXMC_IRQHandler
20000118 g     O .bss	00000014 transmit_message
080029d4 g     F .text	00000020 _close_r
080028f8 g     F .text	000000dc __swsetup_r
08001f90 g     F .text	0000008c __sfp
080017fc g     F .text	000000e0 usart_baudrate_set
08001f14 g     F .text	0000000c __sinit_lock_release
080007fc g     F .text	00000034 systick_config
080027a8 g     F .text	00000022 __sread
08002c64 g     F .text	0000000c __malloc_lock
08002b00 g     F .text	00000078 _fflush_r
080008c4  w    F .text	00000002 ADC2_IRQHandler
080008c4  w    F .text	00000002 SPI2_IRQHandler
08002dc8 g     O .rodata	00000020 __sf_fake_stdin
0800205c g     F .text	00000002 __retarget_lock_acquire_recursive
08001e30 g     F .text	00000010 memset
0800196e g     F .text	00000022 usart_data_transmit
0800044e g     F .text	00000006 MemManage_Handler
080004d4 g     F .text	00000190 main
0800205a g     F .text	00000002 __retarget_lock_init_recursive
080008c4  w    F .text	00000002 USBD_WKUP_IRQHandler
08000460 g     F .text	0000000c SVC_Handler
08002826 g     F .text	00000008 __sclose
080008c4  w    F .text	00000002 RCU_CTC_IRQHandler
080020fc g     F .text	000000b4 _malloc_r
080008c4  w    F .text	00000002 TIMER7_BRK_IRQHandler
080008c4  w    F .text	00000002 EXTI4_IRQHandler
080008c4  w    F .text	00000002 USBD_HP_CAN0_TX_IRQHandler
080008c4  w    F .text	00000002 CAN0_RX1_IRQHandler
08001b2c g     F .text	00000154 SystemInit
080008c4  w    F .text	00000002 DMA0_Channel5_IRQHandler
08002cf0 g     F .text	00000000 _fini
08001e40 g     F .text	00000030 iprintf
08001738 g     F .text	000000c4 usart_deinit
080002a0 g     F .text	00000034 gd_eval_led_off
080028d4 g     F .text	00000024 _write_r
08001350 g     F .text	00000024 nvic_priority_group_set
08002460 g     F .text	000000da _printf_common
20000088 g     O .data	00000004 _impure_ptr
080014c8 g     F .text	00000044 rcu_periph_reset_enable
080029f4 g     F .text	0000010c __sflush_r
080008c4  w    F .text	00000002 EXTI5_9_IRQHandler
080008c4  w    F .text	00000002 DMA0_Channel1_IRQHandler
080008c4  w    F .text	00000002 TIMER0_Channel_IRQHandler
08002b9c g     F .text	00000048 __swhatbuf_r
08000130 g       .vectors	00000000 __Vectors_End
080008c4  w    F .text	00000002 EXTI1_IRQHandler
08001a24 g     F .text	0000003a _write
200000ec g       .data	00000000 _edata
080008c8 g     F .text	0000002c can_deinit
080008c4  w    F .text	00000002 SPI0_IRQHandler
2000013c g       .bss	00000000 _end
20000135 g     O .bss	00000001 __lock___at_quick_exit_mutex
080008c4  w    F .text	00000002 DMA1_Channel3_4_IRQHandler
080010dc g     F .text	0000001c exti_interrupt_flag_clear
080008c4  w    F .text	00000002 USART2_IRQHandler
080027ca g     F .text	00000038 __swrite
080008c4  w    F .text	00000002 CAN0_EWMC_IRQHandler
08002200 g     F .text	00000260 _vfiprintf_r
0800201c g     F .text	0000003e _fwalk_reent
080008c4  w    F .text	00000002 DMA1_Channel2_IRQHandler
08001efc g     F .text	0000000c __sfp_lock_release
08002de8 g     O .rodata	00000020 __sf_fake_stdout
08001abe g     F .text	0000003a _read
080008c4  w    F .text	00000002 USBD_LP_CAN0_RX0_IRQHandler
08000454 g     F .text	00000006 BusFault_Handler
080008c4  w    F .text	00000002 USART1_IRQHandler
20000136 g     O .bss	00000001 __lock___dd_hash_mutex
08002be4 g     F .text	00000080 __smakebuf_r
08001990 g     F .text	0000003c usart_flag_get
20000137 g     O .bss	00000001 __lock___tz_mutex
0800253c g     F .text	0000024c _printf_i
080008c4  w    F .text	00000002 UART3_IRQHandler
20000114 g     O .bss	00000004 __malloc_sbrk_start
080008c4  w    F .text	00000002 I2C1_ER_IRQHandler
080008c4  w    F .text	00000002 FMC_IRQHandler
080010f8 g     F .text	00000168 gpio_init
20000110 g     O .bss	00000004 __malloc_free_list
08002200 g     F .text	00000260 _vfprintf_r
080008c4  w    F .text	00000002 DMA0_Channel4_IRQHandler
20000138 g     O .bss	00000001 __lock___sfp_recursive_mutex
08001a5e g     F .text	00000016 _close
08001f08 g     F .text	0000000c __sinit_lock_acquire



Disassembly of section .text:

08000130 <memchr>:
memchr():
 8000130:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000134:	2a10      	cmp	r2, #16
 8000136:	db2b      	blt.n	8000190 <memchr+0x60>
 8000138:	f010 0f07 	tst.w	r0, #7
 800013c:	d008      	beq.n	8000150 <memchr+0x20>
 800013e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000142:	3a01      	subs	r2, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d02d      	beq.n	80001a4 <memchr+0x74>
 8000148:	f010 0f07 	tst.w	r0, #7
 800014c:	b342      	cbz	r2, 80001a0 <memchr+0x70>
 800014e:	d1f6      	bne.n	800013e <memchr+0xe>
 8000150:	b4f0      	push	{r4, r5, r6, r7}
 8000152:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000156:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800015a:	f022 0407 	bic.w	r4, r2, #7
 800015e:	f07f 0700 	mvns.w	r7, #0
 8000162:	2300      	movs	r3, #0
 8000164:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000168:	3c08      	subs	r4, #8
 800016a:	ea85 0501 	eor.w	r5, r5, r1
 800016e:	ea86 0601 	eor.w	r6, r6, r1
 8000172:	fa85 f547 	uadd8	r5, r5, r7
 8000176:	faa3 f587 	sel	r5, r3, r7
 800017a:	fa86 f647 	uadd8	r6, r6, r7
 800017e:	faa5 f687 	sel	r6, r5, r7
 8000182:	b98e      	cbnz	r6, 80001a8 <memchr+0x78>
 8000184:	d1ee      	bne.n	8000164 <memchr+0x34>
 8000186:	bcf0      	pop	{r4, r5, r6, r7}
 8000188:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800018c:	f002 0207 	and.w	r2, r2, #7
 8000190:	b132      	cbz	r2, 80001a0 <memchr+0x70>
 8000192:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000196:	3a01      	subs	r2, #1
 8000198:	ea83 0301 	eor.w	r3, r3, r1
 800019c:	b113      	cbz	r3, 80001a4 <memchr+0x74>
 800019e:	d1f8      	bne.n	8000192 <memchr+0x62>
 80001a0:	2000      	movs	r0, #0
 80001a2:	4770      	bx	lr
 80001a4:	3801      	subs	r0, #1
 80001a6:	4770      	bx	lr
 80001a8:	2d00      	cmp	r5, #0
 80001aa:	bf06      	itte	eq
 80001ac:	4635      	moveq	r5, r6
 80001ae:	3803      	subeq	r0, #3
 80001b0:	3807      	subne	r0, #7
 80001b2:	f015 0f01 	tst.w	r5, #1
 80001b6:	d107      	bne.n	80001c8 <memchr+0x98>
 80001b8:	3001      	adds	r0, #1
 80001ba:	f415 7f80 	tst.w	r5, #256	; 0x100
 80001be:	bf02      	ittt	eq
 80001c0:	3001      	addeq	r0, #1
 80001c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80001c6:	3001      	addeq	r0, #1
 80001c8:	bcf0      	pop	{r4, r5, r6, r7}
 80001ca:	3801      	subs	r0, #1
 80001cc:	4770      	bx	lr
 80001ce:	bf00      	nop

080001d0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000ec 	.word	0x200000ec
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08002ce4 	.word	0x08002ce4

080001f4 <frame_dummy>:
frame_dummy():
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000f0 	.word	0x200000f0
 800020c:	08002ce4 	.word	0x08002ce4

08000210 <gd_eval_led_init>:
gd_eval_led_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:83
      \arg        LED5
    \param[out] none
    \retval     none
*/
void  gd_eval_led_init (led_typedef_enum lednum)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b082      	sub	sp, #8
 8000214:	af00      	add	r7, sp, #0
 8000216:	4603      	mov	r3, r0
 8000218:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:85
    /* enable the led clock */
    rcu_periph_clock_enable(GPIO_CLK[lednum]);
 800021a:	79fb      	ldrb	r3, [r7, #7]
 800021c:	4a10      	ldr	r2, [pc, #64]	; (8000260 <gd_eval_led_init+0x50>)
 800021e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000222:	4618      	mov	r0, r3
 8000224:	f001 f92e 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:87
    /* configure led GPIO port */ 
    gpio_init(GPIO_PORT[lednum], GPIO_MODE_OUT_PP, GPIO_OSPEED_50MHZ,GPIO_PIN[lednum]);
 8000228:	79fb      	ldrb	r3, [r7, #7]
 800022a:	4a0e      	ldr	r2, [pc, #56]	; (8000264 <gd_eval_led_init+0x54>)
 800022c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8000230:	79fb      	ldrb	r3, [r7, #7]
 8000232:	4a0d      	ldr	r2, [pc, #52]	; (8000268 <gd_eval_led_init+0x58>)
 8000234:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000238:	2203      	movs	r2, #3
 800023a:	2110      	movs	r1, #16
 800023c:	f000 ff5c 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:89

    GPIO_BC(GPIO_PORT[lednum]) = GPIO_PIN[lednum];
 8000240:	79fb      	ldrb	r3, [r7, #7]
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	4907      	ldr	r1, [pc, #28]	; (8000264 <gd_eval_led_init+0x54>)
 8000246:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800024a:	3214      	adds	r2, #20
 800024c:	4611      	mov	r1, r2
 800024e:	4a06      	ldr	r2, [pc, #24]	; (8000268 <gd_eval_led_init+0x58>)
 8000250:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000254:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:90
}
 8000256:	bf00      	nop
 8000258:	3708      	adds	r7, #8
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}
 800025e:	bf00      	nop
 8000260:	20000040 	.word	0x20000040
 8000264:	20000000 	.word	0x20000000
 8000268:	20000010 	.word	0x20000010

0800026c <gd_eval_led_on>:
gd_eval_led_on():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:103
      \arg        LED5
    \param[out] none
    \retval     none
*/
void gd_eval_led_on(led_typedef_enum lednum)
{
 800026c:	b480      	push	{r7}
 800026e:	b083      	sub	sp, #12
 8000270:	af00      	add	r7, sp, #0
 8000272:	4603      	mov	r3, r0
 8000274:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:104
    GPIO_BOP(GPIO_PORT[lednum]) = GPIO_PIN[lednum];
 8000276:	79fb      	ldrb	r3, [r7, #7]
 8000278:	79fa      	ldrb	r2, [r7, #7]
 800027a:	4907      	ldr	r1, [pc, #28]	; (8000298 <gd_eval_led_on+0x2c>)
 800027c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000280:	3210      	adds	r2, #16
 8000282:	4611      	mov	r1, r2
 8000284:	4a05      	ldr	r2, [pc, #20]	; (800029c <gd_eval_led_on+0x30>)
 8000286:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800028a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:105
}
 800028c:	bf00      	nop
 800028e:	370c      	adds	r7, #12
 8000290:	46bd      	mov	sp, r7
 8000292:	bc80      	pop	{r7}
 8000294:	4770      	bx	lr
 8000296:	bf00      	nop
 8000298:	20000000 	.word	0x20000000
 800029c:	20000010 	.word	0x20000010

080002a0 <gd_eval_led_off>:
gd_eval_led_off():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:118
      \arg        LED5
    \param[out] none
    \retval     none
*/
void gd_eval_led_off(led_typedef_enum lednum)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	4603      	mov	r3, r0
 80002a8:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:119
    GPIO_BC(GPIO_PORT[lednum]) = GPIO_PIN[lednum];
 80002aa:	79fb      	ldrb	r3, [r7, #7]
 80002ac:	79fa      	ldrb	r2, [r7, #7]
 80002ae:	4907      	ldr	r1, [pc, #28]	; (80002cc <gd_eval_led_off+0x2c>)
 80002b0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80002b4:	3214      	adds	r2, #20
 80002b6:	4611      	mov	r1, r2
 80002b8:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <gd_eval_led_off+0x30>)
 80002ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002be:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:120
}
 80002c0:	bf00      	nop
 80002c2:	370c      	adds	r7, #12
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bc80      	pop	{r7}
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	20000000 	.word	0x20000000
 80002d0:	20000010 	.word	0x20000010

080002d4 <gd_eval_key_init>:
gd_eval_key_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:151
      \arg        KEY_MODE_EXTI: key will be connected to EXTI line with interrupt
    \param[out] none
    \retval     none
*/
void gd_eval_key_init(key_typedef_enum key_num, keymode_typedef_enum key_mode)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b082      	sub	sp, #8
 80002d8:	af00      	add	r7, sp, #0
 80002da:	4603      	mov	r3, r0
 80002dc:	460a      	mov	r2, r1
 80002de:	71fb      	strb	r3, [r7, #7]
 80002e0:	4613      	mov	r3, r2
 80002e2:	71bb      	strb	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:153
    /* enable the key clock */
    rcu_periph_clock_enable(KEY_CLK[key_num]);
 80002e4:	79fb      	ldrb	r3, [r7, #7]
 80002e6:	4a1f      	ldr	r2, [pc, #124]	; (8000364 <gd_eval_key_init+0x90>)
 80002e8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80002ec:	4618      	mov	r0, r3
 80002ee:	f001 f8c9 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:154
    rcu_periph_clock_enable(RCU_AF);
 80002f2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80002f6:	f001 f8c5 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:157

    /* configure button pin as input */
    gpio_init(KEY_PORT[key_num], GPIO_MODE_IN_FLOATING, GPIO_OSPEED_50MHZ, KEY_PIN[key_num]);
 80002fa:	79fb      	ldrb	r3, [r7, #7]
 80002fc:	4a1a      	ldr	r2, [pc, #104]	; (8000368 <gd_eval_key_init+0x94>)
 80002fe:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8000302:	79fb      	ldrb	r3, [r7, #7]
 8000304:	4a19      	ldr	r2, [pc, #100]	; (800036c <gd_eval_key_init+0x98>)
 8000306:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800030a:	2203      	movs	r2, #3
 800030c:	2104      	movs	r1, #4
 800030e:	f000 fef3 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:159

    if (key_mode == KEY_MODE_EXTI) {
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	2b01      	cmp	r3, #1
 8000316:	d121      	bne.n	800035c <gd_eval_key_init+0x88>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:161
        /* enable and set key EXTI interrupt to the lowest priority */
        nvic_irq_enable(KEY_IRQn[key_num], 2U, 0U);
 8000318:	79fb      	ldrb	r3, [r7, #7]
 800031a:	4a15      	ldr	r2, [pc, #84]	; (8000370 <gd_eval_key_init+0x9c>)
 800031c:	56d3      	ldrsb	r3, [r2, r3]
 800031e:	2200      	movs	r2, #0
 8000320:	2102      	movs	r1, #2
 8000322:	4618      	mov	r0, r3
 8000324:	f001 f826 	bl	8001374 <nvic_irq_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:164

        /* connect key EXTI line to key GPIO pin */
        gpio_exti_source_select(KEY_PORT_SOURCE[key_num], KEY_PIN_SOURCE[key_num]);
 8000328:	79fb      	ldrb	r3, [r7, #7]
 800032a:	4a12      	ldr	r2, [pc, #72]	; (8000374 <gd_eval_key_init+0xa0>)
 800032c:	5cd2      	ldrb	r2, [r2, r3]
 800032e:	79fb      	ldrb	r3, [r7, #7]
 8000330:	4911      	ldr	r1, [pc, #68]	; (8000378 <gd_eval_key_init+0xa4>)
 8000332:	5ccb      	ldrb	r3, [r1, r3]
 8000334:	4619      	mov	r1, r3
 8000336:	4610      	mov	r0, r2
 8000338:	f000 ff92 	bl	8001260 <gpio_exti_source_select>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:167

        /* configure key EXTI line */
        exti_init(KEY_EXTI_LINE[key_num], EXTI_INTERRUPT, EXTI_TRIG_FALLING);
 800033c:	79fb      	ldrb	r3, [r7, #7]
 800033e:	4a0f      	ldr	r2, [pc, #60]	; (800037c <gd_eval_key_init+0xa8>)
 8000340:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000344:	2201      	movs	r2, #1
 8000346:	2100      	movs	r1, #0
 8000348:	4618      	mov	r0, r3
 800034a:	f000 fe4d 	bl	8000fe8 <exti_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:168
        exti_interrupt_flag_clear(KEY_EXTI_LINE[key_num]);
 800034e:	79fb      	ldrb	r3, [r7, #7]
 8000350:	4a0a      	ldr	r2, [pc, #40]	; (800037c <gd_eval_key_init+0xa8>)
 8000352:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000356:	4618      	mov	r0, r3
 8000358:	f000 fec0 	bl	80010dc <exti_interrupt_flag_clear>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:170
    }
}
 800035c:	bf00      	nop
 800035e:	3708      	adds	r7, #8
 8000360:	46bd      	mov	sp, r7
 8000362:	bd80      	pop	{r7, pc}
 8000364:	20000060 	.word	0x20000060
 8000368:	20000048 	.word	0x20000048
 800036c:	20000054 	.word	0x20000054
 8000370:	2000007c 	.word	0x2000007c
 8000374:	20000074 	.word	0x20000074
 8000378:	20000078 	.word	0x20000078
 800037c:	20000068 	.word	0x20000068

08000380 <gd_eval_com_init>:
gd_eval_com_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:195
      \arg        EVAL_COM1: COM1 on the board
    \param[out] none
    \retval     none
*/
void gd_eval_com_init(uint32_t com)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:196
    uint32_t com_id = 0U;
 8000388:	2300      	movs	r3, #0
 800038a:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:197
    if(EVAL_COM0 == com){
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a24      	ldr	r2, [pc, #144]	; (8000420 <gd_eval_com_init+0xa0>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d102      	bne.n	800039a <gd_eval_com_init+0x1a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:198
        com_id = 0U;
 8000394:	2300      	movs	r3, #0
 8000396:	60fb      	str	r3, [r7, #12]
 8000398:	e005      	b.n	80003a6 <gd_eval_com_init+0x26>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:199
    }else if(EVAL_COM1 == com){
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a21      	ldr	r2, [pc, #132]	; (8000424 <gd_eval_com_init+0xa4>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d101      	bne.n	80003a6 <gd_eval_com_init+0x26>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:200
        com_id = 1U;
 80003a2:	2301      	movs	r3, #1
 80003a4:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:204
    }
    
    /* enable GPIO clock */
    rcu_periph_clock_enable(COM_GPIO_CLK[com_id]);
 80003a6:	4a20      	ldr	r2, [pc, #128]	; (8000428 <gd_eval_com_init+0xa8>)
 80003a8:	68fb      	ldr	r3, [r7, #12]
 80003aa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80003ae:	4618      	mov	r0, r3
 80003b0:	f001 f868 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:207

    /* enable USART clock */
    rcu_periph_clock_enable(COM_CLK[com_id]);
 80003b4:	4a1d      	ldr	r2, [pc, #116]	; (800042c <gd_eval_com_init+0xac>)
 80003b6:	68fb      	ldr	r3, [r7, #12]
 80003b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80003bc:	4618      	mov	r0, r3
 80003be:	f001 f861 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:210

    /* connect port to USARTx_Tx */
    gpio_init(COM_GPIO_PORT[com_id], GPIO_MODE_AF_PP, GPIO_OSPEED_50MHZ, COM_TX_PIN[com_id]);
 80003c2:	4a1b      	ldr	r2, [pc, #108]	; (8000430 <gd_eval_com_init+0xb0>)
 80003c4:	68fb      	ldr	r3, [r7, #12]
 80003c6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80003ca:	4a1a      	ldr	r2, [pc, #104]	; (8000434 <gd_eval_com_init+0xb4>)
 80003cc:	68fb      	ldr	r3, [r7, #12]
 80003ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003d2:	2203      	movs	r2, #3
 80003d4:	2118      	movs	r1, #24
 80003d6:	f000 fe8f 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:213

    /* connect port to USARTx_Rx */
    gpio_init(COM_GPIO_PORT[com_id], GPIO_MODE_IN_FLOATING, GPIO_OSPEED_50MHZ, COM_RX_PIN[com_id]);
 80003da:	4a15      	ldr	r2, [pc, #84]	; (8000430 <gd_eval_com_init+0xb0>)
 80003dc:	68fb      	ldr	r3, [r7, #12]
 80003de:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80003e2:	4a15      	ldr	r2, [pc, #84]	; (8000438 <gd_eval_com_init+0xb8>)
 80003e4:	68fb      	ldr	r3, [r7, #12]
 80003e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003ea:	2203      	movs	r2, #3
 80003ec:	2104      	movs	r1, #4
 80003ee:	f000 fe83 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:216

    /* USART configure */
    usart_deinit(com);
 80003f2:	6878      	ldr	r0, [r7, #4]
 80003f4:	f001 f9a0 	bl	8001738 <usart_deinit>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:217
    usart_baudrate_set(com, 115200U);
 80003f8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80003fc:	6878      	ldr	r0, [r7, #4]
 80003fe:	f001 f9fd 	bl	80017fc <usart_baudrate_set>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:218
    usart_receive_config(com, USART_RECEIVE_ENABLE);
 8000402:	2104      	movs	r1, #4
 8000404:	6878      	ldr	r0, [r7, #4]
 8000406:	f001 fa96 	bl	8001936 <usart_receive_config>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:219
    usart_transmit_config(com, USART_TRANSMIT_ENABLE);
 800040a:	2108      	movs	r1, #8
 800040c:	6878      	ldr	r0, [r7, #4]
 800040e:	f001 fa76 	bl	80018fe <usart_transmit_config>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:220
    usart_enable(com);
 8000412:	6878      	ldr	r0, [r7, #4]
 8000414:	f001 fa62 	bl	80018dc <usart_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f307c_eval.c:221
}
 8000418:	bf00      	nop
 800041a:	3710      	adds	r7, #16
 800041c:	46bd      	mov	sp, r7
 800041e:	bd80      	pop	{r7, pc}
 8000420:	40013800 	.word	0x40013800
 8000424:	40004400 	.word	0x40004400
 8000428:	2000003c 	.word	0x2000003c
 800042c:	20000020 	.word	0x20000020
 8000430:	20000034 	.word	0x20000034
 8000434:	20000024 	.word	0x20000024
 8000438:	2000002c 	.word	0x2000002c

0800043c <NMI_Handler>:
NMI_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:46
    \param[in]  none
    \param[out] none
    \retval     none
*/
void NMI_Handler(void)
{
 800043c:	b480      	push	{r7}
 800043e:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:47
}
 8000440:	bf00      	nop
 8000442:	46bd      	mov	sp, r7
 8000444:	bc80      	pop	{r7}
 8000446:	4770      	bx	lr

08000448 <HardFault_Handler>:
HardFault_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:56
    \param[in]  none
    \param[out] none
    \retval     none
*/
void HardFault_Handler(void)
{
 8000448:	b480      	push	{r7}
 800044a:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:58 (discriminator 1)
    /* if Hard Fault exception occurs, go to infinite loop */
    while (1){
 800044c:	e7fe      	b.n	800044c <HardFault_Handler+0x4>

0800044e <MemManage_Handler>:
MemManage_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:69
    \param[in]  none
    \param[out] none
    \retval     none
*/
void MemManage_Handler(void)
{
 800044e:	b480      	push	{r7}
 8000450:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:71 (discriminator 1)
    /* if Memory Manage exception occurs, go to infinite loop */
    while (1){
 8000452:	e7fe      	b.n	8000452 <MemManage_Handler+0x4>

08000454 <BusFault_Handler>:
BusFault_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:82
    \param[in]  none
    \param[out] none
    \retval     none
*/
void BusFault_Handler(void)
{
 8000454:	b480      	push	{r7}
 8000456:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:84 (discriminator 1)
    /* if Bus Fault exception occurs, go to infinite loop */
    while (1){
 8000458:	e7fe      	b.n	8000458 <BusFault_Handler+0x4>

0800045a <UsageFault_Handler>:
UsageFault_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:95
    \param[in]  none
    \param[out] none
    \retval     none
*/
void UsageFault_Handler(void)
{
 800045a:	b480      	push	{r7}
 800045c:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:97 (discriminator 1)
    /* if Usage Fault exception occurs, go to infinite loop */
    while (1){
 800045e:	e7fe      	b.n	800045e <UsageFault_Handler+0x4>

08000460 <SVC_Handler>:
SVC_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:108
    \param[in]  none
    \param[out] none
    \retval     none
*/
void SVC_Handler(void)
{
 8000460:	b480      	push	{r7}
 8000462:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:109
}
 8000464:	bf00      	nop
 8000466:	46bd      	mov	sp, r7
 8000468:	bc80      	pop	{r7}
 800046a:	4770      	bx	lr

0800046c <DebugMon_Handler>:
DebugMon_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:118
    \param[in]  none
    \param[out] none
    \retval     none
*/
void DebugMon_Handler(void)
{
 800046c:	b480      	push	{r7}
 800046e:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:119
}
 8000470:	bf00      	nop
 8000472:	46bd      	mov	sp, r7
 8000474:	bc80      	pop	{r7}
 8000476:	4770      	bx	lr

08000478 <PendSV_Handler>:
PendSV_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:128
    \param[in]  none
    \param[out] none
    \retval     none
*/
void PendSV_Handler(void)
{
 8000478:	b480      	push	{r7}
 800047a:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:129
}
 800047c:	bf00      	nop
 800047e:	46bd      	mov	sp, r7
 8000480:	bc80      	pop	{r7}
 8000482:	4770      	bx	lr

08000484 <SysTick_Handler>:
SysTick_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:138
    \param[in]  none
    \param[out] none
    \retval     none
*/
void SysTick_Handler(void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:139
    led_spark();
 8000488:	f000 f804 	bl	8000494 <led_spark>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:140
    delay_decrement();
 800048c:	f000 f9e4 	bl	8000858 <delay_decrement>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/gd32f30x_it.c:141
}
 8000490:	bf00      	nop
 8000492:	bd80      	pop	{r7, pc}

08000494 <led_spark>:
led_spark():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:58
    \param[in]  none
    \param[out] none
    \retval     none
*/
void led_spark(void)
{
 8000494:	b580      	push	{r7, lr}
 8000496:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:61
    static __IO uint32_t timingdelaylocal = 0U;

    if(timingdelaylocal){
 8000498:	4b0d      	ldr	r3, [pc, #52]	; (80004d0 <led_spark+0x3c>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	2b00      	cmp	r3, #0
 800049e:	d011      	beq.n	80004c4 <led_spark+0x30>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:63

        if(timingdelaylocal < 500U){
 80004a0:	4b0b      	ldr	r3, [pc, #44]	; (80004d0 <led_spark+0x3c>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80004a8:	d203      	bcs.n	80004b2 <led_spark+0x1e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:64
            gd_eval_led_on(LED2);
 80004aa:	2000      	movs	r0, #0
 80004ac:	f7ff fede 	bl	800026c <gd_eval_led_on>
 80004b0:	e002      	b.n	80004b8 <led_spark+0x24>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:66
        }else{
            gd_eval_led_off(LED2);
 80004b2:	2000      	movs	r0, #0
 80004b4:	f7ff fef4 	bl	80002a0 <gd_eval_led_off>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:69
        }

        timingdelaylocal--;
 80004b8:	4b05      	ldr	r3, [pc, #20]	; (80004d0 <led_spark+0x3c>)
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	3b01      	subs	r3, #1
 80004be:	4a04      	ldr	r2, [pc, #16]	; (80004d0 <led_spark+0x3c>)
 80004c0:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:73
    }else{
        timingdelaylocal = 1000U;
    }
}
 80004c2:	e003      	b.n	80004cc <led_spark+0x38>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:71
        timingdelaylocal = 1000U;
 80004c4:	4b02      	ldr	r3, [pc, #8]	; (80004d0 <led_spark+0x3c>)
 80004c6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80004ca:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:73
}
 80004cc:	bf00      	nop
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	20000108 	.word	0x20000108

080004d4 <main>:
main():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:83
    \param[out] none
    \retval     none
*/

int main(void)
{
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b084      	sub	sp, #16
 80004d8:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:85
#ifdef __FIRMWARE_VERSION_DEFINE
    uint32_t fw_ver = 0;
 80004da:	2300      	movs	r3, #0
 80004dc:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:87
#endif
    uint8_t i = 0;
 80004de:	2300      	movs	r3, #0
 80004e0:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:88
    uint32_t timeout = 0xFFFF;
 80004e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80004e6:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:89
    uint8_t transmit_mailbox = 0;
 80004e8:	2300      	movs	r3, #0
 80004ea:	70fb      	strb	r3, [r7, #3]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:91
    //receive_flag = RESET;
    SystemInit();
 80004ec:	f001 fb1e 	bl	8001b2c <SystemInit>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:93
    /* configure systick */
    systick_config();
 80004f0:	f000 f984 	bl	80007fc <systick_config>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:95
    /* initialize the LEDs, USART and key */
    gd_eval_led_init(LED2); 
 80004f4:	2000      	movs	r0, #0
 80004f6:	f7ff fe8b 	bl	8000210 <gd_eval_led_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:96
    gd_eval_led_init(LED3); 
 80004fa:	2001      	movs	r0, #1
 80004fc:	f7ff fe88 	bl	8000210 <gd_eval_led_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:97
    gd_eval_led_init(LED4);
 8000500:	2002      	movs	r0, #2
 8000502:	f7ff fe85 	bl	8000210 <gd_eval_led_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:98
    gd_eval_com_init(EVAL_COM0);
 8000506:	484d      	ldr	r0, [pc, #308]	; (800063c <main+0x168>)
 8000508:	f7ff ff3a 	bl	8000380 <gd_eval_com_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:99
    gd_eval_key_init(KEY_WAKEUP, KEY_MODE_GPIO);
 800050c:	2100      	movs	r1, #0
 800050e:	2000      	movs	r0, #0
 8000510:	f7ff fee0 	bl	80002d4 <gd_eval_key_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:102
    
    /* print out the clock frequency of system, AHB, APB1 and APB2 */
    printf("\r\nCK_SYS is %d", rcu_clock_freq_get(CK_SYS));
 8000514:	2000      	movs	r0, #0
 8000516:	f001 f81d 	bl	8001554 <rcu_clock_freq_get>
 800051a:	4603      	mov	r3, r0
 800051c:	4619      	mov	r1, r3
 800051e:	4848      	ldr	r0, [pc, #288]	; (8000640 <main+0x16c>)
 8000520:	f001 fc8e 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:103
    printf("\r\nCK_AHB is %d", rcu_clock_freq_get(CK_AHB));
 8000524:	2001      	movs	r0, #1
 8000526:	f001 f815 	bl	8001554 <rcu_clock_freq_get>
 800052a:	4603      	mov	r3, r0
 800052c:	4619      	mov	r1, r3
 800052e:	4845      	ldr	r0, [pc, #276]	; (8000644 <main+0x170>)
 8000530:	f001 fc86 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:104
    printf("\r\nCK_APB1 is %d", rcu_clock_freq_get(CK_APB1));
 8000534:	2002      	movs	r0, #2
 8000536:	f001 f80d 	bl	8001554 <rcu_clock_freq_get>
 800053a:	4603      	mov	r3, r0
 800053c:	4619      	mov	r1, r3
 800053e:	4842      	ldr	r0, [pc, #264]	; (8000648 <main+0x174>)
 8000540:	f001 fc7e 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:105
    printf("\r\nCK_APB2 is %d", rcu_clock_freq_get(CK_APB2));
 8000544:	2003      	movs	r0, #3
 8000546:	f001 f805 	bl	8001554 <rcu_clock_freq_get>
 800054a:	4603      	mov	r3, r0
 800054c:	4619      	mov	r1, r3
 800054e:	483f      	ldr	r0, [pc, #252]	; (800064c <main+0x178>)
 8000550:	f001 fc76 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:108

    /* configure GPIO */
    gpio_config();
 8000554:	f000 f8d0 	bl	80006f8 <gpio_config>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:111

    /* initialize CAN and CAN filter */
    can_networking_init();
 8000558:	f000 f884 	bl	8000664 <can_networking_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:114

    /* enable CAN receive FIFO0 not empty interrupt */
    can_interrupt_enable(CAN0, CAN_INTEN_RFNEIE0);
 800055c:	2102      	movs	r1, #2
 800055e:	483c      	ldr	r0, [pc, #240]	; (8000650 <main+0x17c>)
 8000560:	f000 fd2e 	bl	8000fc0 <can_interrupt_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:117

    /* initialize transmit message */
    transmit_message.tx_sfid = 0x7ab;
 8000564:	4b3b      	ldr	r3, [pc, #236]	; (8000654 <main+0x180>)
 8000566:	f240 72ab 	movw	r2, #1963	; 0x7ab
 800056a:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:118
    transmit_message.tx_efid = 0x00;
 800056c:	4b39      	ldr	r3, [pc, #228]	; (8000654 <main+0x180>)
 800056e:	2200      	movs	r2, #0
 8000570:	605a      	str	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:119
    transmit_message.tx_ft = CAN_FT_DATA;
 8000572:	4b38      	ldr	r3, [pc, #224]	; (8000654 <main+0x180>)
 8000574:	2200      	movs	r2, #0
 8000576:	725a      	strb	r2, [r3, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:120
    transmit_message.tx_ff = CAN_FF_STANDARD;
 8000578:	4b36      	ldr	r3, [pc, #216]	; (8000654 <main+0x180>)
 800057a:	2200      	movs	r2, #0
 800057c:	721a      	strb	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:121
    transmit_message.tx_dlen = 8;
 800057e:	4b35      	ldr	r3, [pc, #212]	; (8000654 <main+0x180>)
 8000580:	2208      	movs	r2, #8
 8000582:	729a      	strb	r2, [r3, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:124

#ifdef __FIRMWARE_VERSION_DEFINE
    fw_ver = gd32f30x_firmware_version_get();
 8000584:	f001 fc28 	bl	8001dd8 <gd32f30x_firmware_version_get>
 8000588:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:126
    /* print firmware version */
    printf("\r\nGD32F30x series firmware version: V%d.%d.%d", (uint8_t)(fw_ver >> 24), (uint8_t)(fw_ver >> 16), (uint8_t)(fw_ver >> 8));
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	0e1b      	lsrs	r3, r3, #24
 800058e:	b2db      	uxtb	r3, r3
 8000590:	4619      	mov	r1, r3
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	0c1b      	lsrs	r3, r3, #16
 8000596:	b2db      	uxtb	r3, r3
 8000598:	461a      	mov	r2, r3
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	0a1b      	lsrs	r3, r3, #8
 800059e:	b2db      	uxtb	r3, r3
 80005a0:	482d      	ldr	r0, [pc, #180]	; (8000658 <main+0x184>)
 80005a2:	f001 fc4d 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:131
#endif /* __FIRMWARE_VERSION_DEFINE */

    while (1){

            delay_1ms(500);
 80005a6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005aa:	f000 f941 	bl	8000830 <delay_1ms>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:132
            transmit_message.tx_data[0] = 0xA0;
 80005ae:	4b29      	ldr	r3, [pc, #164]	; (8000654 <main+0x180>)
 80005b0:	22a0      	movs	r2, #160	; 0xa0
 80005b2:	72da      	strb	r2, [r3, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:133
            transmit_message.tx_data[1] = 0xA1;
 80005b4:	4b27      	ldr	r3, [pc, #156]	; (8000654 <main+0x180>)
 80005b6:	22a1      	movs	r2, #161	; 0xa1
 80005b8:	731a      	strb	r2, [r3, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:134
            transmit_message.tx_data[2] = 0xA2;
 80005ba:	4b26      	ldr	r3, [pc, #152]	; (8000654 <main+0x180>)
 80005bc:	22a2      	movs	r2, #162	; 0xa2
 80005be:	735a      	strb	r2, [r3, #13]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:135
            transmit_message.tx_data[3] = 0xA3;
 80005c0:	4b24      	ldr	r3, [pc, #144]	; (8000654 <main+0x180>)
 80005c2:	22a3      	movs	r2, #163	; 0xa3
 80005c4:	739a      	strb	r2, [r3, #14]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:136
            transmit_message.tx_data[4] = 0xA4;
 80005c6:	4b23      	ldr	r3, [pc, #140]	; (8000654 <main+0x180>)
 80005c8:	22a4      	movs	r2, #164	; 0xa4
 80005ca:	73da      	strb	r2, [r3, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:137
            transmit_message.tx_data[5] = 0xA5;
 80005cc:	4b21      	ldr	r3, [pc, #132]	; (8000654 <main+0x180>)
 80005ce:	22a5      	movs	r2, #165	; 0xa5
 80005d0:	741a      	strb	r2, [r3, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:138
            transmit_message.tx_data[6] = 0xA6;
 80005d2:	4b20      	ldr	r3, [pc, #128]	; (8000654 <main+0x180>)
 80005d4:	22a6      	movs	r2, #166	; 0xa6
 80005d6:	745a      	strb	r2, [r3, #17]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:139
            transmit_message.tx_data[7] = 0xA7;
 80005d8:	4b1e      	ldr	r3, [pc, #120]	; (8000654 <main+0x180>)
 80005da:	22a7      	movs	r2, #167	; 0xa7
 80005dc:	749a      	strb	r2, [r3, #18]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:140
            printf("\r\n can0 transmit data:");
 80005de:	481f      	ldr	r0, [pc, #124]	; (800065c <main+0x188>)
 80005e0:	f001 fc2e 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:141
            for(i = 0; i < transmit_message.tx_dlen; i++){
 80005e4:	2300      	movs	r3, #0
 80005e6:	73fb      	strb	r3, [r7, #15]
 80005e8:	e00a      	b.n	8000600 <main+0x12c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:142 (discriminator 3)
                printf(" %02x", transmit_message.tx_data[i]);
 80005ea:	7bfb      	ldrb	r3, [r7, #15]
 80005ec:	4a19      	ldr	r2, [pc, #100]	; (8000654 <main+0x180>)
 80005ee:	4413      	add	r3, r2
 80005f0:	7adb      	ldrb	r3, [r3, #11]
 80005f2:	4619      	mov	r1, r3
 80005f4:	481a      	ldr	r0, [pc, #104]	; (8000660 <main+0x18c>)
 80005f6:	f001 fc23 	bl	8001e40 <iprintf>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:141 (discriminator 3)
            for(i = 0; i < transmit_message.tx_dlen; i++){
 80005fa:	7bfb      	ldrb	r3, [r7, #15]
 80005fc:	3301      	adds	r3, #1
 80005fe:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:141 (discriminator 1)
 8000600:	4b14      	ldr	r3, [pc, #80]	; (8000654 <main+0x180>)
 8000602:	7a9b      	ldrb	r3, [r3, #10]
 8000604:	7bfa      	ldrb	r2, [r7, #15]
 8000606:	429a      	cmp	r2, r3
 8000608:	d3ef      	bcc.n	80005ea <main+0x116>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:146
            }

            /* transmit message */
            transmit_mailbox = can_message_transmit(CAN0, &transmit_message);
 800060a:	4912      	ldr	r1, [pc, #72]	; (8000654 <main+0x180>)
 800060c:	4810      	ldr	r0, [pc, #64]	; (8000650 <main+0x17c>)
 800060e:	f000 fb9b 	bl	8000d48 <can_message_transmit>
 8000612:	4603      	mov	r3, r0
 8000614:	70fb      	strb	r3, [r7, #3]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:148
            /* waiting for transmit completed */
            timeout = 0xFFFF;
 8000616:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800061a:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:149
            while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout)){
 800061c:	e002      	b.n	8000624 <main+0x150>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:150
                timeout--;
 800061e:	68bb      	ldr	r3, [r7, #8]
 8000620:	3b01      	subs	r3, #1
 8000622:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:149
            while((CAN_TRANSMIT_OK != can_transmit_states(CAN0, transmit_mailbox)) && (0 != timeout)){
 8000624:	78fb      	ldrb	r3, [r7, #3]
 8000626:	4619      	mov	r1, r3
 8000628:	4809      	ldr	r0, [pc, #36]	; (8000650 <main+0x17c>)
 800062a:	f000 fc69 	bl	8000f00 <can_transmit_states>
 800062e:	4603      	mov	r3, r0
 8000630:	2b01      	cmp	r3, #1
 8000632:	d0b8      	beq.n	80005a6 <main+0xd2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:149 (discriminator 1)
 8000634:	68bb      	ldr	r3, [r7, #8]
 8000636:	2b00      	cmp	r3, #0
 8000638:	d1f1      	bne.n	800061e <main+0x14a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:131
            delay_1ms(500);
 800063a:	e7b4      	b.n	80005a6 <main+0xd2>
 800063c:	40013800 	.word	0x40013800
 8000640:	08002cfc 	.word	0x08002cfc
 8000644:	08002d0c 	.word	0x08002d0c
 8000648:	08002d1c 	.word	0x08002d1c
 800064c:	08002d2c 	.word	0x08002d2c
 8000650:	40006400 	.word	0x40006400
 8000654:	20000118 	.word	0x20000118
 8000658:	08002d3c 	.word	0x08002d3c
 800065c:	08002d6c 	.word	0x08002d6c
 8000660:	08002d84 	.word	0x08002d84

08000664 <can_networking_init>:
can_networking_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:164
    \param[in]  none
    \param[out] none
    \retval     none
*/
void can_networking_init(void)
{
 8000664:	b580      	push	{r7, lr}
 8000666:	b088      	sub	sp, #32
 8000668:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:168
    can_parameter_struct can_parameter;
    can_filter_parameter_struct can_filter;
    /* initialize CAN structures */
    can_struct_para_init(CAN_INIT_STRUCT, &can_parameter);
 800066a:	f107 0314 	add.w	r3, r7, #20
 800066e:	4619      	mov	r1, r3
 8000670:	2000      	movs	r0, #0
 8000672:	f000 f93f 	bl	80008f4 <can_struct_para_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:169
    can_struct_para_init(CAN_FILTER_STRUCT, &can_filter);
 8000676:	463b      	mov	r3, r7
 8000678:	4619      	mov	r1, r3
 800067a:	2001      	movs	r0, #1
 800067c:	f000 f93a 	bl	80008f4 <can_struct_para_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:171
    /* initialize CAN register */
    can_deinit(CAN0);
 8000680:	481c      	ldr	r0, [pc, #112]	; (80006f4 <can_networking_init+0x90>)
 8000682:	f000 f921 	bl	80008c8 <can_deinit>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:174

    /* initialize CAN */
    can_parameter.time_triggered = DISABLE;
 8000686:	2300      	movs	r3, #0
 8000688:	763b      	strb	r3, [r7, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:175
    can_parameter.auto_bus_off_recovery = ENABLE;
 800068a:	2301      	movs	r3, #1
 800068c:	767b      	strb	r3, [r7, #25]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:176
    can_parameter.auto_wake_up = DISABLE;
 800068e:	2300      	movs	r3, #0
 8000690:	76bb      	strb	r3, [r7, #26]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:177
    can_parameter.auto_retrans = ENABLE;
 8000692:	2301      	movs	r3, #1
 8000694:	76fb      	strb	r3, [r7, #27]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:178
    can_parameter.rec_fifo_overwrite = DISABLE;
 8000696:	2300      	movs	r3, #0
 8000698:	773b      	strb	r3, [r7, #28]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:179
    can_parameter.trans_fifo_order = DISABLE;
 800069a:	2300      	movs	r3, #0
 800069c:	777b      	strb	r3, [r7, #29]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:180
    can_parameter.working_mode = CAN_NORMAL_MODE;
 800069e:	2300      	movs	r3, #0
 80006a0:	753b      	strb	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:181
    can_parameter.resync_jump_width = CAN_BT_SJW_1TQ;
 80006a2:	2300      	movs	r3, #0
 80006a4:	757b      	strb	r3, [r7, #21]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:182
    can_parameter.time_segment_1 = CAN_BT_BS1_7TQ;
 80006a6:	2306      	movs	r3, #6
 80006a8:	75bb      	strb	r3, [r7, #22]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:183
    can_parameter.time_segment_2 = CAN_BT_BS2_2TQ;
 80006aa:	2301      	movs	r3, #1
 80006ac:	75fb      	strb	r3, [r7, #23]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:185
    /* baudrate 1Mbps */
    can_parameter.prescaler = 36;
 80006ae:	2324      	movs	r3, #36	; 0x24
 80006b0:	83fb      	strh	r3, [r7, #30]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:186
    can_init(CAN0, &can_parameter);
 80006b2:	f107 0314 	add.w	r3, r7, #20
 80006b6:	4619      	mov	r1, r3
 80006b8:	480e      	ldr	r0, [pc, #56]	; (80006f4 <can_networking_init+0x90>)
 80006ba:	f000 f9b9 	bl	8000a30 <can_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:190

    /* initialize filter */
    /* CAN0 filter number */
    can_filter.filter_number = 0;
 80006be:	2300      	movs	r3, #0
 80006c0:	817b      	strh	r3, [r7, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:193

    /* initialize filter */
    can_filter.filter_mode = CAN_FILTERMODE_MASK;
 80006c2:	2300      	movs	r3, #0
 80006c4:	81bb      	strh	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:194
    can_filter.filter_bits = CAN_FILTERBITS_32BIT;
 80006c6:	2301      	movs	r3, #1
 80006c8:	81fb      	strh	r3, [r7, #14]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:195
    can_filter.filter_list_high = 0x0000;
 80006ca:	2300      	movs	r3, #0
 80006cc:	803b      	strh	r3, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:196
    can_filter.filter_list_low = 0x0000;
 80006ce:	2300      	movs	r3, #0
 80006d0:	807b      	strh	r3, [r7, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:197
    can_filter.filter_mask_high = 0x0000;
 80006d2:	2300      	movs	r3, #0
 80006d4:	80bb      	strh	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:198
    can_filter.filter_mask_low = 0x0000;
 80006d6:	2300      	movs	r3, #0
 80006d8:	80fb      	strh	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:199
    can_filter.filter_fifo_number = CAN_FIFO0;
 80006da:	2300      	movs	r3, #0
 80006dc:	813b      	strh	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:200
    can_filter.filter_enable = ENABLE;
 80006de:	2301      	movs	r3, #1
 80006e0:	743b      	strb	r3, [r7, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:201
    can_filter_init(&can_filter);
 80006e2:	463b      	mov	r3, r7
 80006e4:	4618      	mov	r0, r3
 80006e6:	f000 fa77 	bl	8000bd8 <can_filter_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:202
}
 80006ea:	bf00      	nop
 80006ec:	3720      	adds	r7, #32
 80006ee:	46bd      	mov	sp, r7
 80006f0:	bd80      	pop	{r7, pc}
 80006f2:	bf00      	nop
 80006f4:	40006400 	.word	0x40006400

080006f8 <gpio_config>:
gpio_config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:211
    \param[in]  none
    \param[out] none
    \retval     none
*/
void gpio_config(void)
{
 80006f8:	b580      	push	{r7, lr}
 80006fa:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:213
    /* enable can clock */
    rcu_periph_clock_enable(RCU_CAN0);
 80006fc:	f240 7019 	movw	r0, #1817	; 0x719
 8000700:	f000 fec0 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:214
    rcu_periph_clock_enable(RCU_GPIOA);
 8000704:	f240 6002 	movw	r0, #1538	; 0x602
 8000708:	f000 febc 	bl	8001484 <rcu_periph_clock_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:217

    /* configure CAN0 GPIO, CAN0_TX(PD1) and CAN0_RX(PD0) */
    gpio_init(GPIOA, GPIO_MODE_AF_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_12);
 800070c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000710:	2203      	movs	r2, #3
 8000712:	2118      	movs	r1, #24
 8000714:	4805      	ldr	r0, [pc, #20]	; (800072c <gpio_config+0x34>)
 8000716:	f000 fcef 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:219

    gpio_init(GPIOA, GPIO_MODE_IPU, GPIO_OSPEED_50MHZ, GPIO_PIN_11);
 800071a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800071e:	2203      	movs	r2, #3
 8000720:	2148      	movs	r1, #72	; 0x48
 8000722:	4802      	ldr	r0, [pc, #8]	; (800072c <gpio_config+0x34>)
 8000724:	f000 fce8 	bl	80010f8 <gpio_init>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:222

    //gpio_pin_remap_config(GPIO_CAN_FULL_REMAP,ENABLE);
}
 8000728:	bf00      	nop
 800072a:	bd80      	pop	{r7, pc}
 800072c:	40010800 	.word	0x40010800

08000730 <__io_putchar>:
__io_putchar():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:238
}

#ifdef GD_ECLIPSE_GCC
/* retarget the C library printf function to the USART, in Eclipse GCC environment */
int __io_putchar(int ch)
{
 8000730:	b580      	push	{r7, lr}
 8000732:	b082      	sub	sp, #8
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:239
    usart_data_transmit(EVAL_COM0, (uint8_t)ch);
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	b2db      	uxtb	r3, r3
 800073c:	b29b      	uxth	r3, r3
 800073e:	4619      	mov	r1, r3
 8000740:	4807      	ldr	r0, [pc, #28]	; (8000760 <__io_putchar+0x30>)
 8000742:	f001 f914 	bl	800196e <usart_data_transmit>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:240
    while(RESET == usart_flag_get(EVAL_COM0, USART_FLAG_TBE));
 8000746:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:240 (discriminator 1)
 8000748:	2107      	movs	r1, #7
 800074a:	4805      	ldr	r0, [pc, #20]	; (8000760 <__io_putchar+0x30>)
 800074c:	f001 f920 	bl	8001990 <usart_flag_get>
 8000750:	4603      	mov	r3, r0
 8000752:	2b00      	cmp	r3, #0
 8000754:	d0f8      	beq.n	8000748 <__io_putchar+0x18>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:241
    return ch;
 8000756:	687b      	ldr	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/main.c:242
}
 8000758:	4618      	mov	r0, r3
 800075a:	3708      	adds	r7, #8
 800075c:	46bd      	mov	sp, r7
 800075e:	bd80      	pop	{r7, pc}
 8000760:	40013800 	.word	0x40013800

08000764 <NVIC_SetPriority>:
NVIC_SetPriority():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1569

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000764:	b480      	push	{r7}
 8000766:	b083      	sub	sp, #12
 8000768:	af00      	add	r7, sp, #0
 800076a:	4603      	mov	r3, r0
 800076c:	6039      	str	r1, [r7, #0]
 800076e:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1570
  if(IRQn < 0) {
 8000770:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000774:	2b00      	cmp	r3, #0
 8000776:	da0b      	bge.n	8000790 <NVIC_SetPriority+0x2c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1571
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 8000778:	683b      	ldr	r3, [r7, #0]
 800077a:	b2da      	uxtb	r2, r3
 800077c:	490c      	ldr	r1, [pc, #48]	; (80007b0 <NVIC_SetPriority+0x4c>)
 800077e:	79fb      	ldrb	r3, [r7, #7]
 8000780:	f003 030f 	and.w	r3, r3, #15
 8000784:	3b04      	subs	r3, #4
 8000786:	0112      	lsls	r2, r2, #4
 8000788:	b2d2      	uxtb	r2, r2
 800078a:	440b      	add	r3, r1
 800078c:	761a      	strb	r2, [r3, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1574
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
 800078e:	e009      	b.n	80007a4 <NVIC_SetPriority+0x40>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1573
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 8000790:	683b      	ldr	r3, [r7, #0]
 8000792:	b2da      	uxtb	r2, r3
 8000794:	4907      	ldr	r1, [pc, #28]	; (80007b4 <NVIC_SetPriority+0x50>)
 8000796:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800079a:	0112      	lsls	r2, r2, #4
 800079c:	b2d2      	uxtb	r2, r2
 800079e:	440b      	add	r3, r1
 80007a0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1574
}
 80007a4:	bf00      	nop
 80007a6:	370c      	adds	r7, #12
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bc80      	pop	{r7}
 80007ac:	4770      	bx	lr
 80007ae:	bf00      	nop
 80007b0:	e000ed00 	.word	0xe000ed00
 80007b4:	e000e100 	.word	0xe000e100

080007b8 <SysTick_Config>:
SysTick_Config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1696
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b082      	sub	sp, #8
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1697
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	3b01      	subs	r3, #1
 80007c4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80007c8:	d301      	bcc.n	80007ce <SysTick_Config+0x16>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1697 (discriminator 1)
 80007ca:	2301      	movs	r3, #1
 80007cc:	e00f      	b.n	80007ee <SysTick_Config+0x36>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1699

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 80007ce:	4a0a      	ldr	r2, [pc, #40]	; (80007f8 <SysTick_Config+0x40>)
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	3b01      	subs	r3, #1
 80007d4:	6053      	str	r3, [r2, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1700
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
 80007d6:	210f      	movs	r1, #15
 80007d8:	f04f 30ff 	mov.w	r0, #4294967295
 80007dc:	f7ff ffc2 	bl	8000764 <NVIC_SetPriority>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1701
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 80007e0:	4b05      	ldr	r3, [pc, #20]	; (80007f8 <SysTick_Config+0x40>)
 80007e2:	2200      	movs	r2, #0
 80007e4:	609a      	str	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1702
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80007e6:	4b04      	ldr	r3, [pc, #16]	; (80007f8 <SysTick_Config+0x40>)
 80007e8:	2207      	movs	r2, #7
 80007ea:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1705
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
  return (0);                                                  /* Function successful */
 80007ec:	2300      	movs	r3, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/core_cm4.h:1706
}
 80007ee:	4618      	mov	r0, r3
 80007f0:	3708      	adds	r7, #8
 80007f2:	46bd      	mov	sp, r7
 80007f4:	bd80      	pop	{r7, pc}
 80007f6:	bf00      	nop
 80007f8:	e000e010 	.word	0xe000e010

080007fc <systick_config>:
systick_config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:47
    \param[in]  none
    \param[out] none
    \retval     none
*/
void systick_config(void)
{
 80007fc:	b580      	push	{r7, lr}
 80007fe:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:49
    /* setup systick timer for 1000Hz interrupts */
    if (SysTick_Config(SystemCoreClock / 1000U)){
 8000800:	4b09      	ldr	r3, [pc, #36]	; (8000828 <systick_config+0x2c>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	4a09      	ldr	r2, [pc, #36]	; (800082c <systick_config+0x30>)
 8000806:	fba2 2303 	umull	r2, r3, r2, r3
 800080a:	099b      	lsrs	r3, r3, #6
 800080c:	4618      	mov	r0, r3
 800080e:	f7ff ffd3 	bl	80007b8 <SysTick_Config>
 8000812:	4603      	mov	r3, r0
 8000814:	2b00      	cmp	r3, #0
 8000816:	d000      	beq.n	800081a <systick_config+0x1e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:51 (discriminator 1)
        /* capture error */
        while (1){
 8000818:	e7fe      	b.n	8000818 <systick_config+0x1c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:55
        }
    }
    /* configure the systick handler priority */
    NVIC_SetPriority(SysTick_IRQn, 0x00U);
 800081a:	2100      	movs	r1, #0
 800081c:	f04f 30ff 	mov.w	r0, #4294967295
 8000820:	f7ff ffa0 	bl	8000764 <NVIC_SetPriority>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:56
}
 8000824:	bf00      	nop
 8000826:	bd80      	pop	{r7, pc}
 8000828:	20000084 	.word	0x20000084
 800082c:	10624dd3 	.word	0x10624dd3

08000830 <delay_1ms>:
delay_1ms():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:65
    \param[in]  count: count in milliseconds
    \param[out] none
    \retval     none
*/
void delay_1ms(uint32_t count)
{
 8000830:	b480      	push	{r7}
 8000832:	b083      	sub	sp, #12
 8000834:	af00      	add	r7, sp, #0
 8000836:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:66
    delay = count;
 8000838:	4a06      	ldr	r2, [pc, #24]	; (8000854 <delay_1ms+0x24>)
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:68

    while(0U != delay){
 800083e:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:68 (discriminator 1)
 8000840:	4b04      	ldr	r3, [pc, #16]	; (8000854 <delay_1ms+0x24>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	2b00      	cmp	r3, #0
 8000846:	d1fb      	bne.n	8000840 <delay_1ms+0x10>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:70
    }
}
 8000848:	bf00      	nop
 800084a:	bf00      	nop
 800084c:	370c      	adds	r7, #12
 800084e:	46bd      	mov	sp, r7
 8000850:	bc80      	pop	{r7}
 8000852:	4770      	bx	lr
 8000854:	2000010c 	.word	0x2000010c

08000858 <delay_decrement>:
delay_decrement():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:79
    \param[in]  none
    \param[out] none
    \retval     none
*/
void delay_decrement(void)
{
 8000858:	b480      	push	{r7}
 800085a:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:80
    if (0U != delay){
 800085c:	4b06      	ldr	r3, [pc, #24]	; (8000878 <delay_decrement+0x20>)
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	2b00      	cmp	r3, #0
 8000862:	d004      	beq.n	800086e <delay_decrement+0x16>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:81
        delay--;
 8000864:	4b04      	ldr	r3, [pc, #16]	; (8000878 <delay_decrement+0x20>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	3b01      	subs	r3, #1
 800086a:	4a03      	ldr	r2, [pc, #12]	; (8000878 <delay_decrement+0x20>)
 800086c:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../src/systick.c:83
    }
}
 800086e:	bf00      	nop
 8000870:	46bd      	mov	sp, r7
 8000872:	bc80      	pop	{r7}
 8000874:	4770      	bx	lr
 8000876:	bf00      	nop
 8000878:	2000010c 	.word	0x2000010c

0800087c <Reset_Handler>:
Reset_Handler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:22
  .weak  Reset_Handler
  .type  Reset_Handler, %function

/* reset Handler */
Reset_Handler:
  movs r1, #0
 800087c:	2100      	movs	r1, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:23
  b DataInit
 800087e:	e003      	b.n	8000888 <DataInit>

08000880 <CopyData>:
CopyData():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:26

CopyData:
  ldr r3, =_sidata
 8000880:	4b0b      	ldr	r3, [pc, #44]	; (80008b0 <Zerobss+0x14>)
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:27
  ldr r3, [r3, r1]
 8000882:	585b      	ldr	r3, [r3, r1]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:28
  str r3, [r0, r1]
 8000884:	5043      	str	r3, [r0, r1]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:29
  adds r1, r1, #4
 8000886:	3104      	adds	r1, #4

08000888 <DataInit>:
DataInit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:32
    
DataInit:
  ldr r0, =_sdata
 8000888:	480a      	ldr	r0, [pc, #40]	; (80008b4 <Zerobss+0x18>)
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:33
  ldr r3, =_edata
 800088a:	4b0b      	ldr	r3, [pc, #44]	; (80008b8 <Zerobss+0x1c>)
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:34
  adds r2, r0, r1
 800088c:	1842      	adds	r2, r0, r1
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:35
  cmp r2, r3
 800088e:	429a      	cmp	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:36
  bcc CopyData
 8000890:	d3f6      	bcc.n	8000880 <CopyData>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:37
  ldr r2, =_sbss
 8000892:	4a0a      	ldr	r2, [pc, #40]	; (80008bc <Zerobss+0x20>)
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:38
  b Zerobss
 8000894:	e002      	b.n	800089c <Zerobss>

08000896 <FillZerobss>:
FillZerobss():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:41

FillZerobss:
  movs r3, #0
 8000896:	2300      	movs	r3, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:42
  str r3, [r2], #4
 8000898:	f842 3b04 	str.w	r3, [r2], #4

0800089c <Zerobss>:
Zerobss():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:45
    
Zerobss:
  ldr r3, = _ebss
 800089c:	4b08      	ldr	r3, [pc, #32]	; (80008c0 <Zerobss+0x24>)
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:46
  cmp r2, r3
 800089e:	429a      	cmp	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:47
  bcc FillZerobss
 80008a0:	d3f9      	bcc.n	8000896 <FillZerobss>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:49
/* Call SystemInit function */
  bl  SystemInit
 80008a2:	f001 f943 	bl	8001b2c <SystemInit>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:51
/* Call static constructors */
  bl __libc_init_array
 80008a6:	f001 fa9f 	bl	8001de8 <__libc_init_array>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:53
/*Call the main function */
  bl main
 80008aa:	f7ff fe13 	bl	80004d4 <main>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:54
  bx lr
 80008ae:	4770      	bx	lr
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:26
  ldr r3, =_sidata
 80008b0:	08002e44 	.word	0x08002e44
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:32
  ldr r0, =_sdata
 80008b4:	20000000 	.word	0x20000000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:33
  ldr r3, =_edata
 80008b8:	200000ec 	.word	0x200000ec
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:37
  ldr r2, =_sbss
 80008bc:	200000ec 	.word	0x200000ec
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:45
  ldr r3, = _ebss
 80008c0:	2000013c 	.word	0x2000013c

080008c4 <ADC0_1_IRQHandler>:
DMA0_Channel4_IRQHandler():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../gcc_startup/startup_gd32f30x_hd.S:60
.size Reset_Handler, .-Reset_Handler

    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008c4:	e7fe      	b.n	80008c4 <ADC0_1_IRQHandler>
	...

080008c8 <can_deinit>:
can_deinit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:48
    \arg        CANx(x=0,1),the CAN1 only for GD32F30X_CL
    \param[out] none
    \retval     none
*/
void can_deinit(uint32_t can_periph)
{
 80008c8:	b580      	push	{r7, lr}
 80008ca:	b082      	sub	sp, #8
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:58
    } else {
        rcu_periph_reset_enable(RCU_CAN1RST);
        rcu_periph_reset_disable(RCU_CAN1RST);
    }
#else
    if(CAN0 == can_periph) {
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	4a07      	ldr	r2, [pc, #28]	; (80008f0 <can_deinit+0x28>)
 80008d4:	4293      	cmp	r3, r2
 80008d6:	d107      	bne.n	80008e8 <can_deinit+0x20>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:59
        rcu_periph_reset_enable(RCU_CAN0RST);
 80008d8:	f240 4019 	movw	r0, #1049	; 0x419
 80008dc:	f000 fdf4 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:60
        rcu_periph_reset_disable(RCU_CAN0RST);
 80008e0:	f240 4019 	movw	r0, #1049	; 0x419
 80008e4:	f000 fe12 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:63
    }
#endif
}
 80008e8:	bf00      	nop
 80008ea:	3708      	adds	r7, #8
 80008ec:	46bd      	mov	sp, r7
 80008ee:	bd80      	pop	{r7, pc}
 80008f0:	40006400 	.word	0x40006400

080008f4 <can_struct_para_init>:
can_struct_para_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:77
      \arg        CAN_RX_MESSAGE_STRUCT: the CAN RX message struct
    \param[out] p_struct: the pointer of the specific struct
    \retval     none
*/
void can_struct_para_init(can_struct_type_enum type, void *p_struct)
{
 80008f4:	b480      	push	{r7}
 80008f6:	b085      	sub	sp, #20
 80008f8:	af00      	add	r7, sp, #0
 80008fa:	4603      	mov	r3, r0
 80008fc:	6039      	str	r1, [r7, #0]
 80008fe:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:80
    uint8_t i;

    if(NULL == p_struct) {
 8000900:	683b      	ldr	r3, [r7, #0]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d100      	bne.n	8000908 <can_struct_para_init+0x14>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:81 (discriminator 1)
        CAN_ERROR_HANDLE("struct parameter can not be NULL \r\n");
 8000906:	e7fe      	b.n	8000906 <can_struct_para_init+0x12>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:85
    }

    /* get type of the struct */
    switch(type) {
 8000908:	79fb      	ldrb	r3, [r7, #7]
 800090a:	2b03      	cmp	r3, #3
 800090c:	f200 808a 	bhi.w	8000a24 <can_struct_para_init+0x130>
 8000910:	a201      	add	r2, pc, #4	; (adr r2, 8000918 <can_struct_para_init+0x24>)
 8000912:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000916:	bf00      	nop
 8000918:	08000929 	.word	0x08000929
 800091c:	0800096f 	.word	0x0800096f
 8000920:	080009a7 	.word	0x080009a7
 8000924:	080009e3 	.word	0x080009e3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:88
    /* used for can_init() */
    case CAN_INIT_STRUCT:
        ((can_parameter_struct *)p_struct)->auto_bus_off_recovery = DISABLE;
 8000928:	683b      	ldr	r3, [r7, #0]
 800092a:	2200      	movs	r2, #0
 800092c:	715a      	strb	r2, [r3, #5]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:89
        ((can_parameter_struct *)p_struct)->auto_retrans = DISABLE;
 800092e:	683b      	ldr	r3, [r7, #0]
 8000930:	2200      	movs	r2, #0
 8000932:	71da      	strb	r2, [r3, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:90
        ((can_parameter_struct *)p_struct)->auto_wake_up = DISABLE;
 8000934:	683b      	ldr	r3, [r7, #0]
 8000936:	2200      	movs	r2, #0
 8000938:	719a      	strb	r2, [r3, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:91
        ((can_parameter_struct *)p_struct)->prescaler = 0x03FFU;
 800093a:	683b      	ldr	r3, [r7, #0]
 800093c:	f240 32ff 	movw	r2, #1023	; 0x3ff
 8000940:	815a      	strh	r2, [r3, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:92
        ((can_parameter_struct *)p_struct)->rec_fifo_overwrite = DISABLE;
 8000942:	683b      	ldr	r3, [r7, #0]
 8000944:	2200      	movs	r2, #0
 8000946:	721a      	strb	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:93
        ((can_parameter_struct *)p_struct)->resync_jump_width = CAN_BT_SJW_1TQ;
 8000948:	683b      	ldr	r3, [r7, #0]
 800094a:	2200      	movs	r2, #0
 800094c:	705a      	strb	r2, [r3, #1]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:94
        ((can_parameter_struct *)p_struct)->time_segment_1 = CAN_BT_BS1_3TQ;
 800094e:	683b      	ldr	r3, [r7, #0]
 8000950:	2202      	movs	r2, #2
 8000952:	709a      	strb	r2, [r3, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:95
        ((can_parameter_struct *)p_struct)->time_segment_2 = CAN_BT_BS2_1TQ;
 8000954:	683b      	ldr	r3, [r7, #0]
 8000956:	2200      	movs	r2, #0
 8000958:	70da      	strb	r2, [r3, #3]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:96
        ((can_parameter_struct *)p_struct)->time_triggered = DISABLE;
 800095a:	683b      	ldr	r3, [r7, #0]
 800095c:	2200      	movs	r2, #0
 800095e:	711a      	strb	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:97
        ((can_parameter_struct *)p_struct)->trans_fifo_order = DISABLE;
 8000960:	683b      	ldr	r3, [r7, #0]
 8000962:	2200      	movs	r2, #0
 8000964:	725a      	strb	r2, [r3, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:98
        ((can_parameter_struct *)p_struct)->working_mode = CAN_NORMAL_MODE;
 8000966:	683b      	ldr	r3, [r7, #0]
 8000968:	2200      	movs	r2, #0
 800096a:	701a      	strb	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:100

        break;
 800096c:	e05b      	b.n	8000a26 <can_struct_para_init+0x132>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:103
    /* used for can_filter_init() */
    case CAN_FILTER_STRUCT:
        ((can_filter_parameter_struct *)p_struct)->filter_bits = CAN_FILTERBITS_32BIT;
 800096e:	683b      	ldr	r3, [r7, #0]
 8000970:	2201      	movs	r2, #1
 8000972:	81da      	strh	r2, [r3, #14]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:104
        ((can_filter_parameter_struct *)p_struct)->filter_enable = DISABLE;
 8000974:	683b      	ldr	r3, [r7, #0]
 8000976:	2200      	movs	r2, #0
 8000978:	741a      	strb	r2, [r3, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:105
        ((can_filter_parameter_struct *)p_struct)->filter_fifo_number = CAN_FIFO0;
 800097a:	683b      	ldr	r3, [r7, #0]
 800097c:	2200      	movs	r2, #0
 800097e:	811a      	strh	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:106
        ((can_filter_parameter_struct *)p_struct)->filter_list_high = 0x0000U;
 8000980:	683b      	ldr	r3, [r7, #0]
 8000982:	2200      	movs	r2, #0
 8000984:	801a      	strh	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:107
        ((can_filter_parameter_struct *)p_struct)->filter_list_low = 0x0000U;
 8000986:	683b      	ldr	r3, [r7, #0]
 8000988:	2200      	movs	r2, #0
 800098a:	805a      	strh	r2, [r3, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:108
        ((can_filter_parameter_struct *)p_struct)->filter_mask_high = 0x0000U;
 800098c:	683b      	ldr	r3, [r7, #0]
 800098e:	2200      	movs	r2, #0
 8000990:	809a      	strh	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:109
        ((can_filter_parameter_struct *)p_struct)->filter_mask_low = 0x0000U;
 8000992:	683b      	ldr	r3, [r7, #0]
 8000994:	2200      	movs	r2, #0
 8000996:	80da      	strh	r2, [r3, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:110
        ((can_filter_parameter_struct *)p_struct)->filter_mode = CAN_FILTERMODE_MASK;
 8000998:	683b      	ldr	r3, [r7, #0]
 800099a:	2200      	movs	r2, #0
 800099c:	819a      	strh	r2, [r3, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:111
        ((can_filter_parameter_struct *)p_struct)->filter_number = 0U;
 800099e:	683b      	ldr	r3, [r7, #0]
 80009a0:	2200      	movs	r2, #0
 80009a2:	815a      	strh	r2, [r3, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:113

        break;
 80009a4:	e03f      	b.n	8000a26 <can_struct_para_init+0x132>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:116
    /* used for can_message_transmit() */
    case CAN_TX_MESSAGE_STRUCT:
        for(i = 0U; i < 8U; i++) {
 80009a6:	2300      	movs	r3, #0
 80009a8:	73fb      	strb	r3, [r7, #15]
 80009aa:	e007      	b.n	80009bc <can_struct_para_init+0xc8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:117 (discriminator 3)
            ((can_trasnmit_message_struct *)p_struct)->tx_data[i] = 0U;
 80009ac:	7bfb      	ldrb	r3, [r7, #15]
 80009ae:	683a      	ldr	r2, [r7, #0]
 80009b0:	4413      	add	r3, r2
 80009b2:	2200      	movs	r2, #0
 80009b4:	72da      	strb	r2, [r3, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:116 (discriminator 3)
        for(i = 0U; i < 8U; i++) {
 80009b6:	7bfb      	ldrb	r3, [r7, #15]
 80009b8:	3301      	adds	r3, #1
 80009ba:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:116 (discriminator 1)
 80009bc:	7bfb      	ldrb	r3, [r7, #15]
 80009be:	2b07      	cmp	r3, #7
 80009c0:	d9f4      	bls.n	80009ac <can_struct_para_init+0xb8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:120
        }

        ((can_trasnmit_message_struct *)p_struct)->tx_dlen = 0u;
 80009c2:	683b      	ldr	r3, [r7, #0]
 80009c4:	2200      	movs	r2, #0
 80009c6:	729a      	strb	r2, [r3, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:121
        ((can_trasnmit_message_struct *)p_struct)->tx_efid = 0U;
 80009c8:	683b      	ldr	r3, [r7, #0]
 80009ca:	2200      	movs	r2, #0
 80009cc:	605a      	str	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:122
        ((can_trasnmit_message_struct *)p_struct)->tx_ff = (uint8_t)CAN_FF_STANDARD;
 80009ce:	683b      	ldr	r3, [r7, #0]
 80009d0:	2200      	movs	r2, #0
 80009d2:	721a      	strb	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:123
        ((can_trasnmit_message_struct *)p_struct)->tx_ft = (uint8_t)CAN_FT_DATA;
 80009d4:	683b      	ldr	r3, [r7, #0]
 80009d6:	2200      	movs	r2, #0
 80009d8:	725a      	strb	r2, [r3, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:124
        ((can_trasnmit_message_struct *)p_struct)->tx_sfid = 0U;
 80009da:	683b      	ldr	r3, [r7, #0]
 80009dc:	2200      	movs	r2, #0
 80009de:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:126

        break;
 80009e0:	e021      	b.n	8000a26 <can_struct_para_init+0x132>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:129
    /* used for can_message_receive() */
    case CAN_RX_MESSAGE_STRUCT:
        for(i = 0U; i < 8U; i++) {
 80009e2:	2300      	movs	r3, #0
 80009e4:	73fb      	strb	r3, [r7, #15]
 80009e6:	e007      	b.n	80009f8 <can_struct_para_init+0x104>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:130 (discriminator 3)
            ((can_receive_message_struct *)p_struct)->rx_data[i] = 0U;
 80009e8:	7bfb      	ldrb	r3, [r7, #15]
 80009ea:	683a      	ldr	r2, [r7, #0]
 80009ec:	4413      	add	r3, r2
 80009ee:	2200      	movs	r2, #0
 80009f0:	72da      	strb	r2, [r3, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:129 (discriminator 3)
        for(i = 0U; i < 8U; i++) {
 80009f2:	7bfb      	ldrb	r3, [r7, #15]
 80009f4:	3301      	adds	r3, #1
 80009f6:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:129 (discriminator 1)
 80009f8:	7bfb      	ldrb	r3, [r7, #15]
 80009fa:	2b07      	cmp	r3, #7
 80009fc:	d9f4      	bls.n	80009e8 <can_struct_para_init+0xf4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:133
        }

        ((can_receive_message_struct *)p_struct)->rx_dlen = 0U;
 80009fe:	683b      	ldr	r3, [r7, #0]
 8000a00:	2200      	movs	r2, #0
 8000a02:	729a      	strb	r2, [r3, #10]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:134
        ((can_receive_message_struct *)p_struct)->rx_efid = 0U;
 8000a04:	683b      	ldr	r3, [r7, #0]
 8000a06:	2200      	movs	r2, #0
 8000a08:	605a      	str	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:135
        ((can_receive_message_struct *)p_struct)->rx_ff = (uint8_t)CAN_FF_STANDARD;
 8000a0a:	683b      	ldr	r3, [r7, #0]
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	721a      	strb	r2, [r3, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:136
        ((can_receive_message_struct *)p_struct)->rx_fi = 0U;
 8000a10:	683b      	ldr	r3, [r7, #0]
 8000a12:	2200      	movs	r2, #0
 8000a14:	74da      	strb	r2, [r3, #19]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:137
        ((can_receive_message_struct *)p_struct)->rx_ft = (uint8_t)CAN_FT_DATA;
 8000a16:	683b      	ldr	r3, [r7, #0]
 8000a18:	2200      	movs	r2, #0
 8000a1a:	725a      	strb	r2, [r3, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:138
        ((can_receive_message_struct *)p_struct)->rx_sfid = 0U;
 8000a1c:	683b      	ldr	r3, [r7, #0]
 8000a1e:	2200      	movs	r2, #0
 8000a20:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:140

        break;
 8000a22:	e000      	b.n	8000a26 <can_struct_para_init+0x132>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:143 (discriminator 1)

    default:
        CAN_ERROR_HANDLE("parameter is invalid \r\n");
 8000a24:	e7fe      	b.n	8000a24 <can_struct_para_init+0x130>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:145
    }
}
 8000a26:	bf00      	nop
 8000a28:	3714      	adds	r7, #20
 8000a2a:	46bd      	mov	sp, r7
 8000a2c:	bc80      	pop	{r7}
 8000a2e:	4770      	bx	lr

08000a30 <can_init>:
can_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:167
      \arg        prescaler: 0x0001 - 0x0400
    \param[out] none
    \retval     ErrStatus: SUCCESS or ERROR
*/
ErrStatus can_init(uint32_t can_periph, can_parameter_struct *can_parameter_init)
{
 8000a30:	b480      	push	{r7}
 8000a32:	b085      	sub	sp, #20
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	6078      	str	r0, [r7, #4]
 8000a38:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:168
    uint32_t timeout = CAN_TIMEOUT;
 8000a3a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000a3e:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:169
    ErrStatus flag = ERROR;
 8000a40:	2300      	movs	r3, #0
 8000a42:	72fb      	strb	r3, [r7, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:172

    /* disable sleep mode */
    CAN_CTL(can_periph) &= ~CAN_CTL_SLPWMOD;
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	681a      	ldr	r2, [r3, #0]
 8000a48:	687b      	ldr	r3, [r7, #4]
 8000a4a:	f022 0202 	bic.w	r2, r2, #2
 8000a4e:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:174
    /* enable initialize mode */
    CAN_CTL(can_periph) |= CAN_CTL_IWMOD;
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	681a      	ldr	r2, [r3, #0]
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	f042 0201 	orr.w	r2, r2, #1
 8000a5a:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:176
    /* wait ACK */
    while((CAN_STAT_IWS != (CAN_STAT(can_periph) & CAN_STAT_IWS)) && (0U != timeout)) {
 8000a5c:	e002      	b.n	8000a64 <can_init+0x34>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:177
        timeout--;
 8000a5e:	68fb      	ldr	r3, [r7, #12]
 8000a60:	3b01      	subs	r3, #1
 8000a62:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:176
    while((CAN_STAT_IWS != (CAN_STAT(can_periph) & CAN_STAT_IWS)) && (0U != timeout)) {
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	3304      	adds	r3, #4
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	f003 0301 	and.w	r3, r3, #1
 8000a6e:	2b01      	cmp	r3, #1
 8000a70:	d002      	beq.n	8000a78 <can_init+0x48>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:176 (discriminator 1)
 8000a72:	68fb      	ldr	r3, [r7, #12]
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d1f2      	bne.n	8000a5e <can_init+0x2e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:180
    }
    /* check initialize working success */
    if(CAN_STAT_IWS != (CAN_STAT(can_periph) & CAN_STAT_IWS)) {
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	3304      	adds	r3, #4
 8000a7c:	681b      	ldr	r3, [r3, #0]
 8000a7e:	f003 0301 	and.w	r3, r3, #1
 8000a82:	2b01      	cmp	r3, #1
 8000a84:	d002      	beq.n	8000a8c <can_init+0x5c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:181
        flag = ERROR;
 8000a86:	2300      	movs	r3, #0
 8000a88:	72fb      	strb	r3, [r7, #11]
 8000a8a:	e09f      	b.n	8000bcc <can_init+0x19c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:184
    } else {
        /* set the bit timing register */
        CAN_BT(can_periph) = (BT_MODE((uint32_t)can_parameter_init->working_mode) | \
 8000a8c:	683b      	ldr	r3, [r7, #0]
 8000a8e:	781b      	ldrb	r3, [r3, #0]
 8000a90:	079a      	lsls	r2, r3, #30
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:185
                              BT_SJW((uint32_t)can_parameter_init->resync_jump_width) | \
 8000a92:	683b      	ldr	r3, [r7, #0]
 8000a94:	785b      	ldrb	r3, [r3, #1]
 8000a96:	061b      	lsls	r3, r3, #24
 8000a98:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:184
        CAN_BT(can_periph) = (BT_MODE((uint32_t)can_parameter_init->working_mode) | \
 8000a9c:	431a      	orrs	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:186
                              BT_BS1((uint32_t)can_parameter_init->time_segment_1) | \
 8000a9e:	683b      	ldr	r3, [r7, #0]
 8000aa0:	789b      	ldrb	r3, [r3, #2]
 8000aa2:	041b      	lsls	r3, r3, #16
 8000aa4:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:185
                              BT_SJW((uint32_t)can_parameter_init->resync_jump_width) | \
 8000aa8:	431a      	orrs	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:187
                              BT_BS2((uint32_t)can_parameter_init->time_segment_2) | \
 8000aaa:	683b      	ldr	r3, [r7, #0]
 8000aac:	78db      	ldrb	r3, [r3, #3]
 8000aae:	051b      	lsls	r3, r3, #20
 8000ab0:	f403 03e0 	and.w	r3, r3, #7340032	; 0x700000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:186
                              BT_BS1((uint32_t)can_parameter_init->time_segment_1) | \
 8000ab4:	431a      	orrs	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:188
                              BT_BAUDPSC(((uint32_t)(can_parameter_init->prescaler) - 1U)));
 8000ab6:	683b      	ldr	r3, [r7, #0]
 8000ab8:	895b      	ldrh	r3, [r3, #10]
 8000aba:	3b01      	subs	r3, #1
 8000abc:	f3c3 0309 	ubfx	r3, r3, #0, #10
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:184
        CAN_BT(can_periph) = (BT_MODE((uint32_t)can_parameter_init->working_mode) | \
 8000ac0:	6879      	ldr	r1, [r7, #4]
 8000ac2:	311c      	adds	r1, #28
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:187
                              BT_BS2((uint32_t)can_parameter_init->time_segment_2) | \
 8000ac4:	4313      	orrs	r3, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:184
        CAN_BT(can_periph) = (BT_MODE((uint32_t)can_parameter_init->working_mode) | \
 8000ac6:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:191

        /* time trigger communication mode */
        if(ENABLE == can_parameter_init->time_triggered) {
 8000ac8:	683b      	ldr	r3, [r7, #0]
 8000aca:	791b      	ldrb	r3, [r3, #4]
 8000acc:	2b01      	cmp	r3, #1
 8000ace:	d106      	bne.n	8000ade <can_init+0xae>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:192
            CAN_CTL(can_periph) |= CAN_CTL_TTC;
 8000ad0:	687b      	ldr	r3, [r7, #4]
 8000ad2:	681a      	ldr	r2, [r3, #0]
 8000ad4:	687b      	ldr	r3, [r7, #4]
 8000ad6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000ada:	601a      	str	r2, [r3, #0]
 8000adc:	e005      	b.n	8000aea <can_init+0xba>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:194
        } else {
            CAN_CTL(can_periph) &= ~CAN_CTL_TTC;
 8000ade:	687b      	ldr	r3, [r7, #4]
 8000ae0:	681a      	ldr	r2, [r3, #0]
 8000ae2:	687b      	ldr	r3, [r7, #4]
 8000ae4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000ae8:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:197
        }
        /* automatic bus-off management */
        if(ENABLE == can_parameter_init->auto_bus_off_recovery) {
 8000aea:	683b      	ldr	r3, [r7, #0]
 8000aec:	795b      	ldrb	r3, [r3, #5]
 8000aee:	2b01      	cmp	r3, #1
 8000af0:	d106      	bne.n	8000b00 <can_init+0xd0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:198
            CAN_CTL(can_periph) |= CAN_CTL_ABOR;
 8000af2:	687b      	ldr	r3, [r7, #4]
 8000af4:	681a      	ldr	r2, [r3, #0]
 8000af6:	687b      	ldr	r3, [r7, #4]
 8000af8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000afc:	601a      	str	r2, [r3, #0]
 8000afe:	e005      	b.n	8000b0c <can_init+0xdc>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:200
        } else {
            CAN_CTL(can_periph) &= ~CAN_CTL_ABOR;
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	681a      	ldr	r2, [r3, #0]
 8000b04:	687b      	ldr	r3, [r7, #4]
 8000b06:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000b0a:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:203
        }
        /* automatic wakeup mode */
        if(ENABLE == can_parameter_init->auto_wake_up) {
 8000b0c:	683b      	ldr	r3, [r7, #0]
 8000b0e:	799b      	ldrb	r3, [r3, #6]
 8000b10:	2b01      	cmp	r3, #1
 8000b12:	d106      	bne.n	8000b22 <can_init+0xf2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:204
            CAN_CTL(can_periph) |= CAN_CTL_AWU;
 8000b14:	687b      	ldr	r3, [r7, #4]
 8000b16:	681a      	ldr	r2, [r3, #0]
 8000b18:	687b      	ldr	r3, [r7, #4]
 8000b1a:	f042 0220 	orr.w	r2, r2, #32
 8000b1e:	601a      	str	r2, [r3, #0]
 8000b20:	e005      	b.n	8000b2e <can_init+0xfe>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:206
        } else {
            CAN_CTL(can_periph) &= ~CAN_CTL_AWU;
 8000b22:	687b      	ldr	r3, [r7, #4]
 8000b24:	681a      	ldr	r2, [r3, #0]
 8000b26:	687b      	ldr	r3, [r7, #4]
 8000b28:	f022 0220 	bic.w	r2, r2, #32
 8000b2c:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:209
        }
        /* automatic retransmission mode */
        if(ENABLE == can_parameter_init->auto_retrans) {
 8000b2e:	683b      	ldr	r3, [r7, #0]
 8000b30:	79db      	ldrb	r3, [r3, #7]
 8000b32:	2b01      	cmp	r3, #1
 8000b34:	d106      	bne.n	8000b44 <can_init+0x114>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:210
            CAN_CTL(can_periph) &= ~CAN_CTL_ARD;
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	681a      	ldr	r2, [r3, #0]
 8000b3a:	687b      	ldr	r3, [r7, #4]
 8000b3c:	f022 0210 	bic.w	r2, r2, #16
 8000b40:	601a      	str	r2, [r3, #0]
 8000b42:	e005      	b.n	8000b50 <can_init+0x120>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:212
        } else {
            CAN_CTL(can_periph) |= CAN_CTL_ARD;
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	f042 0210 	orr.w	r2, r2, #16
 8000b4e:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:215
        }
        /* receive FIFO overwrite mode */
        if(ENABLE == can_parameter_init->rec_fifo_overwrite) {
 8000b50:	683b      	ldr	r3, [r7, #0]
 8000b52:	7a1b      	ldrb	r3, [r3, #8]
 8000b54:	2b01      	cmp	r3, #1
 8000b56:	d106      	bne.n	8000b66 <can_init+0x136>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:216
            CAN_CTL(can_periph) &= ~CAN_CTL_RFOD;
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	681a      	ldr	r2, [r3, #0]
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	f022 0208 	bic.w	r2, r2, #8
 8000b62:	601a      	str	r2, [r3, #0]
 8000b64:	e005      	b.n	8000b72 <can_init+0x142>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:218
        } else {
            CAN_CTL(can_periph) |= CAN_CTL_RFOD;
 8000b66:	687b      	ldr	r3, [r7, #4]
 8000b68:	681a      	ldr	r2, [r3, #0]
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	f042 0208 	orr.w	r2, r2, #8
 8000b70:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:221
        }
        /* transmit FIFO order */
        if(ENABLE == can_parameter_init->trans_fifo_order) {
 8000b72:	683b      	ldr	r3, [r7, #0]
 8000b74:	7a5b      	ldrb	r3, [r3, #9]
 8000b76:	2b01      	cmp	r3, #1
 8000b78:	d106      	bne.n	8000b88 <can_init+0x158>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:222
            CAN_CTL(can_periph) |= CAN_CTL_TFO;
 8000b7a:	687b      	ldr	r3, [r7, #4]
 8000b7c:	681a      	ldr	r2, [r3, #0]
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	f042 0204 	orr.w	r2, r2, #4
 8000b84:	601a      	str	r2, [r3, #0]
 8000b86:	e005      	b.n	8000b94 <can_init+0x164>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:224
        } else {
            CAN_CTL(can_periph) &= ~CAN_CTL_TFO;
 8000b88:	687b      	ldr	r3, [r7, #4]
 8000b8a:	681a      	ldr	r2, [r3, #0]
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	f022 0204 	bic.w	r2, r2, #4
 8000b92:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:227
        }
        /* disable initialize mode */
        CAN_CTL(can_periph) &= ~CAN_CTL_IWMOD;
 8000b94:	687b      	ldr	r3, [r7, #4]
 8000b96:	681a      	ldr	r2, [r3, #0]
 8000b98:	687b      	ldr	r3, [r7, #4]
 8000b9a:	f022 0201 	bic.w	r2, r2, #1
 8000b9e:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:228
        timeout = CAN_TIMEOUT;
 8000ba0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000ba4:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:230
        /* wait the ACK */
        while((CAN_STAT_IWS == (CAN_STAT(can_periph) & CAN_STAT_IWS)) && (0U != timeout)) {
 8000ba6:	e002      	b.n	8000bae <can_init+0x17e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:231
            timeout--;
 8000ba8:	68fb      	ldr	r3, [r7, #12]
 8000baa:	3b01      	subs	r3, #1
 8000bac:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:230
        while((CAN_STAT_IWS == (CAN_STAT(can_periph) & CAN_STAT_IWS)) && (0U != timeout)) {
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	3304      	adds	r3, #4
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	f003 0301 	and.w	r3, r3, #1
 8000bb8:	2b01      	cmp	r3, #1
 8000bba:	d102      	bne.n	8000bc2 <can_init+0x192>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:230 (discriminator 1)
 8000bbc:	68fb      	ldr	r3, [r7, #12]
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	d1f2      	bne.n	8000ba8 <can_init+0x178>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:234
        }
        /* check exit initialize mode */
        if(0U != timeout) {
 8000bc2:	68fb      	ldr	r3, [r7, #12]
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	d001      	beq.n	8000bcc <can_init+0x19c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:235
            flag = SUCCESS;
 8000bc8:	2301      	movs	r3, #1
 8000bca:	72fb      	strb	r3, [r7, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:238
        }
    }
    return flag;
 8000bcc:	7afb      	ldrb	r3, [r7, #11]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:239
}
 8000bce:	4618      	mov	r0, r3
 8000bd0:	3714      	adds	r7, #20
 8000bd2:	46bd      	mov	sp, r7
 8000bd4:	bc80      	pop	{r7}
 8000bd6:	4770      	bx	lr

08000bd8 <can_filter_init>:
can_filter_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:257
      \arg        filter_enable: ENABLE or DISABLE
    \param[out] none
    \retval     none
*/
void can_filter_init(can_filter_parameter_struct *can_filter_parameter_init)
{
 8000bd8:	b480      	push	{r7}
 8000bda:	b085      	sub	sp, #20
 8000bdc:	af00      	add	r7, sp, #0
 8000bde:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:258
    uint32_t val = 0U;
 8000be0:	2300      	movs	r3, #0
 8000be2:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:260

    val = ((uint32_t)1) << (can_filter_parameter_init->filter_number);
 8000be4:	687b      	ldr	r3, [r7, #4]
 8000be6:	895b      	ldrh	r3, [r3, #10]
 8000be8:	461a      	mov	r2, r3
 8000bea:	2301      	movs	r3, #1
 8000bec:	4093      	lsls	r3, r2
 8000bee:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:262
    /* filter lock disable */
    CAN_FCTL(CAN0) |= CAN_FCTL_FLD;
 8000bf0:	4b50      	ldr	r3, [pc, #320]	; (8000d34 <can_filter_init+0x15c>)
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	4a4f      	ldr	r2, [pc, #316]	; (8000d34 <can_filter_init+0x15c>)
 8000bf6:	f043 0301 	orr.w	r3, r3, #1
 8000bfa:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:264
    /* disable filter */
    CAN_FW(CAN0) &= ~(uint32_t)val;
 8000bfc:	4b4e      	ldr	r3, [pc, #312]	; (8000d38 <can_filter_init+0x160>)
 8000bfe:	681a      	ldr	r2, [r3, #0]
 8000c00:	68fb      	ldr	r3, [r7, #12]
 8000c02:	43db      	mvns	r3, r3
 8000c04:	494c      	ldr	r1, [pc, #304]	; (8000d38 <can_filter_init+0x160>)
 8000c06:	4013      	ands	r3, r2
 8000c08:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:267

    /* filter 16 bits */
    if(CAN_FILTERBITS_16BIT == can_filter_parameter_init->filter_bits) {
 8000c0a:	687b      	ldr	r3, [r7, #4]
 8000c0c:	89db      	ldrh	r3, [r3, #14]
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d129      	bne.n	8000c66 <can_filter_init+0x8e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:269
        /* set filter 16 bits */
        CAN_FSCFG(CAN0) &= ~(uint32_t)val;
 8000c12:	4b4a      	ldr	r3, [pc, #296]	; (8000d3c <can_filter_init+0x164>)
 8000c14:	681a      	ldr	r2, [r3, #0]
 8000c16:	68fb      	ldr	r3, [r7, #12]
 8000c18:	43db      	mvns	r3, r3
 8000c1a:	4948      	ldr	r1, [pc, #288]	; (8000d3c <can_filter_init+0x164>)
 8000c1c:	4013      	ands	r3, r2
 8000c1e:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:272
        /* first 16 bits list and first 16 bits mask or first 16 bits list and second 16 bits list */
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_low) & CAN_FILTER_MASK_16BITS) | \
 8000c20:	687b      	ldr	r3, [r7, #4]
 8000c22:	88db      	ldrh	r3, [r3, #6]
 8000c24:	041a      	lsls	r2, r3, #16
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:273
                FDATA_MASK_LOW((can_filter_parameter_init->filter_list_low) & CAN_FILTER_MASK_16BITS);
 8000c26:	687b      	ldr	r3, [r7, #4]
 8000c28:	885b      	ldrh	r3, [r3, #2]
 8000c2a:	4618      	mov	r0, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:271
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
 8000c2c:	687b      	ldr	r3, [r7, #4]
 8000c2e:	895b      	ldrh	r3, [r3, #10]
 8000c30:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8000c34:	f603 43c8 	addw	r3, r3, #3272	; 0xcc8
 8000c38:	00db      	lsls	r3, r3, #3
 8000c3a:	4619      	mov	r1, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:272
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_low) & CAN_FILTER_MASK_16BITS) | \
 8000c3c:	ea42 0300 	orr.w	r3, r2, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:271
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
 8000c40:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:276
        /* second 16 bits list and second 16 bits mask or third 16 bits list and fourth 16 bits list */
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_high) & CAN_FILTER_MASK_16BITS) | \
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	889b      	ldrh	r3, [r3, #4]
 8000c46:	041a      	lsls	r2, r3, #16
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:277
                FDATA_MASK_LOW((can_filter_parameter_init->filter_list_high) & CAN_FILTER_MASK_16BITS);
 8000c48:	687b      	ldr	r3, [r7, #4]
 8000c4a:	881b      	ldrh	r3, [r3, #0]
 8000c4c:	4618      	mov	r0, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:275
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	895b      	ldrh	r3, [r3, #10]
 8000c52:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8000c56:	f603 43c8 	addw	r3, r3, #3272	; 0xcc8
 8000c5a:	00db      	lsls	r3, r3, #3
 8000c5c:	3304      	adds	r3, #4
 8000c5e:	4619      	mov	r1, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:276
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_high) & CAN_FILTER_MASK_16BITS) | \
 8000c60:	ea42 0300 	orr.w	r3, r2, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:275
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
 8000c64:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:280
    }
    /* filter 32 bits */
    if(CAN_FILTERBITS_32BIT == can_filter_parameter_init->filter_bits) {
 8000c66:	687b      	ldr	r3, [r7, #4]
 8000c68:	89db      	ldrh	r3, [r3, #14]
 8000c6a:	2b01      	cmp	r3, #1
 8000c6c:	d128      	bne.n	8000cc0 <can_filter_init+0xe8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:282
        /* set filter 32 bits */
        CAN_FSCFG(CAN0) |= (uint32_t)val;
 8000c6e:	4b33      	ldr	r3, [pc, #204]	; (8000d3c <can_filter_init+0x164>)
 8000c70:	681a      	ldr	r2, [r3, #0]
 8000c72:	4932      	ldr	r1, [pc, #200]	; (8000d3c <can_filter_init+0x164>)
 8000c74:	68fb      	ldr	r3, [r7, #12]
 8000c76:	4313      	orrs	r3, r2
 8000c78:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:285
        /* 32 bits list or first 32 bits list */
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_list_high) & CAN_FILTER_MASK_16BITS) |
 8000c7a:	687b      	ldr	r3, [r7, #4]
 8000c7c:	881b      	ldrh	r3, [r3, #0]
 8000c7e:	041a      	lsls	r2, r3, #16
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:286
                FDATA_MASK_LOW((can_filter_parameter_init->filter_list_low) & CAN_FILTER_MASK_16BITS);
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	885b      	ldrh	r3, [r3, #2]
 8000c84:	4618      	mov	r0, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:284
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	895b      	ldrh	r3, [r3, #10]
 8000c8a:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8000c8e:	f603 43c8 	addw	r3, r3, #3272	; 0xcc8
 8000c92:	00db      	lsls	r3, r3, #3
 8000c94:	4619      	mov	r1, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:285
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_list_high) & CAN_FILTER_MASK_16BITS) |
 8000c96:	ea42 0300 	orr.w	r3, r2, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:284
        CAN_FDATA0(CAN0, can_filter_parameter_init->filter_number) = \
 8000c9a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:289
        /* 32 bits mask or second 32 bits list */
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_high) & CAN_FILTER_MASK_16BITS) |
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	889b      	ldrh	r3, [r3, #4]
 8000ca0:	041a      	lsls	r2, r3, #16
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:290
                FDATA_MASK_LOW((can_filter_parameter_init->filter_mask_low) & CAN_FILTER_MASK_16BITS);
 8000ca2:	687b      	ldr	r3, [r7, #4]
 8000ca4:	88db      	ldrh	r3, [r3, #6]
 8000ca6:	4618      	mov	r0, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:288
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	895b      	ldrh	r3, [r3, #10]
 8000cac:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8000cb0:	f603 43c8 	addw	r3, r3, #3272	; 0xcc8
 8000cb4:	00db      	lsls	r3, r3, #3
 8000cb6:	3304      	adds	r3, #4
 8000cb8:	4619      	mov	r1, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:289
                FDATA_MASK_HIGH((can_filter_parameter_init->filter_mask_high) & CAN_FILTER_MASK_16BITS) |
 8000cba:	ea42 0300 	orr.w	r3, r2, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:288
        CAN_FDATA1(CAN0, can_filter_parameter_init->filter_number) = \
 8000cbe:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:294
    }

    /* filter mode */
    if(CAN_FILTERMODE_MASK == can_filter_parameter_init->filter_mode) {
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	899b      	ldrh	r3, [r3, #12]
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d107      	bne.n	8000cd8 <can_filter_init+0x100>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:296
        /* mask mode */
        CAN_FMCFG(CAN0) &= ~(uint32_t)val;
 8000cc8:	4b1d      	ldr	r3, [pc, #116]	; (8000d40 <can_filter_init+0x168>)
 8000cca:	681a      	ldr	r2, [r3, #0]
 8000ccc:	68fb      	ldr	r3, [r7, #12]
 8000cce:	43db      	mvns	r3, r3
 8000cd0:	491b      	ldr	r1, [pc, #108]	; (8000d40 <can_filter_init+0x168>)
 8000cd2:	4013      	ands	r3, r2
 8000cd4:	600b      	str	r3, [r1, #0]
 8000cd6:	e005      	b.n	8000ce4 <can_filter_init+0x10c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:299
    } else {
        /* list mode */
        CAN_FMCFG(CAN0) |= (uint32_t)val;
 8000cd8:	4b19      	ldr	r3, [pc, #100]	; (8000d40 <can_filter_init+0x168>)
 8000cda:	681a      	ldr	r2, [r3, #0]
 8000cdc:	4918      	ldr	r1, [pc, #96]	; (8000d40 <can_filter_init+0x168>)
 8000cde:	68fb      	ldr	r3, [r7, #12]
 8000ce0:	4313      	orrs	r3, r2
 8000ce2:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:303
    }

    /* filter FIFO */
    if(CAN_FIFO0 == (can_filter_parameter_init->filter_fifo_number)) {
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	891b      	ldrh	r3, [r3, #8]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d107      	bne.n	8000cfc <can_filter_init+0x124>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:305
        /* FIFO0 */
        CAN_FAFIFO(CAN0) &= ~(uint32_t)val;
 8000cec:	4b15      	ldr	r3, [pc, #84]	; (8000d44 <can_filter_init+0x16c>)
 8000cee:	681a      	ldr	r2, [r3, #0]
 8000cf0:	68fb      	ldr	r3, [r7, #12]
 8000cf2:	43db      	mvns	r3, r3
 8000cf4:	4913      	ldr	r1, [pc, #76]	; (8000d44 <can_filter_init+0x16c>)
 8000cf6:	4013      	ands	r3, r2
 8000cf8:	600b      	str	r3, [r1, #0]
 8000cfa:	e005      	b.n	8000d08 <can_filter_init+0x130>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:308
    } else {
        /* FIFO1 */
        CAN_FAFIFO(CAN0) |= (uint32_t)val;
 8000cfc:	4b11      	ldr	r3, [pc, #68]	; (8000d44 <can_filter_init+0x16c>)
 8000cfe:	681a      	ldr	r2, [r3, #0]
 8000d00:	4910      	ldr	r1, [pc, #64]	; (8000d44 <can_filter_init+0x16c>)
 8000d02:	68fb      	ldr	r3, [r7, #12]
 8000d04:	4313      	orrs	r3, r2
 8000d06:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:312
    }

    /* filter working */
    if(ENABLE == can_filter_parameter_init->filter_enable) {
 8000d08:	687b      	ldr	r3, [r7, #4]
 8000d0a:	7c1b      	ldrb	r3, [r3, #16]
 8000d0c:	2b01      	cmp	r3, #1
 8000d0e:	d105      	bne.n	8000d1c <can_filter_init+0x144>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:314

        CAN_FW(CAN0) |= (uint32_t)val;
 8000d10:	4b09      	ldr	r3, [pc, #36]	; (8000d38 <can_filter_init+0x160>)
 8000d12:	681a      	ldr	r2, [r3, #0]
 8000d14:	4908      	ldr	r1, [pc, #32]	; (8000d38 <can_filter_init+0x160>)
 8000d16:	68fb      	ldr	r3, [r7, #12]
 8000d18:	4313      	orrs	r3, r2
 8000d1a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:318
    }

    /* filter lock enable */
    CAN_FCTL(CAN0) &= ~CAN_FCTL_FLD;
 8000d1c:	4b05      	ldr	r3, [pc, #20]	; (8000d34 <can_filter_init+0x15c>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	4a04      	ldr	r2, [pc, #16]	; (8000d34 <can_filter_init+0x15c>)
 8000d22:	f023 0301 	bic.w	r3, r3, #1
 8000d26:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:319
}
 8000d28:	bf00      	nop
 8000d2a:	3714      	adds	r7, #20
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bc80      	pop	{r7}
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop
 8000d34:	40006600 	.word	0x40006600
 8000d38:	4000661c 	.word	0x4000661c
 8000d3c:	4000660c 	.word	0x4000660c
 8000d40:	40006604 	.word	0x40006604
 8000d44:	40006614 	.word	0x40006614

08000d48 <can_message_transmit>:
can_message_transmit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:441
      \arg        tx_data[]: 0x00 - 0xFF
    \param[out] none
    \retval     mailbox_number
*/
uint8_t can_message_transmit(uint32_t can_periph, can_trasnmit_message_struct *transmit_message)
{
 8000d48:	b480      	push	{r7}
 8000d4a:	b085      	sub	sp, #20
 8000d4c:	af00      	add	r7, sp, #0
 8000d4e:	6078      	str	r0, [r7, #4]
 8000d50:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:442
    uint8_t mailbox_number = CAN_MAILBOX0;
 8000d52:	2300      	movs	r3, #0
 8000d54:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:445

    /* select one empty mailbox */
    if(CAN_TSTAT_TME0 == (CAN_TSTAT(can_periph)&CAN_TSTAT_TME0)) {
 8000d56:	687b      	ldr	r3, [r7, #4]
 8000d58:	3308      	adds	r3, #8
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8000d60:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8000d64:	d102      	bne.n	8000d6c <can_message_transmit+0x24>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:446
        mailbox_number = CAN_MAILBOX0;
 8000d66:	2300      	movs	r3, #0
 8000d68:	73fb      	strb	r3, [r7, #15]
 8000d6a:	e017      	b.n	8000d9c <can_message_transmit+0x54>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:447
    } else if(CAN_TSTAT_TME1 == (CAN_TSTAT(can_periph)&CAN_TSTAT_TME1)) {
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	3308      	adds	r3, #8
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8000d76:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8000d7a:	d102      	bne.n	8000d82 <can_message_transmit+0x3a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:448
        mailbox_number = CAN_MAILBOX1;
 8000d7c:	2301      	movs	r3, #1
 8000d7e:	73fb      	strb	r3, [r7, #15]
 8000d80:	e00c      	b.n	8000d9c <can_message_transmit+0x54>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:449
    } else if(CAN_TSTAT_TME2 == (CAN_TSTAT(can_periph)&CAN_TSTAT_TME2)) {
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	3308      	adds	r3, #8
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000d8c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8000d90:	d102      	bne.n	8000d98 <can_message_transmit+0x50>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:450
        mailbox_number = CAN_MAILBOX2;
 8000d92:	2302      	movs	r3, #2
 8000d94:	73fb      	strb	r3, [r7, #15]
 8000d96:	e001      	b.n	8000d9c <can_message_transmit+0x54>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:452
    } else {
        mailbox_number = CAN_NOMAILBOX;
 8000d98:	2303      	movs	r3, #3
 8000d9a:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:455
    }
    /* return no mailbox empty */
    if(CAN_NOMAILBOX == mailbox_number) {
 8000d9c:	7bfb      	ldrb	r3, [r7, #15]
 8000d9e:	2b03      	cmp	r3, #3
 8000da0:	d101      	bne.n	8000da6 <can_message_transmit+0x5e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:456
        return CAN_NOMAILBOX;
 8000da2:	2303      	movs	r3, #3
 8000da4:	e0a6      	b.n	8000ef4 <can_message_transmit+0x1ac>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:459
    }

    CAN_TMI(can_periph, mailbox_number) &= CAN_TMI_TEN;
 8000da6:	7bfb      	ldrb	r3, [r7, #15]
 8000da8:	011a      	lsls	r2, r3, #4
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	4413      	add	r3, r2
 8000dae:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	7bfa      	ldrb	r2, [r7, #15]
 8000db6:	0111      	lsls	r1, r2, #4
 8000db8:	687a      	ldr	r2, [r7, #4]
 8000dba:	440a      	add	r2, r1
 8000dbc:	f502 72c0 	add.w	r2, r2, #384	; 0x180
 8000dc0:	f003 0301 	and.w	r3, r3, #1
 8000dc4:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:460
    if(CAN_FF_STANDARD == transmit_message->tx_ff) {
 8000dc6:	683b      	ldr	r3, [r7, #0]
 8000dc8:	7a1b      	ldrb	r3, [r3, #8]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	d115      	bne.n	8000dfa <can_message_transmit+0xb2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:462
        /* set transmit mailbox standard identifier */
        CAN_TMI(can_periph, mailbox_number) |= (uint32_t)(TMI_SFID(transmit_message->tx_sfid) | \
 8000dce:	7bfb      	ldrb	r3, [r7, #15]
 8000dd0:	011a      	lsls	r2, r3, #4
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	4413      	add	r3, r2
 8000dd6:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000dda:	681a      	ldr	r2, [r3, #0]
 8000ddc:	683b      	ldr	r3, [r7, #0]
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	055b      	lsls	r3, r3, #21
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:463
                                               transmit_message->tx_ft);
 8000de2:	6839      	ldr	r1, [r7, #0]
 8000de4:	7a49      	ldrb	r1, [r1, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:462
        CAN_TMI(can_periph, mailbox_number) |= (uint32_t)(TMI_SFID(transmit_message->tx_sfid) | \
 8000de6:	430b      	orrs	r3, r1
 8000de8:	7bf9      	ldrb	r1, [r7, #15]
 8000dea:	0108      	lsls	r0, r1, #4
 8000dec:	6879      	ldr	r1, [r7, #4]
 8000dee:	4401      	add	r1, r0
 8000df0:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 8000df4:	4313      	orrs	r3, r2
 8000df6:	600b      	str	r3, [r1, #0]
 8000df8:	e017      	b.n	8000e2a <can_message_transmit+0xe2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:466
    } else {
        /* set transmit mailbox extended identifier */
        CAN_TMI(can_periph, mailbox_number) |= (uint32_t)(TMI_EFID(transmit_message->tx_efid) | \
 8000dfa:	7bfb      	ldrb	r3, [r7, #15]
 8000dfc:	011a      	lsls	r2, r3, #4
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	4413      	add	r3, r2
 8000e02:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000e06:	681a      	ldr	r2, [r3, #0]
 8000e08:	683b      	ldr	r3, [r7, #0]
 8000e0a:	685b      	ldr	r3, [r3, #4]
 8000e0c:	00db      	lsls	r3, r3, #3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:467
                                               transmit_message->tx_ff | \
 8000e0e:	6839      	ldr	r1, [r7, #0]
 8000e10:	7a09      	ldrb	r1, [r1, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:466
        CAN_TMI(can_periph, mailbox_number) |= (uint32_t)(TMI_EFID(transmit_message->tx_efid) | \
 8000e12:	430b      	orrs	r3, r1
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:468
                                               transmit_message->tx_ft);
 8000e14:	6839      	ldr	r1, [r7, #0]
 8000e16:	7a49      	ldrb	r1, [r1, #9]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:466
        CAN_TMI(can_periph, mailbox_number) |= (uint32_t)(TMI_EFID(transmit_message->tx_efid) | \
 8000e18:	430b      	orrs	r3, r1
 8000e1a:	7bf9      	ldrb	r1, [r7, #15]
 8000e1c:	0108      	lsls	r0, r1, #4
 8000e1e:	6879      	ldr	r1, [r7, #4]
 8000e20:	4401      	add	r1, r0
 8000e22:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 8000e26:	4313      	orrs	r3, r2
 8000e28:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:471
    }
    /* set the data length */
    CAN_TMP(can_periph, mailbox_number) &= ~CAN_TMP_DLENC;
 8000e2a:	7bfb      	ldrb	r3, [r7, #15]
 8000e2c:	011a      	lsls	r2, r3, #4
 8000e2e:	687b      	ldr	r3, [r7, #4]
 8000e30:	4413      	add	r3, r2
 8000e32:	f503 73c2 	add.w	r3, r3, #388	; 0x184
 8000e36:	681b      	ldr	r3, [r3, #0]
 8000e38:	7bfa      	ldrb	r2, [r7, #15]
 8000e3a:	0111      	lsls	r1, r2, #4
 8000e3c:	687a      	ldr	r2, [r7, #4]
 8000e3e:	440a      	add	r2, r1
 8000e40:	f502 72c2 	add.w	r2, r2, #388	; 0x184
 8000e44:	f023 030f 	bic.w	r3, r3, #15
 8000e48:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:472
    CAN_TMP(can_periph, mailbox_number) |= transmit_message->tx_dlen;
 8000e4a:	7bfb      	ldrb	r3, [r7, #15]
 8000e4c:	011a      	lsls	r2, r3, #4
 8000e4e:	687b      	ldr	r3, [r7, #4]
 8000e50:	4413      	add	r3, r2
 8000e52:	f503 73c2 	add.w	r3, r3, #388	; 0x184
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	683a      	ldr	r2, [r7, #0]
 8000e5a:	7a92      	ldrb	r2, [r2, #10]
 8000e5c:	4610      	mov	r0, r2
 8000e5e:	7bfa      	ldrb	r2, [r7, #15]
 8000e60:	0111      	lsls	r1, r2, #4
 8000e62:	687a      	ldr	r2, [r7, #4]
 8000e64:	440a      	add	r2, r1
 8000e66:	f502 72c2 	add.w	r2, r2, #388	; 0x184
 8000e6a:	4303      	orrs	r3, r0
 8000e6c:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:474
    /* set the data */
    CAN_TMDATA0(can_periph, mailbox_number) = TMDATA0_DB3(transmit_message->tx_data[3]) | \
 8000e6e:	683b      	ldr	r3, [r7, #0]
 8000e70:	7b9b      	ldrb	r3, [r3, #14]
 8000e72:	061a      	lsls	r2, r3, #24
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:475
            TMDATA0_DB2(transmit_message->tx_data[2]) | \
 8000e74:	683b      	ldr	r3, [r7, #0]
 8000e76:	7b5b      	ldrb	r3, [r3, #13]
 8000e78:	041b      	lsls	r3, r3, #16
 8000e7a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:474
    CAN_TMDATA0(can_periph, mailbox_number) = TMDATA0_DB3(transmit_message->tx_data[3]) | \
 8000e7e:	431a      	orrs	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:476
            TMDATA0_DB1(transmit_message->tx_data[1]) | \
 8000e80:	683b      	ldr	r3, [r7, #0]
 8000e82:	7b1b      	ldrb	r3, [r3, #12]
 8000e84:	021b      	lsls	r3, r3, #8
 8000e86:	b29b      	uxth	r3, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:475
            TMDATA0_DB2(transmit_message->tx_data[2]) | \
 8000e88:	4313      	orrs	r3, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:477
            TMDATA0_DB0(transmit_message->tx_data[0]);
 8000e8a:	683a      	ldr	r2, [r7, #0]
 8000e8c:	7ad2      	ldrb	r2, [r2, #11]
 8000e8e:	4610      	mov	r0, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:474
    CAN_TMDATA0(can_periph, mailbox_number) = TMDATA0_DB3(transmit_message->tx_data[3]) | \
 8000e90:	7bfa      	ldrb	r2, [r7, #15]
 8000e92:	0111      	lsls	r1, r2, #4
 8000e94:	687a      	ldr	r2, [r7, #4]
 8000e96:	440a      	add	r2, r1
 8000e98:	f502 72c4 	add.w	r2, r2, #392	; 0x188
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:476
            TMDATA0_DB1(transmit_message->tx_data[1]) | \
 8000e9c:	4303      	orrs	r3, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:474
    CAN_TMDATA0(can_periph, mailbox_number) = TMDATA0_DB3(transmit_message->tx_data[3]) | \
 8000e9e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:478
    CAN_TMDATA1(can_periph, mailbox_number) = TMDATA1_DB7(transmit_message->tx_data[7]) | \
 8000ea0:	683b      	ldr	r3, [r7, #0]
 8000ea2:	7c9b      	ldrb	r3, [r3, #18]
 8000ea4:	061a      	lsls	r2, r3, #24
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:479
            TMDATA1_DB6(transmit_message->tx_data[6]) | \
 8000ea6:	683b      	ldr	r3, [r7, #0]
 8000ea8:	7c5b      	ldrb	r3, [r3, #17]
 8000eaa:	041b      	lsls	r3, r3, #16
 8000eac:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:478
    CAN_TMDATA1(can_periph, mailbox_number) = TMDATA1_DB7(transmit_message->tx_data[7]) | \
 8000eb0:	431a      	orrs	r2, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:480
            TMDATA1_DB5(transmit_message->tx_data[5]) | \
 8000eb2:	683b      	ldr	r3, [r7, #0]
 8000eb4:	7c1b      	ldrb	r3, [r3, #16]
 8000eb6:	021b      	lsls	r3, r3, #8
 8000eb8:	b29b      	uxth	r3, r3
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:479
            TMDATA1_DB6(transmit_message->tx_data[6]) | \
 8000eba:	4313      	orrs	r3, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:481
            TMDATA1_DB4(transmit_message->tx_data[4]);
 8000ebc:	683a      	ldr	r2, [r7, #0]
 8000ebe:	7bd2      	ldrb	r2, [r2, #15]
 8000ec0:	4610      	mov	r0, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:478
    CAN_TMDATA1(can_periph, mailbox_number) = TMDATA1_DB7(transmit_message->tx_data[7]) | \
 8000ec2:	7bfa      	ldrb	r2, [r7, #15]
 8000ec4:	0111      	lsls	r1, r2, #4
 8000ec6:	687a      	ldr	r2, [r7, #4]
 8000ec8:	440a      	add	r2, r1
 8000eca:	f502 72c6 	add.w	r2, r2, #396	; 0x18c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:480
            TMDATA1_DB5(transmit_message->tx_data[5]) | \
 8000ece:	4303      	orrs	r3, r0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:478
    CAN_TMDATA1(can_periph, mailbox_number) = TMDATA1_DB7(transmit_message->tx_data[7]) | \
 8000ed0:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:483
    /* enable transmission */
    CAN_TMI(can_periph, mailbox_number) |= CAN_TMI_TEN;
 8000ed2:	7bfb      	ldrb	r3, [r7, #15]
 8000ed4:	011a      	lsls	r2, r3, #4
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	4413      	add	r3, r2
 8000eda:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	7bfa      	ldrb	r2, [r7, #15]
 8000ee2:	0111      	lsls	r1, r2, #4
 8000ee4:	687a      	ldr	r2, [r7, #4]
 8000ee6:	440a      	add	r2, r1
 8000ee8:	f502 72c0 	add.w	r2, r2, #384	; 0x180
 8000eec:	f043 0301 	orr.w	r3, r3, #1
 8000ef0:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:485

    return mailbox_number;
 8000ef2:	7bfb      	ldrb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:486
}
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	3714      	adds	r7, #20
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	bc80      	pop	{r7}
 8000efc:	4770      	bx	lr
	...

08000f00 <can_transmit_states>:
can_transmit_states():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:499
      \arg        CAN_MAILBOX(x=0,1,2)
    \param[out] none
    \retval     can_transmit_state_enum
*/
can_transmit_state_enum can_transmit_states(uint32_t can_periph, uint8_t mailbox_number)
{
 8000f00:	b480      	push	{r7}
 8000f02:	b085      	sub	sp, #20
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	6078      	str	r0, [r7, #4]
 8000f08:	460b      	mov	r3, r1
 8000f0a:	70fb      	strb	r3, [r7, #3]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:500
    can_transmit_state_enum state = CAN_TRANSMIT_FAILED;
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:501
    uint32_t val = 0U;
 8000f10:	2300      	movs	r3, #0
 8000f12:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:504

    /* check selected mailbox state */
    switch(mailbox_number) {
 8000f14:	78fb      	ldrb	r3, [r7, #3]
 8000f16:	2b02      	cmp	r3, #2
 8000f18:	d014      	beq.n	8000f44 <can_transmit_states+0x44>
 8000f1a:	2b02      	cmp	r3, #2
 8000f1c:	dc19      	bgt.n	8000f52 <can_transmit_states+0x52>
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	d002      	beq.n	8000f28 <can_transmit_states+0x28>
 8000f22:	2b01      	cmp	r3, #1
 8000f24:	d007      	beq.n	8000f36 <can_transmit_states+0x36>
 8000f26:	e014      	b.n	8000f52 <can_transmit_states+0x52>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:507
    /* mailbox0 */
    case CAN_MAILBOX0:
        val = CAN_TSTAT(can_periph) & (CAN_TSTAT_MTF0 | CAN_TSTAT_MTFNERR0 | CAN_TSTAT_TME0);
 8000f28:	687b      	ldr	r3, [r7, #4]
 8000f2a:	3308      	adds	r3, #8
 8000f2c:	681a      	ldr	r2, [r3, #0]
 8000f2e:	4b21      	ldr	r3, [pc, #132]	; (8000fb4 <can_transmit_states+0xb4>)
 8000f30:	4013      	ands	r3, r2
 8000f32:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:508
        break;
 8000f34:	e010      	b.n	8000f58 <can_transmit_states+0x58>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:511
    /* mailbox1 */
    case CAN_MAILBOX1:
        val = CAN_TSTAT(can_periph) & (CAN_TSTAT_MTF1 | CAN_TSTAT_MTFNERR1 | CAN_TSTAT_TME1);
 8000f36:	687b      	ldr	r3, [r7, #4]
 8000f38:	3308      	adds	r3, #8
 8000f3a:	681a      	ldr	r2, [r3, #0]
 8000f3c:	4b1e      	ldr	r3, [pc, #120]	; (8000fb8 <can_transmit_states+0xb8>)
 8000f3e:	4013      	ands	r3, r2
 8000f40:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:512
        break;
 8000f42:	e009      	b.n	8000f58 <can_transmit_states+0x58>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:515
    /* mailbox2 */
    case CAN_MAILBOX2:
        val = CAN_TSTAT(can_periph) & (CAN_TSTAT_MTF2 | CAN_TSTAT_MTFNERR2 | CAN_TSTAT_TME2);
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	3308      	adds	r3, #8
 8000f48:	681a      	ldr	r2, [r3, #0]
 8000f4a:	4b1c      	ldr	r3, [pc, #112]	; (8000fbc <can_transmit_states+0xbc>)
 8000f4c:	4013      	ands	r3, r2
 8000f4e:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:516
        break;
 8000f50:	e002      	b.n	8000f58 <can_transmit_states+0x58>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:518
    default:
        val = CAN_TRANSMIT_FAILED;
 8000f52:	2300      	movs	r3, #0
 8000f54:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:519
        break;
 8000f56:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:522
    }

    switch(val) {
 8000f58:	68bb      	ldr	r3, [r7, #8]
 8000f5a:	4a18      	ldr	r2, [pc, #96]	; (8000fbc <can_transmit_states+0xbc>)
 8000f5c:	4293      	cmp	r3, r2
 8000f5e:	d01c      	beq.n	8000f9a <can_transmit_states+0x9a>
 8000f60:	68bb      	ldr	r3, [r7, #8]
 8000f62:	4a16      	ldr	r2, [pc, #88]	; (8000fbc <can_transmit_states+0xbc>)
 8000f64:	4293      	cmp	r3, r2
 8000f66:	d81b      	bhi.n	8000fa0 <can_transmit_states+0xa0>
 8000f68:	68bb      	ldr	r3, [r7, #8]
 8000f6a:	4a13      	ldr	r2, [pc, #76]	; (8000fb8 <can_transmit_states+0xb8>)
 8000f6c:	4293      	cmp	r3, r2
 8000f6e:	d011      	beq.n	8000f94 <can_transmit_states+0x94>
 8000f70:	68bb      	ldr	r3, [r7, #8]
 8000f72:	4a11      	ldr	r2, [pc, #68]	; (8000fb8 <can_transmit_states+0xb8>)
 8000f74:	4293      	cmp	r3, r2
 8000f76:	d813      	bhi.n	8000fa0 <can_transmit_states+0xa0>
 8000f78:	68bb      	ldr	r3, [r7, #8]
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d004      	beq.n	8000f88 <can_transmit_states+0x88>
 8000f7e:	68bb      	ldr	r3, [r7, #8]
 8000f80:	4a0c      	ldr	r2, [pc, #48]	; (8000fb4 <can_transmit_states+0xb4>)
 8000f82:	4293      	cmp	r3, r2
 8000f84:	d003      	beq.n	8000f8e <can_transmit_states+0x8e>
 8000f86:	e00b      	b.n	8000fa0 <can_transmit_states+0xa0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:525
    /* transmit pending */
    case(CAN_STATE_PENDING):
        state = CAN_TRANSMIT_PENDING;
 8000f88:	2302      	movs	r3, #2
 8000f8a:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:526
        break;
 8000f8c:	e00b      	b.n	8000fa6 <can_transmit_states+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:529
    /* mailbox0 transmit succeeded */
    case(CAN_TSTAT_MTF0 | CAN_TSTAT_MTFNERR0 | CAN_TSTAT_TME0):
        state = CAN_TRANSMIT_OK;
 8000f8e:	2301      	movs	r3, #1
 8000f90:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:530
        break;
 8000f92:	e008      	b.n	8000fa6 <can_transmit_states+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:533
    /* mailbox1 transmit succeeded */
    case(CAN_TSTAT_MTF1 | CAN_TSTAT_MTFNERR1 | CAN_TSTAT_TME1):
        state = CAN_TRANSMIT_OK;
 8000f94:	2301      	movs	r3, #1
 8000f96:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:534
        break;
 8000f98:	e005      	b.n	8000fa6 <can_transmit_states+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:537
    /* mailbox2 transmit succeeded */
    case(CAN_TSTAT_MTF2 | CAN_TSTAT_MTFNERR2 | CAN_TSTAT_TME2):
        state = CAN_TRANSMIT_OK;
 8000f9a:	2301      	movs	r3, #1
 8000f9c:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:538
        break;
 8000f9e:	e002      	b.n	8000fa6 <can_transmit_states+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:541
    /* transmit failed */
    default:
        state = CAN_TRANSMIT_FAILED;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	73fb      	strb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:542
        break;
 8000fa4:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:544
    }
    return state;
 8000fa6:	7bfb      	ldrb	r3, [r7, #15]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:545
}
 8000fa8:	4618      	mov	r0, r3
 8000faa:	3714      	adds	r7, #20
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bc80      	pop	{r7}
 8000fb0:	4770      	bx	lr
 8000fb2:	bf00      	nop
 8000fb4:	04000003 	.word	0x04000003
 8000fb8:	08000300 	.word	0x08000300
 8000fbc:	10030000 	.word	0x10030000

08000fc0 <can_interrupt_enable>:
can_interrupt_enable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:934
      \arg        CAN_INT_SLPW: sleep working interrupt enable
    \param[out] none
    \retval     none
*/
void can_interrupt_enable(uint32_t can_periph, uint32_t interrupt)
{
 8000fc0:	b480      	push	{r7}
 8000fc2:	b083      	sub	sp, #12
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	6078      	str	r0, [r7, #4]
 8000fc8:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:935
    CAN_INTEN(can_periph) |= interrupt;
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	3314      	adds	r3, #20
 8000fce:	681a      	ldr	r2, [r3, #0]
 8000fd0:	687b      	ldr	r3, [r7, #4]
 8000fd2:	3314      	adds	r3, #20
 8000fd4:	4619      	mov	r1, r3
 8000fd6:	683b      	ldr	r3, [r7, #0]
 8000fd8:	4313      	orrs	r3, r2
 8000fda:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_can.c:936
}
 8000fdc:	bf00      	nop
 8000fde:	370c      	adds	r7, #12
 8000fe0:	46bd      	mov	sp, r7
 8000fe2:	bc80      	pop	{r7}
 8000fe4:	4770      	bx	lr
	...

08000fe8 <exti_init>:
exti_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:74
      \arg        EXTI_TRIG_NONE: without rising edge or falling edge trigger
    \param[out] none
    \retval     none
*/
void exti_init(exti_line_enum linex, exti_mode_enum mode, exti_trig_type_enum trig_type)
{
 8000fe8:	b480      	push	{r7}
 8000fea:	b083      	sub	sp, #12
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	6078      	str	r0, [r7, #4]
 8000ff0:	460b      	mov	r3, r1
 8000ff2:	70fb      	strb	r3, [r7, #3]
 8000ff4:	4613      	mov	r3, r2
 8000ff6:	70bb      	strb	r3, [r7, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:76
    /* reset the EXTI line x */
    EXTI_INTEN &= ~(uint32_t)linex;
 8000ff8:	4b34      	ldr	r3, [pc, #208]	; (80010cc <exti_init+0xe4>)
 8000ffa:	681a      	ldr	r2, [r3, #0]
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	43db      	mvns	r3, r3
 8001000:	4932      	ldr	r1, [pc, #200]	; (80010cc <exti_init+0xe4>)
 8001002:	4013      	ands	r3, r2
 8001004:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:77
    EXTI_EVEN &= ~(uint32_t)linex;
 8001006:	4b32      	ldr	r3, [pc, #200]	; (80010d0 <exti_init+0xe8>)
 8001008:	681a      	ldr	r2, [r3, #0]
 800100a:	687b      	ldr	r3, [r7, #4]
 800100c:	43db      	mvns	r3, r3
 800100e:	4930      	ldr	r1, [pc, #192]	; (80010d0 <exti_init+0xe8>)
 8001010:	4013      	ands	r3, r2
 8001012:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:78
    EXTI_RTEN &= ~(uint32_t)linex;
 8001014:	4b2f      	ldr	r3, [pc, #188]	; (80010d4 <exti_init+0xec>)
 8001016:	681a      	ldr	r2, [r3, #0]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	43db      	mvns	r3, r3
 800101c:	492d      	ldr	r1, [pc, #180]	; (80010d4 <exti_init+0xec>)
 800101e:	4013      	ands	r3, r2
 8001020:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:79
    EXTI_FTEN &= ~(uint32_t)linex;
 8001022:	4b2d      	ldr	r3, [pc, #180]	; (80010d8 <exti_init+0xf0>)
 8001024:	681a      	ldr	r2, [r3, #0]
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	43db      	mvns	r3, r3
 800102a:	492b      	ldr	r1, [pc, #172]	; (80010d8 <exti_init+0xf0>)
 800102c:	4013      	ands	r3, r2
 800102e:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:82
    
    /* set the EXTI mode and enable the interrupts or events from EXTI line x */
    switch(mode){
 8001030:	78fb      	ldrb	r3, [r7, #3]
 8001032:	2b00      	cmp	r3, #0
 8001034:	d002      	beq.n	800103c <exti_init+0x54>
 8001036:	2b01      	cmp	r3, #1
 8001038:	d007      	beq.n	800104a <exti_init+0x62>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:90
        break;
    case EXTI_EVENT:
        EXTI_EVEN |= (uint32_t)linex;
        break;
    default:
        break;
 800103a:	e00d      	b.n	8001058 <exti_init+0x70>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:84
        EXTI_INTEN |= (uint32_t)linex;
 800103c:	4b23      	ldr	r3, [pc, #140]	; (80010cc <exti_init+0xe4>)
 800103e:	681a      	ldr	r2, [r3, #0]
 8001040:	4922      	ldr	r1, [pc, #136]	; (80010cc <exti_init+0xe4>)
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	4313      	orrs	r3, r2
 8001046:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:85
        break;
 8001048:	e006      	b.n	8001058 <exti_init+0x70>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:87
        EXTI_EVEN |= (uint32_t)linex;
 800104a:	4b21      	ldr	r3, [pc, #132]	; (80010d0 <exti_init+0xe8>)
 800104c:	681a      	ldr	r2, [r3, #0]
 800104e:	4920      	ldr	r1, [pc, #128]	; (80010d0 <exti_init+0xe8>)
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	4313      	orrs	r3, r2
 8001054:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:88
        break;
 8001056:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:94
    }
    
    /* set the EXTI trigger type */
    switch(trig_type){
 8001058:	78bb      	ldrb	r3, [r7, #2]
 800105a:	2b02      	cmp	r3, #2
 800105c:	d022      	beq.n	80010a4 <exti_init+0xbc>
 800105e:	2b02      	cmp	r3, #2
 8001060:	dc2d      	bgt.n	80010be <exti_init+0xd6>
 8001062:	2b00      	cmp	r3, #0
 8001064:	d002      	beq.n	800106c <exti_init+0x84>
 8001066:	2b01      	cmp	r3, #1
 8001068:	d00e      	beq.n	8001088 <exti_init+0xa0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:109
        EXTI_RTEN |= (uint32_t)linex;
        EXTI_FTEN |= (uint32_t)linex;
        break;
    case EXTI_TRIG_NONE:
    default:
        break;
 800106a:	e028      	b.n	80010be <exti_init+0xd6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:96
        EXTI_RTEN |= (uint32_t)linex;
 800106c:	4b19      	ldr	r3, [pc, #100]	; (80010d4 <exti_init+0xec>)
 800106e:	681a      	ldr	r2, [r3, #0]
 8001070:	4918      	ldr	r1, [pc, #96]	; (80010d4 <exti_init+0xec>)
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	4313      	orrs	r3, r2
 8001076:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:97
        EXTI_FTEN &= ~(uint32_t)linex;
 8001078:	4b17      	ldr	r3, [pc, #92]	; (80010d8 <exti_init+0xf0>)
 800107a:	681a      	ldr	r2, [r3, #0]
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	43db      	mvns	r3, r3
 8001080:	4915      	ldr	r1, [pc, #84]	; (80010d8 <exti_init+0xf0>)
 8001082:	4013      	ands	r3, r2
 8001084:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:98
        break;
 8001086:	e01b      	b.n	80010c0 <exti_init+0xd8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:100
        EXTI_RTEN &= ~(uint32_t)linex;
 8001088:	4b12      	ldr	r3, [pc, #72]	; (80010d4 <exti_init+0xec>)
 800108a:	681a      	ldr	r2, [r3, #0]
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	43db      	mvns	r3, r3
 8001090:	4910      	ldr	r1, [pc, #64]	; (80010d4 <exti_init+0xec>)
 8001092:	4013      	ands	r3, r2
 8001094:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:101
        EXTI_FTEN |= (uint32_t)linex;
 8001096:	4b10      	ldr	r3, [pc, #64]	; (80010d8 <exti_init+0xf0>)
 8001098:	681a      	ldr	r2, [r3, #0]
 800109a:	490f      	ldr	r1, [pc, #60]	; (80010d8 <exti_init+0xf0>)
 800109c:	687b      	ldr	r3, [r7, #4]
 800109e:	4313      	orrs	r3, r2
 80010a0:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:102
        break;
 80010a2:	e00d      	b.n	80010c0 <exti_init+0xd8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:104
        EXTI_RTEN |= (uint32_t)linex;
 80010a4:	4b0b      	ldr	r3, [pc, #44]	; (80010d4 <exti_init+0xec>)
 80010a6:	681a      	ldr	r2, [r3, #0]
 80010a8:	490a      	ldr	r1, [pc, #40]	; (80010d4 <exti_init+0xec>)
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	4313      	orrs	r3, r2
 80010ae:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:105
        EXTI_FTEN |= (uint32_t)linex;
 80010b0:	4b09      	ldr	r3, [pc, #36]	; (80010d8 <exti_init+0xf0>)
 80010b2:	681a      	ldr	r2, [r3, #0]
 80010b4:	4908      	ldr	r1, [pc, #32]	; (80010d8 <exti_init+0xf0>)
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	4313      	orrs	r3, r2
 80010ba:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:106
        break;
 80010bc:	e000      	b.n	80010c0 <exti_init+0xd8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:109
        break;
 80010be:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:111
    }
}
 80010c0:	bf00      	nop
 80010c2:	370c      	adds	r7, #12
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bc80      	pop	{r7}
 80010c8:	4770      	bx	lr
 80010ca:	bf00      	nop
 80010cc:	40010400 	.word	0x40010400
 80010d0:	40010404 	.word	0x40010404
 80010d4:	40010408 	.word	0x40010408
 80010d8:	4001040c 	.word	0x4001040c

080010dc <exti_interrupt_flag_clear>:
exti_interrupt_flag_clear():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:247
      \arg        EXTI_x (x=0..19): EXTI line x
    \param[out] none
    \retval     none
*/
void exti_interrupt_flag_clear(exti_line_enum linex)
{
 80010dc:	b480      	push	{r7}
 80010de:	b083      	sub	sp, #12
 80010e0:	af00      	add	r7, sp, #0
 80010e2:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:248
    EXTI_PD = (uint32_t)linex;
 80010e4:	4a03      	ldr	r2, [pc, #12]	; (80010f4 <exti_interrupt_flag_clear+0x18>)
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_exti.c:249
}
 80010ea:	bf00      	nop
 80010ec:	370c      	adds	r7, #12
 80010ee:	46bd      	mov	sp, r7
 80010f0:	bc80      	pop	{r7}
 80010f2:	4770      	bx	lr
 80010f4:	40010414 	.word	0x40010414

080010f8 <gpio_init>:
gpio_init():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:134
      \arg        GPIO_PIN_x(x=0..15), GPIO_PIN_ALL
    \param[out] none
    \retval     none
*/
void gpio_init(uint32_t gpio_periph, uint32_t mode, uint32_t speed, uint32_t pin)
{
 80010f8:	b480      	push	{r7}
 80010fa:	b089      	sub	sp, #36	; 0x24
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	60b9      	str	r1, [r7, #8]
 8001102:	607a      	str	r2, [r7, #4]
 8001104:	603b      	str	r3, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:136
    uint16_t i;
    uint32_t temp_mode = 0U;
 8001106:	2300      	movs	r3, #0
 8001108:	61bb      	str	r3, [r7, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:137
    uint32_t reg = 0U;
 800110a:	2300      	movs	r3, #0
 800110c:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:140

    /* GPIO mode configuration */
    temp_mode = (uint32_t)(mode & ((uint32_t)0x0FU));
 800110e:	68bb      	ldr	r3, [r7, #8]
 8001110:	f003 030f 	and.w	r3, r3, #15
 8001114:	61bb      	str	r3, [r7, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:143
    
    /* GPIO speed configuration */
    if(((uint32_t)0x00U) != ((uint32_t)mode & ((uint32_t)0x10U))){
 8001116:	68bb      	ldr	r3, [r7, #8]
 8001118:	f003 0310 	and.w	r3, r3, #16
 800111c:	2b00      	cmp	r3, #0
 800111e:	d014      	beq.n	800114a <gpio_init+0x52>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:145
        /* output mode max speed */
        if(GPIO_OSPEED_MAX == (uint32_t)speed){
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	2b04      	cmp	r3, #4
 8001124:	d10d      	bne.n	8001142 <gpio_init+0x4a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:146
            temp_mode |= (uint32_t)0x03U;
 8001126:	69bb      	ldr	r3, [r7, #24]
 8001128:	f043 0303 	orr.w	r3, r3, #3
 800112c:	61bb      	str	r3, [r7, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:148
            /* set the corresponding SPD bit */
            GPIOx_SPD(gpio_periph) |= (uint32_t)pin ;
 800112e:	68fb      	ldr	r3, [r7, #12]
 8001130:	333c      	adds	r3, #60	; 0x3c
 8001132:	681a      	ldr	r2, [r3, #0]
 8001134:	68fb      	ldr	r3, [r7, #12]
 8001136:	333c      	adds	r3, #60	; 0x3c
 8001138:	4619      	mov	r1, r3
 800113a:	683b      	ldr	r3, [r7, #0]
 800113c:	4313      	orrs	r3, r2
 800113e:	600b      	str	r3, [r1, #0]
 8001140:	e003      	b.n	800114a <gpio_init+0x52>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:151
        }else{
            /* output mode max speed:10MHz,2MHz,50MHz */
            temp_mode |= (uint32_t)speed;
 8001142:	69ba      	ldr	r2, [r7, #24]
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	4313      	orrs	r3, r2
 8001148:	61bb      	str	r3, [r7, #24]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:156
        }
    }

    /* configure the eight low port pins with GPIO_CTL0 */
    for(i = 0U;i < 8U;i++){
 800114a:	2300      	movs	r3, #0
 800114c:	83fb      	strh	r3, [r7, #30]
 800114e:	e039      	b.n	80011c4 <gpio_init+0xcc>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:157
        if((1U << i) & pin){
 8001150:	8bfb      	ldrh	r3, [r7, #30]
 8001152:	2201      	movs	r2, #1
 8001154:	409a      	lsls	r2, r3
 8001156:	683b      	ldr	r3, [r7, #0]
 8001158:	4013      	ands	r3, r2
 800115a:	2b00      	cmp	r3, #0
 800115c:	d02f      	beq.n	80011be <gpio_init+0xc6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:158
            reg = GPIO_CTL0(gpio_periph);
 800115e:	68fb      	ldr	r3, [r7, #12]
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:161
            
            /* clear the specified pin mode bits */
            reg &= ~GPIO_MODE_MASK(i);
 8001164:	8bfb      	ldrh	r3, [r7, #30]
 8001166:	009b      	lsls	r3, r3, #2
 8001168:	220f      	movs	r2, #15
 800116a:	fa02 f303 	lsl.w	r3, r2, r3
 800116e:	43db      	mvns	r3, r3
 8001170:	697a      	ldr	r2, [r7, #20]
 8001172:	4013      	ands	r3, r2
 8001174:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:163
            /* set the specified pin mode bits */
            reg |= GPIO_MODE_SET(i, temp_mode);
 8001176:	8bfb      	ldrh	r3, [r7, #30]
 8001178:	009b      	lsls	r3, r3, #2
 800117a:	69ba      	ldr	r2, [r7, #24]
 800117c:	fa02 f303 	lsl.w	r3, r2, r3
 8001180:	697a      	ldr	r2, [r7, #20]
 8001182:	4313      	orrs	r3, r2
 8001184:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:166
            
            /* set IPD or IPU */
            if(GPIO_MODE_IPD == mode){
 8001186:	68bb      	ldr	r3, [r7, #8]
 8001188:	2b28      	cmp	r3, #40	; 0x28
 800118a:	d109      	bne.n	80011a0 <gpio_init+0xa8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:168
                /* reset the corresponding OCTL bit */
                GPIO_BC(gpio_periph) = (uint32_t)((1U << i) & pin);
 800118c:	8bfb      	ldrh	r3, [r7, #30]
 800118e:	2201      	movs	r2, #1
 8001190:	409a      	lsls	r2, r3
 8001192:	68fb      	ldr	r3, [r7, #12]
 8001194:	3314      	adds	r3, #20
 8001196:	4619      	mov	r1, r3
 8001198:	683b      	ldr	r3, [r7, #0]
 800119a:	4013      	ands	r3, r2
 800119c:	600b      	str	r3, [r1, #0]
 800119e:	e00b      	b.n	80011b8 <gpio_init+0xc0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:171
            }else{
                /* set the corresponding OCTL bit */
                if(GPIO_MODE_IPU == mode){
 80011a0:	68bb      	ldr	r3, [r7, #8]
 80011a2:	2b48      	cmp	r3, #72	; 0x48
 80011a4:	d108      	bne.n	80011b8 <gpio_init+0xc0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:172
                    GPIO_BOP(gpio_periph) = (uint32_t)((1U << i) & pin);
 80011a6:	8bfb      	ldrh	r3, [r7, #30]
 80011a8:	2201      	movs	r2, #1
 80011aa:	409a      	lsls	r2, r3
 80011ac:	68fb      	ldr	r3, [r7, #12]
 80011ae:	3310      	adds	r3, #16
 80011b0:	4619      	mov	r1, r3
 80011b2:	683b      	ldr	r3, [r7, #0]
 80011b4:	4013      	ands	r3, r2
 80011b6:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:176
                }
            }
            /* set GPIO_CTL0 register */
            GPIO_CTL0(gpio_periph) = reg;
 80011b8:	68fb      	ldr	r3, [r7, #12]
 80011ba:	697a      	ldr	r2, [r7, #20]
 80011bc:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:156 (discriminator 2)
    for(i = 0U;i < 8U;i++){
 80011be:	8bfb      	ldrh	r3, [r7, #30]
 80011c0:	3301      	adds	r3, #1
 80011c2:	83fb      	strh	r3, [r7, #30]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:156 (discriminator 1)
 80011c4:	8bfb      	ldrh	r3, [r7, #30]
 80011c6:	2b07      	cmp	r3, #7
 80011c8:	d9c2      	bls.n	8001150 <gpio_init+0x58>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:180
        }
    }
    /* configure the eight high port pins with GPIO_CTL1 */
    for(i = 8U;i < 16U;i++){
 80011ca:	2308      	movs	r3, #8
 80011cc:	83fb      	strh	r3, [r7, #30]
 80011ce:	e03e      	b.n	800124e <gpio_init+0x156>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:181
        if((1U << i) & pin){
 80011d0:	8bfb      	ldrh	r3, [r7, #30]
 80011d2:	2201      	movs	r2, #1
 80011d4:	409a      	lsls	r2, r3
 80011d6:	683b      	ldr	r3, [r7, #0]
 80011d8:	4013      	ands	r3, r2
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d034      	beq.n	8001248 <gpio_init+0x150>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:182
            reg = GPIO_CTL1(gpio_periph);
 80011de:	68fb      	ldr	r3, [r7, #12]
 80011e0:	3304      	adds	r3, #4
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:185
            
            /* clear the specified pin mode bits */
            reg &= ~GPIO_MODE_MASK(i - 8U);
 80011e6:	8bfb      	ldrh	r3, [r7, #30]
 80011e8:	3b08      	subs	r3, #8
 80011ea:	009b      	lsls	r3, r3, #2
 80011ec:	220f      	movs	r2, #15
 80011ee:	fa02 f303 	lsl.w	r3, r2, r3
 80011f2:	43db      	mvns	r3, r3
 80011f4:	697a      	ldr	r2, [r7, #20]
 80011f6:	4013      	ands	r3, r2
 80011f8:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:187
            /* set the specified pin mode bits */
            reg |= GPIO_MODE_SET(i - 8U, temp_mode);
 80011fa:	8bfb      	ldrh	r3, [r7, #30]
 80011fc:	3b08      	subs	r3, #8
 80011fe:	009b      	lsls	r3, r3, #2
 8001200:	69ba      	ldr	r2, [r7, #24]
 8001202:	fa02 f303 	lsl.w	r3, r2, r3
 8001206:	697a      	ldr	r2, [r7, #20]
 8001208:	4313      	orrs	r3, r2
 800120a:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:190
            
            /* set IPD or IPU */
            if(GPIO_MODE_IPD == mode){
 800120c:	68bb      	ldr	r3, [r7, #8]
 800120e:	2b28      	cmp	r3, #40	; 0x28
 8001210:	d109      	bne.n	8001226 <gpio_init+0x12e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:192
                /* reset the corresponding OCTL bit */
                GPIO_BC(gpio_periph) = (uint32_t)((1U << i) & pin);
 8001212:	8bfb      	ldrh	r3, [r7, #30]
 8001214:	2201      	movs	r2, #1
 8001216:	409a      	lsls	r2, r3
 8001218:	68fb      	ldr	r3, [r7, #12]
 800121a:	3314      	adds	r3, #20
 800121c:	4619      	mov	r1, r3
 800121e:	683b      	ldr	r3, [r7, #0]
 8001220:	4013      	ands	r3, r2
 8001222:	600b      	str	r3, [r1, #0]
 8001224:	e00b      	b.n	800123e <gpio_init+0x146>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:195
            }else{
                /* set the corresponding OCTL bit */
                if(GPIO_MODE_IPU == mode){
 8001226:	68bb      	ldr	r3, [r7, #8]
 8001228:	2b48      	cmp	r3, #72	; 0x48
 800122a:	d108      	bne.n	800123e <gpio_init+0x146>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:196
                    GPIO_BOP(gpio_periph) = (uint32_t)((1U << i) & pin);
 800122c:	8bfb      	ldrh	r3, [r7, #30]
 800122e:	2201      	movs	r2, #1
 8001230:	409a      	lsls	r2, r3
 8001232:	68fb      	ldr	r3, [r7, #12]
 8001234:	3310      	adds	r3, #16
 8001236:	4619      	mov	r1, r3
 8001238:	683b      	ldr	r3, [r7, #0]
 800123a:	4013      	ands	r3, r2
 800123c:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:200
                }
            }
            /* set GPIO_CTL1 register */
            GPIO_CTL1(gpio_periph) = reg;
 800123e:	68fb      	ldr	r3, [r7, #12]
 8001240:	3304      	adds	r3, #4
 8001242:	461a      	mov	r2, r3
 8001244:	697b      	ldr	r3, [r7, #20]
 8001246:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:180 (discriminator 2)
    for(i = 8U;i < 16U;i++){
 8001248:	8bfb      	ldrh	r3, [r7, #30]
 800124a:	3301      	adds	r3, #1
 800124c:	83fb      	strh	r3, [r7, #30]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:180 (discriminator 1)
 800124e:	8bfb      	ldrh	r3, [r7, #30]
 8001250:	2b0f      	cmp	r3, #15
 8001252:	d9bd      	bls.n	80011d0 <gpio_init+0xd8>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:203
        }
    }
}
 8001254:	bf00      	nop
 8001256:	bf00      	nop
 8001258:	3724      	adds	r7, #36	; 0x24
 800125a:	46bd      	mov	sp, r7
 800125c:	bc80      	pop	{r7}
 800125e:	4770      	bx	lr

08001260 <gpio_exti_source_select>:
gpio_exti_source_select():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:451
      \arg        GPIO_PIN_SOURCE_x(x=0..15)
    \param[out] none
    \retval     none
*/
void gpio_exti_source_select(uint8_t output_port, uint8_t output_pin)
{
 8001260:	b480      	push	{r7}
 8001262:	b085      	sub	sp, #20
 8001264:	af00      	add	r7, sp, #0
 8001266:	4603      	mov	r3, r0
 8001268:	460a      	mov	r2, r1
 800126a:	71fb      	strb	r3, [r7, #7]
 800126c:	4613      	mov	r3, r2
 800126e:	71bb      	strb	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:452
    uint32_t source = 0U;
 8001270:	2300      	movs	r3, #0
 8001272:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:453
    source = ((uint32_t)0x0FU) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK));
 8001274:	79bb      	ldrb	r3, [r7, #6]
 8001276:	f003 0303 	and.w	r3, r3, #3
 800127a:	009b      	lsls	r3, r3, #2
 800127c:	220f      	movs	r2, #15
 800127e:	fa02 f303 	lsl.w	r3, r2, r3
 8001282:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:456

    /* select EXTI sources */
    if(GPIO_PIN_SOURCE_4 > output_pin){
 8001284:	79bb      	ldrb	r3, [r7, #6]
 8001286:	2b03      	cmp	r3, #3
 8001288:	d813      	bhi.n	80012b2 <gpio_exti_source_select+0x52>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:458
        /* select EXTI0/EXTI1/EXTI2/EXTI3 */
        AFIO_EXTISS0 &= ~source;
 800128a:	4b2d      	ldr	r3, [pc, #180]	; (8001340 <gpio_exti_source_select+0xe0>)
 800128c:	681a      	ldr	r2, [r3, #0]
 800128e:	68fb      	ldr	r3, [r7, #12]
 8001290:	43db      	mvns	r3, r3
 8001292:	492b      	ldr	r1, [pc, #172]	; (8001340 <gpio_exti_source_select+0xe0>)
 8001294:	4013      	ands	r3, r2
 8001296:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:459
        AFIO_EXTISS0 |= (((uint32_t)output_port) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK)));
 8001298:	4b29      	ldr	r3, [pc, #164]	; (8001340 <gpio_exti_source_select+0xe0>)
 800129a:	681a      	ldr	r2, [r3, #0]
 800129c:	79f9      	ldrb	r1, [r7, #7]
 800129e:	79bb      	ldrb	r3, [r7, #6]
 80012a0:	f003 0303 	and.w	r3, r3, #3
 80012a4:	009b      	lsls	r3, r3, #2
 80012a6:	fa01 f303 	lsl.w	r3, r1, r3
 80012aa:	4925      	ldr	r1, [pc, #148]	; (8001340 <gpio_exti_source_select+0xe0>)
 80012ac:	4313      	orrs	r3, r2
 80012ae:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:473
    }else{
        /* select EXTI12/EXTI13/EXTI14/EXTI15 */
        AFIO_EXTISS3 &= ~source;
        AFIO_EXTISS3 |= (((uint32_t)output_port) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK)));
    }
}
 80012b0:	e040      	b.n	8001334 <gpio_exti_source_select+0xd4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:460
    }else if(GPIO_PIN_SOURCE_8 > output_pin){
 80012b2:	79bb      	ldrb	r3, [r7, #6]
 80012b4:	2b07      	cmp	r3, #7
 80012b6:	d813      	bhi.n	80012e0 <gpio_exti_source_select+0x80>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:462
        AFIO_EXTISS1 &= ~source;
 80012b8:	4b22      	ldr	r3, [pc, #136]	; (8001344 <gpio_exti_source_select+0xe4>)
 80012ba:	681a      	ldr	r2, [r3, #0]
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	43db      	mvns	r3, r3
 80012c0:	4920      	ldr	r1, [pc, #128]	; (8001344 <gpio_exti_source_select+0xe4>)
 80012c2:	4013      	ands	r3, r2
 80012c4:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:463
        AFIO_EXTISS1 |= (((uint32_t)output_port) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK)));
 80012c6:	4b1f      	ldr	r3, [pc, #124]	; (8001344 <gpio_exti_source_select+0xe4>)
 80012c8:	681a      	ldr	r2, [r3, #0]
 80012ca:	79f9      	ldrb	r1, [r7, #7]
 80012cc:	79bb      	ldrb	r3, [r7, #6]
 80012ce:	f003 0303 	and.w	r3, r3, #3
 80012d2:	009b      	lsls	r3, r3, #2
 80012d4:	fa01 f303 	lsl.w	r3, r1, r3
 80012d8:	491a      	ldr	r1, [pc, #104]	; (8001344 <gpio_exti_source_select+0xe4>)
 80012da:	4313      	orrs	r3, r2
 80012dc:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:473
}
 80012de:	e029      	b.n	8001334 <gpio_exti_source_select+0xd4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:464
    }else if(GPIO_PIN_SOURCE_12 > output_pin){
 80012e0:	79bb      	ldrb	r3, [r7, #6]
 80012e2:	2b0b      	cmp	r3, #11
 80012e4:	d813      	bhi.n	800130e <gpio_exti_source_select+0xae>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:466
        AFIO_EXTISS2 &= ~source;
 80012e6:	4b18      	ldr	r3, [pc, #96]	; (8001348 <gpio_exti_source_select+0xe8>)
 80012e8:	681a      	ldr	r2, [r3, #0]
 80012ea:	68fb      	ldr	r3, [r7, #12]
 80012ec:	43db      	mvns	r3, r3
 80012ee:	4916      	ldr	r1, [pc, #88]	; (8001348 <gpio_exti_source_select+0xe8>)
 80012f0:	4013      	ands	r3, r2
 80012f2:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:467
        AFIO_EXTISS2 |= (((uint32_t)output_port) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK)));
 80012f4:	4b14      	ldr	r3, [pc, #80]	; (8001348 <gpio_exti_source_select+0xe8>)
 80012f6:	681a      	ldr	r2, [r3, #0]
 80012f8:	79f9      	ldrb	r1, [r7, #7]
 80012fa:	79bb      	ldrb	r3, [r7, #6]
 80012fc:	f003 0303 	and.w	r3, r3, #3
 8001300:	009b      	lsls	r3, r3, #2
 8001302:	fa01 f303 	lsl.w	r3, r1, r3
 8001306:	4910      	ldr	r1, [pc, #64]	; (8001348 <gpio_exti_source_select+0xe8>)
 8001308:	4313      	orrs	r3, r2
 800130a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:473
}
 800130c:	e012      	b.n	8001334 <gpio_exti_source_select+0xd4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:470
        AFIO_EXTISS3 &= ~source;
 800130e:	4b0f      	ldr	r3, [pc, #60]	; (800134c <gpio_exti_source_select+0xec>)
 8001310:	681a      	ldr	r2, [r3, #0]
 8001312:	68fb      	ldr	r3, [r7, #12]
 8001314:	43db      	mvns	r3, r3
 8001316:	490d      	ldr	r1, [pc, #52]	; (800134c <gpio_exti_source_select+0xec>)
 8001318:	4013      	ands	r3, r2
 800131a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:471
        AFIO_EXTISS3 |= (((uint32_t)output_port) << (AFIO_EXTI_SOURCE_FIELDS * (output_pin & AFIO_EXTI_SOURCE_MASK)));
 800131c:	4b0b      	ldr	r3, [pc, #44]	; (800134c <gpio_exti_source_select+0xec>)
 800131e:	681a      	ldr	r2, [r3, #0]
 8001320:	79f9      	ldrb	r1, [r7, #7]
 8001322:	79bb      	ldrb	r3, [r7, #6]
 8001324:	f003 0303 	and.w	r3, r3, #3
 8001328:	009b      	lsls	r3, r3, #2
 800132a:	fa01 f303 	lsl.w	r3, r1, r3
 800132e:	4907      	ldr	r1, [pc, #28]	; (800134c <gpio_exti_source_select+0xec>)
 8001330:	4313      	orrs	r3, r2
 8001332:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_gpio.c:473
}
 8001334:	bf00      	nop
 8001336:	3714      	adds	r7, #20
 8001338:	46bd      	mov	sp, r7
 800133a:	bc80      	pop	{r7}
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	40010008 	.word	0x40010008
 8001344:	4001000c 	.word	0x4001000c
 8001348:	40010010 	.word	0x40010010
 800134c:	40010014 	.word	0x40010014

08001350 <nvic_priority_group_set>:
nvic_priority_group_set():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:49
      \arg        NVIC_PRIGROUP_PRE4_SUB0:4 bits for pre-emption priority 0 bits for subpriority
    \param[out] none
    \retval     none
*/
void nvic_priority_group_set(uint32_t nvic_prigroup)
{
 8001350:	b480      	push	{r7}
 8001352:	b083      	sub	sp, #12
 8001354:	af00      	add	r7, sp, #0
 8001356:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:51
    /* set the priority group value */
    SCB->AIRCR = NVIC_AIRCR_VECTKEY_MASK | nvic_prigroup;
 8001358:	4a05      	ldr	r2, [pc, #20]	; (8001370 <nvic_priority_group_set+0x20>)
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001360:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001364:	60d3      	str	r3, [r2, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:52
}
 8001366:	bf00      	nop
 8001368:	370c      	adds	r7, #12
 800136a:	46bd      	mov	sp, r7
 800136c:	bc80      	pop	{r7}
 800136e:	4770      	bx	lr
 8001370:	e000ed00 	.word	0xe000ed00

08001374 <nvic_irq_enable>:
nvic_irq_enable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:64
    \param[out] none
    \retval     none
*/
void nvic_irq_enable(IRQn_Type nvic_irq, uint8_t nvic_irq_pre_priority, 
                     uint8_t nvic_irq_sub_priority)
{
 8001374:	b580      	push	{r7, lr}
 8001376:	b086      	sub	sp, #24
 8001378:	af00      	add	r7, sp, #0
 800137a:	4603      	mov	r3, r0
 800137c:	71fb      	strb	r3, [r7, #7]
 800137e:	460b      	mov	r3, r1
 8001380:	71bb      	strb	r3, [r7, #6]
 8001382:	4613      	mov	r3, r2
 8001384:	717b      	strb	r3, [r7, #5]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:65
    uint32_t temp_priority = 0x00U, temp_pre = 0x00U, temp_sub = 0x00U;
 8001386:	2300      	movs	r3, #0
 8001388:	60fb      	str	r3, [r7, #12]
 800138a:	2300      	movs	r3, #0
 800138c:	617b      	str	r3, [r7, #20]
 800138e:	2300      	movs	r3, #0
 8001390:	613b      	str	r3, [r7, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:67
    /* use the priority group value to get the temp_pre and the temp_sub */
    if(((SCB->AIRCR) & (uint32_t)0x700U)==NVIC_PRIGROUP_PRE0_SUB4){
 8001392:	4b3a      	ldr	r3, [pc, #232]	; (800147c <nvic_irq_enable+0x108>)
 8001394:	68db      	ldr	r3, [r3, #12]
 8001396:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800139a:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800139e:	d104      	bne.n	80013aa <nvic_irq_enable+0x36>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:68
        temp_pre=0U;
 80013a0:	2300      	movs	r3, #0
 80013a2:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:69
        temp_sub=0x4U;
 80013a4:	2304      	movs	r3, #4
 80013a6:	613b      	str	r3, [r7, #16]
 80013a8:	e037      	b.n	800141a <nvic_irq_enable+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:70
    }else if(((SCB->AIRCR) & (uint32_t)0x700U)==NVIC_PRIGROUP_PRE1_SUB3){
 80013aa:	4b34      	ldr	r3, [pc, #208]	; (800147c <nvic_irq_enable+0x108>)
 80013ac:	68db      	ldr	r3, [r3, #12]
 80013ae:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80013b2:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80013b6:	d104      	bne.n	80013c2 <nvic_irq_enable+0x4e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:71
        temp_pre=1U;
 80013b8:	2301      	movs	r3, #1
 80013ba:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:72
        temp_sub=0x3U;
 80013bc:	2303      	movs	r3, #3
 80013be:	613b      	str	r3, [r7, #16]
 80013c0:	e02b      	b.n	800141a <nvic_irq_enable+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:73
    }else if(((SCB->AIRCR) & (uint32_t)0x700U)==NVIC_PRIGROUP_PRE2_SUB2){
 80013c2:	4b2e      	ldr	r3, [pc, #184]	; (800147c <nvic_irq_enable+0x108>)
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80013ca:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80013ce:	d104      	bne.n	80013da <nvic_irq_enable+0x66>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:74
        temp_pre=2U;
 80013d0:	2302      	movs	r3, #2
 80013d2:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:75
        temp_sub=0x2U;
 80013d4:	2302      	movs	r3, #2
 80013d6:	613b      	str	r3, [r7, #16]
 80013d8:	e01f      	b.n	800141a <nvic_irq_enable+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:76
    }else if(((SCB->AIRCR) & (uint32_t)0x700U)==NVIC_PRIGROUP_PRE3_SUB1){
 80013da:	4b28      	ldr	r3, [pc, #160]	; (800147c <nvic_irq_enable+0x108>)
 80013dc:	68db      	ldr	r3, [r3, #12]
 80013de:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80013e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80013e6:	d104      	bne.n	80013f2 <nvic_irq_enable+0x7e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:77
        temp_pre=3U;
 80013e8:	2303      	movs	r3, #3
 80013ea:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:78
        temp_sub=0x1U;
 80013ec:	2301      	movs	r3, #1
 80013ee:	613b      	str	r3, [r7, #16]
 80013f0:	e013      	b.n	800141a <nvic_irq_enable+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:79
    }else if(((SCB->AIRCR) & (uint32_t)0x700U)==NVIC_PRIGROUP_PRE4_SUB0){
 80013f2:	4b22      	ldr	r3, [pc, #136]	; (800147c <nvic_irq_enable+0x108>)
 80013f4:	68db      	ldr	r3, [r3, #12]
 80013f6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80013fa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80013fe:	d104      	bne.n	800140a <nvic_irq_enable+0x96>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:80
        temp_pre=4U;
 8001400:	2304      	movs	r3, #4
 8001402:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:81
        temp_sub=0x0U;
 8001404:	2300      	movs	r3, #0
 8001406:	613b      	str	r3, [r7, #16]
 8001408:	e007      	b.n	800141a <nvic_irq_enable+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:83
    }else{
        nvic_priority_group_set(NVIC_PRIGROUP_PRE2_SUB2);
 800140a:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800140e:	f7ff ff9f 	bl	8001350 <nvic_priority_group_set>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:84
        temp_pre=2U;
 8001412:	2302      	movs	r3, #2
 8001414:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:85
        temp_sub=0x2U;
 8001416:	2302      	movs	r3, #2
 8001418:	613b      	str	r3, [r7, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:88
    }
    /* get the temp_priority to fill the NVIC->IP register */
    temp_priority = (uint32_t)nvic_irq_pre_priority << (0x4U - temp_pre);
 800141a:	79ba      	ldrb	r2, [r7, #6]
 800141c:	697b      	ldr	r3, [r7, #20]
 800141e:	f1c3 0304 	rsb	r3, r3, #4
 8001422:	fa02 f303 	lsl.w	r3, r2, r3
 8001426:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:89
    temp_priority |= nvic_irq_sub_priority &(0x0FU >> (0x4U - temp_sub));
 8001428:	797a      	ldrb	r2, [r7, #5]
 800142a:	693b      	ldr	r3, [r7, #16]
 800142c:	f1c3 0304 	rsb	r3, r3, #4
 8001430:	210f      	movs	r1, #15
 8001432:	fa21 f303 	lsr.w	r3, r1, r3
 8001436:	4013      	ands	r3, r2
 8001438:	68fa      	ldr	r2, [r7, #12]
 800143a:	4313      	orrs	r3, r2
 800143c:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:90
    temp_priority = temp_priority << 0x04U;
 800143e:	68fb      	ldr	r3, [r7, #12]
 8001440:	011b      	lsls	r3, r3, #4
 8001442:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:91
    NVIC->IP[nvic_irq] = (uint8_t)temp_priority;
 8001444:	4a0e      	ldr	r2, [pc, #56]	; (8001480 <nvic_irq_enable+0x10c>)
 8001446:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800144a:	68f9      	ldr	r1, [r7, #12]
 800144c:	b2c9      	uxtb	r1, r1
 800144e:	4413      	add	r3, r2
 8001450:	460a      	mov	r2, r1
 8001452:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:93
    /* enable the selected IRQ */
    NVIC->ISER[nvic_irq >> 0x05U] = (uint32_t)0x01U << (nvic_irq & (uint8_t)0x1FU);
 8001456:	79fb      	ldrb	r3, [r7, #7]
 8001458:	f003 031f 	and.w	r3, r3, #31
 800145c:	4908      	ldr	r1, [pc, #32]	; (8001480 <nvic_irq_enable+0x10c>)
 800145e:	f997 2007 	ldrsb.w	r2, [r7, #7]
 8001462:	1152      	asrs	r2, r2, #5
 8001464:	b252      	sxtb	r2, r2
 8001466:	4610      	mov	r0, r2
 8001468:	2201      	movs	r2, #1
 800146a:	fa02 f303 	lsl.w	r3, r2, r3
 800146e:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_misc.c:94
}
 8001472:	bf00      	nop
 8001474:	3718      	adds	r7, #24
 8001476:	46bd      	mov	sp, r7
 8001478:	bd80      	pop	{r7, pc}
 800147a:	bf00      	nop
 800147c:	e000ed00 	.word	0xe000ed00
 8001480:	e000e100 	.word	0xe000e100

08001484 <rcu_periph_clock_enable>:
rcu_periph_clock_enable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:138
      \arg        RCU_BKPI: BKP interface clock
    \param[out] none
    \retval     none
*/
void rcu_periph_clock_enable(rcu_periph_enum periph)
{
 8001484:	b480      	push	{r7}
 8001486:	b083      	sub	sp, #12
 8001488:	af00      	add	r7, sp, #0
 800148a:	4603      	mov	r3, r0
 800148c:	80fb      	strh	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:139
    RCU_REG_VAL(periph) |= BIT(RCU_BIT_POS(periph));
 800148e:	88fb      	ldrh	r3, [r7, #6]
 8001490:	099b      	lsrs	r3, r3, #6
 8001492:	b29b      	uxth	r3, r3
 8001494:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001498:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800149c:	6819      	ldr	r1, [r3, #0]
 800149e:	88fb      	ldrh	r3, [r7, #6]
 80014a0:	f003 031f 	and.w	r3, r3, #31
 80014a4:	2201      	movs	r2, #1
 80014a6:	409a      	lsls	r2, r3
 80014a8:	88fb      	ldrh	r3, [r7, #6]
 80014aa:	099b      	lsrs	r3, r3, #6
 80014ac:	b29b      	uxth	r3, r3
 80014ae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80014b2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80014b6:	4618      	mov	r0, r3
 80014b8:	ea41 0302 	orr.w	r3, r1, r2
 80014bc:	6003      	str	r3, [r0, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:140
}
 80014be:	bf00      	nop
 80014c0:	370c      	adds	r7, #12
 80014c2:	46bd      	mov	sp, r7
 80014c4:	bc80      	pop	{r7}
 80014c6:	4770      	bx	lr

080014c8 <rcu_periph_reset_enable>:
rcu_periph_reset_enable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:231
      \arg        RCU_BKPIRST: reset BKPI
    \param[out] none
    \retval     none
*/
void rcu_periph_reset_enable(rcu_periph_reset_enum periph_reset)
{
 80014c8:	b480      	push	{r7}
 80014ca:	b083      	sub	sp, #12
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	4603      	mov	r3, r0
 80014d0:	80fb      	strh	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:232
    RCU_REG_VAL(periph_reset) |= BIT(RCU_BIT_POS(periph_reset));
 80014d2:	88fb      	ldrh	r3, [r7, #6]
 80014d4:	099b      	lsrs	r3, r3, #6
 80014d6:	b29b      	uxth	r3, r3
 80014d8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80014dc:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80014e0:	6819      	ldr	r1, [r3, #0]
 80014e2:	88fb      	ldrh	r3, [r7, #6]
 80014e4:	f003 031f 	and.w	r3, r3, #31
 80014e8:	2201      	movs	r2, #1
 80014ea:	409a      	lsls	r2, r3
 80014ec:	88fb      	ldrh	r3, [r7, #6]
 80014ee:	099b      	lsrs	r3, r3, #6
 80014f0:	b29b      	uxth	r3, r3
 80014f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80014f6:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80014fa:	4618      	mov	r0, r3
 80014fc:	ea41 0302 	orr.w	r3, r1, r2
 8001500:	6003      	str	r3, [r0, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:233
}
 8001502:	bf00      	nop
 8001504:	370c      	adds	r7, #12
 8001506:	46bd      	mov	sp, r7
 8001508:	bc80      	pop	{r7}
 800150a:	4770      	bx	lr

0800150c <rcu_periph_reset_disable>:
rcu_periph_reset_disable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:260
      \arg        RCU_BKPIRST: reset BKPI
    \param[out] none
    \retval     none
*/
void rcu_periph_reset_disable(rcu_periph_reset_enum periph_reset)
{
 800150c:	b480      	push	{r7}
 800150e:	b083      	sub	sp, #12
 8001510:	af00      	add	r7, sp, #0
 8001512:	4603      	mov	r3, r0
 8001514:	80fb      	strh	r3, [r7, #6]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:261
    RCU_REG_VAL(periph_reset) &= ~BIT(RCU_BIT_POS(periph_reset));
 8001516:	88fb      	ldrh	r3, [r7, #6]
 8001518:	099b      	lsrs	r3, r3, #6
 800151a:	b29b      	uxth	r3, r3
 800151c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001520:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8001524:	6819      	ldr	r1, [r3, #0]
 8001526:	88fb      	ldrh	r3, [r7, #6]
 8001528:	f003 031f 	and.w	r3, r3, #31
 800152c:	2201      	movs	r2, #1
 800152e:	fa02 f303 	lsl.w	r3, r2, r3
 8001532:	43da      	mvns	r2, r3
 8001534:	88fb      	ldrh	r3, [r7, #6]
 8001536:	099b      	lsrs	r3, r3, #6
 8001538:	b29b      	uxth	r3, r3
 800153a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800153e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8001542:	4618      	mov	r0, r3
 8001544:	ea01 0302 	and.w	r3, r1, r2
 8001548:	6003      	str	r3, [r0, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:262
}
 800154a:	bf00      	nop
 800154c:	370c      	adds	r7, #12
 800154e:	46bd      	mov	sp, r7
 8001550:	bc80      	pop	{r7}
 8001552:	4770      	bx	lr

08001554 <rcu_clock_freq_get>:
rcu_clock_freq_get():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1073
      \arg        CK_APB2: APB2 clock frequency
    \param[out] none
    \retval     clock frequency of system, AHB, APB1, APB2
*/
uint32_t rcu_clock_freq_get(rcu_clock_freq_enum clock)
{
 8001554:	b490      	push	{r4, r7}
 8001556:	b098      	sub	sp, #96	; 0x60
 8001558:	af00      	add	r7, sp, #0
 800155a:	4603      	mov	r3, r0
 800155c:	71fb      	strb	r3, [r7, #7]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1074
    uint32_t sws, ck_freq = 0U;
 800155e:	2300      	movs	r3, #0
 8001560:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1082
#ifdef GD32F30X_CL
    uint32_t predv0, predv1, pll1mf;
#endif /* GD32F30X_CL */

    /* exponent of AHB, APB1 and APB2 clock divider */
    uint8_t ahb_exp[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 8001562:	4b6e      	ldr	r3, [pc, #440]	; (800171c <rcu_clock_freq_get+0x1c8>)
 8001564:	f107 041c 	add.w	r4, r7, #28
 8001568:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800156a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1083
    uint8_t apb1_exp[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 800156e:	4a6c      	ldr	r2, [pc, #432]	; (8001720 <rcu_clock_freq_get+0x1cc>)
 8001570:	f107 0314 	add.w	r3, r7, #20
 8001574:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001578:	e883 0003 	stmia.w	r3, {r0, r1}
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1084
    uint8_t apb2_exp[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 800157c:	4a68      	ldr	r2, [pc, #416]	; (8001720 <rcu_clock_freq_get+0x1cc>)
 800157e:	f107 030c 	add.w	r3, r7, #12
 8001582:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001586:	e883 0003 	stmia.w	r3, {r0, r1}
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1086

    sws = GET_BITS(RCU_CFG0, 2, 3);
 800158a:	4b66      	ldr	r3, [pc, #408]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	089b      	lsrs	r3, r3, #2
 8001590:	f003 0303 	and.w	r3, r3, #3
 8001594:	64fb      	str	r3, [r7, #76]	; 0x4c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1087
    switch(sws){
 8001596:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8001598:	2b02      	cmp	r3, #2
 800159a:	d00f      	beq.n	80015bc <rcu_clock_freq_get+0x68>
 800159c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800159e:	2b02      	cmp	r3, #2
 80015a0:	d864      	bhi.n	800166c <rcu_clock_freq_get+0x118>
 80015a2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	d003      	beq.n	80015b0 <rcu_clock_freq_get+0x5c>
 80015a8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80015aa:	2b01      	cmp	r3, #1
 80015ac:	d003      	beq.n	80015b6 <rcu_clock_freq_get+0x62>
 80015ae:	e05d      	b.n	800166c <rcu_clock_freq_get+0x118>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1090
    /* IRC8M is selected as CK_SYS */
    case SEL_IRC8M:
        cksys_freq = IRC8M_VALUE;
 80015b0:	4b5d      	ldr	r3, [pc, #372]	; (8001728 <rcu_clock_freq_get+0x1d4>)
 80015b2:	65bb      	str	r3, [r7, #88]	; 0x58
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1091
        break;
 80015b4:	e05d      	b.n	8001672 <rcu_clock_freq_get+0x11e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1094
    /* HXTAL is selected as CK_SYS */
    case SEL_HXTAL:
        cksys_freq = HXTAL_VALUE;
 80015b6:	4b5c      	ldr	r3, [pc, #368]	; (8001728 <rcu_clock_freq_get+0x1d4>)
 80015b8:	65bb      	str	r3, [r7, #88]	; 0x58
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1095
        break;
 80015ba:	e05a      	b.n	8001672 <rcu_clock_freq_get+0x11e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1099
    /* PLL is selected as CK_SYS */
    case SEL_PLL:
        /* PLL clock source selection, HXTAL, IRC48M or IRC8M / 2 */
        pllsel = (RCU_CFG0 & RCU_CFG0_PLLSEL);
 80015bc:	4b59      	ldr	r3, [pc, #356]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80015c4:	64bb      	str	r3, [r7, #72]	; 0x48
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1101

        if(RCU_PLLSRC_HXTAL_IRC48M == pllsel) {
 80015c6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80015c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80015cc:	d119      	bne.n	8001602 <rcu_clock_freq_get+0xae>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1103
            /* PLL clock source is HXTAL or IRC48M */
            pllpresel = (RCU_CFG1 & RCU_CFG1_PLLPRESEL);
 80015ce:	4b57      	ldr	r3, [pc, #348]	; (800172c <rcu_clock_freq_get+0x1d8>)
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80015d6:	647b      	str	r3, [r7, #68]	; 0x44
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1105
            
            if(RCU_PLLPRESRC_HXTAL == pllpresel){
 80015d8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d102      	bne.n	80015e4 <rcu_clock_freq_get+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1107
                /* PLL clock source is HXTAL */
                ck_src = HXTAL_VALUE;
 80015de:	4b52      	ldr	r3, [pc, #328]	; (8001728 <rcu_clock_freq_get+0x1d4>)
 80015e0:	653b      	str	r3, [r7, #80]	; 0x50
 80015e2:	e001      	b.n	80015e8 <rcu_clock_freq_get+0x94>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1110
            }else{
                /* PLL clock source is IRC48 */
                ck_src = IRC48M_VALUE;
 80015e4:	4b52      	ldr	r3, [pc, #328]	; (8001730 <rcu_clock_freq_get+0x1dc>)
 80015e6:	653b      	str	r3, [r7, #80]	; 0x50
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1114
            }

#if (defined(GD32F30X_HD) || defined(GD32F30X_XD))
            predv0sel = (RCU_CFG0 & RCU_CFG0_PREDV0);
 80015e8:	4b4e      	ldr	r3, [pc, #312]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80015f0:	643b      	str	r3, [r7, #64]	; 0x40
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1116
            /* PREDV0 input source clock divided by 2 */
            if(RCU_CFG0_PREDV0 == predv0sel){
 80015f2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80015f4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80015f8:	d105      	bne.n	8001606 <rcu_clock_freq_get+0xb2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1117
                ck_src /= 2U;
 80015fa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80015fc:	085b      	lsrs	r3, r3, #1
 80015fe:	653b      	str	r3, [r7, #80]	; 0x50
 8001600:	e001      	b.n	8001606 <rcu_clock_freq_get+0xb2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1135
            predv0 = (RCU_CFG1 & RCU_CFG1_PREDV0) + 1U;
            ck_src /= predv0;
#endif /* GD32F30X_HD and GD32F30X_XD */
        }else{
            /* PLL clock source is IRC8M / 2 */
            ck_src = IRC8M_VALUE / 2U;
 8001602:	4b4c      	ldr	r3, [pc, #304]	; (8001734 <rcu_clock_freq_get+0x1e0>)
 8001604:	653b      	str	r3, [r7, #80]	; 0x50
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1139
        }

        /* PLL multiplication factor */
        pllmf = GET_BITS(RCU_CFG0, 18, 21);
 8001606:	4b47      	ldr	r3, [pc, #284]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	0c9b      	lsrs	r3, r3, #18
 800160c:	f003 030f 	and.w	r3, r3, #15
 8001610:	657b      	str	r3, [r7, #84]	; 0x54
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1140
        if((RCU_CFG0 & RCU_CFG0_PLLMF_4)){
 8001612:	4b44      	ldr	r3, [pc, #272]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800161a:	2b00      	cmp	r3, #0
 800161c:	d003      	beq.n	8001626 <rcu_clock_freq_get+0xd2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1141
            pllmf |= 0x10U;
 800161e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001620:	f043 0310 	orr.w	r3, r3, #16
 8001624:	657b      	str	r3, [r7, #84]	; 0x54
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1143
        }
        if((RCU_CFG0 & RCU_CFG0_PLLMF_5)){
 8001626:	4b3f      	ldr	r3, [pc, #252]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 8001628:	681b      	ldr	r3, [r3, #0]
 800162a:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800162e:	2b00      	cmp	r3, #0
 8001630:	d003      	beq.n	800163a <rcu_clock_freq_get+0xe6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1144
            pllmf |= 0x20U;
 8001632:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001634:	f043 0320 	orr.w	r3, r3, #32
 8001638:	657b      	str	r3, [r7, #84]	; 0x54
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1146
        }
        if(pllmf < 15U){
 800163a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800163c:	2b0e      	cmp	r3, #14
 800163e:	d803      	bhi.n	8001648 <rcu_clock_freq_get+0xf4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1147
            pllmf += 2U;
 8001640:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001642:	3302      	adds	r3, #2
 8001644:	657b      	str	r3, [r7, #84]	; 0x54
 8001646:	e00b      	b.n	8001660 <rcu_clock_freq_get+0x10c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1148
        }else if((pllmf >= 15U) && (pllmf <= 62U)){
 8001648:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800164a:	2b0e      	cmp	r3, #14
 800164c:	d906      	bls.n	800165c <rcu_clock_freq_get+0x108>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1148 (discriminator 1)
 800164e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001650:	2b3e      	cmp	r3, #62	; 0x3e
 8001652:	d803      	bhi.n	800165c <rcu_clock_freq_get+0x108>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1149
            pllmf += 1U;
 8001654:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001656:	3301      	adds	r3, #1
 8001658:	657b      	str	r3, [r7, #84]	; 0x54
 800165a:	e001      	b.n	8001660 <rcu_clock_freq_get+0x10c>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1151
        }else{
            pllmf = 63U;
 800165c:	233f      	movs	r3, #63	; 0x3f
 800165e:	657b      	str	r3, [r7, #84]	; 0x54
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1153
        }
        cksys_freq = ck_src*pllmf;
 8001660:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001662:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8001664:	fb02 f303 	mul.w	r3, r2, r3
 8001668:	65bb      	str	r3, [r7, #88]	; 0x58
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1160
        if(15U == pllmf){
            cksys_freq = ck_src*6U + ck_src / 2U;
        }
    #endif /* GD32F30X_CL */

        break;
 800166a:	e002      	b.n	8001672 <rcu_clock_freq_get+0x11e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1163
    /* IRC8M is selected as CK_SYS */
    default:
        cksys_freq = IRC8M_VALUE;
 800166c:	4b2e      	ldr	r3, [pc, #184]	; (8001728 <rcu_clock_freq_get+0x1d4>)
 800166e:	65bb      	str	r3, [r7, #88]	; 0x58
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1164
        break;
 8001670:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1168
    }

    /* calculate AHB clock frequency */
    idx = GET_BITS(RCU_CFG0, 4, 7);
 8001672:	4b2c      	ldr	r3, [pc, #176]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	091b      	lsrs	r3, r3, #4
 8001678:	f003 030f 	and.w	r3, r3, #15
 800167c:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1169
    clk_exp = ahb_exp[idx];
 800167e:	f107 021c 	add.w	r2, r7, #28
 8001682:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001684:	4413      	add	r3, r2
 8001686:	781b      	ldrb	r3, [r3, #0]
 8001688:	63bb      	str	r3, [r7, #56]	; 0x38
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1170
    ahb_freq = cksys_freq >> clk_exp;
 800168a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800168c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800168e:	fa22 f303 	lsr.w	r3, r2, r3
 8001692:	637b      	str	r3, [r7, #52]	; 0x34
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1173
    
    /* calculate APB1 clock frequency */
    idx = GET_BITS(RCU_CFG0, 8, 10);
 8001694:	4b23      	ldr	r3, [pc, #140]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	0a1b      	lsrs	r3, r3, #8
 800169a:	f003 0307 	and.w	r3, r3, #7
 800169e:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1174
    clk_exp = apb1_exp[idx];
 80016a0:	f107 0214 	add.w	r2, r7, #20
 80016a4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80016a6:	4413      	add	r3, r2
 80016a8:	781b      	ldrb	r3, [r3, #0]
 80016aa:	63bb      	str	r3, [r7, #56]	; 0x38
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1175
    apb1_freq = ahb_freq >> clk_exp;
 80016ac:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80016ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016b0:	fa22 f303 	lsr.w	r3, r2, r3
 80016b4:	633b      	str	r3, [r7, #48]	; 0x30
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1178
    
    /* calculate APB2 clock frequency */
    idx = GET_BITS(RCU_CFG0, 11, 13);
 80016b6:	4b1b      	ldr	r3, [pc, #108]	; (8001724 <rcu_clock_freq_get+0x1d0>)
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	0adb      	lsrs	r3, r3, #11
 80016bc:	f003 0307 	and.w	r3, r3, #7
 80016c0:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1179
    clk_exp = apb2_exp[idx];
 80016c2:	f107 020c 	add.w	r2, r7, #12
 80016c6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80016c8:	4413      	add	r3, r2
 80016ca:	781b      	ldrb	r3, [r3, #0]
 80016cc:	63bb      	str	r3, [r7, #56]	; 0x38
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1180
    apb2_freq = ahb_freq >> clk_exp;
 80016ce:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80016d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016d2:	fa22 f303 	lsr.w	r3, r2, r3
 80016d6:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1183
    
    /* return the clocks frequency */
    switch(clock){
 80016d8:	79fb      	ldrb	r3, [r7, #7]
 80016da:	2b03      	cmp	r3, #3
 80016dc:	d816      	bhi.n	800170c <rcu_clock_freq_get+0x1b8>
 80016de:	a201      	add	r2, pc, #4	; (adr r2, 80016e4 <rcu_clock_freq_get+0x190>)
 80016e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016e4:	080016f5 	.word	0x080016f5
 80016e8:	080016fb 	.word	0x080016fb
 80016ec:	08001701 	.word	0x08001701
 80016f0:	08001707 	.word	0x08001707
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1185
    case CK_SYS:
        ck_freq = cksys_freq;
 80016f4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80016f6:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1186
        break;
 80016f8:	e009      	b.n	800170e <rcu_clock_freq_get+0x1ba>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1188
    case CK_AHB:
        ck_freq = ahb_freq;
 80016fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80016fc:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1189
        break;
 80016fe:	e006      	b.n	800170e <rcu_clock_freq_get+0x1ba>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1191
    case CK_APB1:
        ck_freq = apb1_freq;
 8001700:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001702:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1192
        break;
 8001704:	e003      	b.n	800170e <rcu_clock_freq_get+0x1ba>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1194
    case CK_APB2:
        ck_freq = apb2_freq;
 8001706:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001708:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1195
        break;
 800170a:	e000      	b.n	800170e <rcu_clock_freq_get+0x1ba>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1197
    default:
        break;
 800170c:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1199
    }
    return ck_freq;
 800170e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_rcu.c:1200
}
 8001710:	4618      	mov	r0, r3
 8001712:	3760      	adds	r7, #96	; 0x60
 8001714:	46bd      	mov	sp, r7
 8001716:	bc90      	pop	{r4, r7}
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop
 800171c:	08002d8c 	.word	0x08002d8c
 8001720:	08002d9c 	.word	0x08002d9c
 8001724:	40021004 	.word	0x40021004
 8001728:	007a1200 	.word	0x007a1200
 800172c:	4002102c 	.word	0x4002102c
 8001730:	02dc6c00 	.word	0x02dc6c00
 8001734:	003d0900 	.word	0x003d0900

08001738 <usart_deinit>:
usart_deinit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:49
    \param[in]  usart_periph: USARTx(x=0,1,2)/UARTx(x=3,4)
    \param[out] none
    \retval     none
*/
void usart_deinit(uint32_t usart_periph)
{
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:50
    switch(usart_periph){
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	4a29      	ldr	r2, [pc, #164]	; (80017e8 <usart_deinit+0xb0>)
 8001744:	4293      	cmp	r3, r2
 8001746:	d01c      	beq.n	8001782 <usart_deinit+0x4a>
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	4a27      	ldr	r2, [pc, #156]	; (80017e8 <usart_deinit+0xb0>)
 800174c:	4293      	cmp	r3, r2
 800174e:	d845      	bhi.n	80017dc <usart_deinit+0xa4>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	4a26      	ldr	r2, [pc, #152]	; (80017ec <usart_deinit+0xb4>)
 8001754:	4293      	cmp	r3, r2
 8001756:	d038      	beq.n	80017ca <usart_deinit+0x92>
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	4a24      	ldr	r2, [pc, #144]	; (80017ec <usart_deinit+0xb4>)
 800175c:	4293      	cmp	r3, r2
 800175e:	d83d      	bhi.n	80017dc <usart_deinit+0xa4>
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	4a23      	ldr	r2, [pc, #140]	; (80017f0 <usart_deinit+0xb8>)
 8001764:	4293      	cmp	r3, r2
 8001766:	d027      	beq.n	80017b8 <usart_deinit+0x80>
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	4a21      	ldr	r2, [pc, #132]	; (80017f0 <usart_deinit+0xb8>)
 800176c:	4293      	cmp	r3, r2
 800176e:	d835      	bhi.n	80017dc <usart_deinit+0xa4>
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	4a20      	ldr	r2, [pc, #128]	; (80017f4 <usart_deinit+0xbc>)
 8001774:	4293      	cmp	r3, r2
 8001776:	d00d      	beq.n	8001794 <usart_deinit+0x5c>
 8001778:	687b      	ldr	r3, [r7, #4]
 800177a:	4a1f      	ldr	r2, [pc, #124]	; (80017f8 <usart_deinit+0xc0>)
 800177c:	4293      	cmp	r3, r2
 800177e:	d012      	beq.n	80017a6 <usart_deinit+0x6e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:77
        /* reset UART4 */
        rcu_periph_reset_enable(RCU_UART4RST);
        rcu_periph_reset_disable(RCU_UART4RST);
        break;
    default:
        break;
 8001780:	e02c      	b.n	80017dc <usart_deinit+0xa4>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:53
        rcu_periph_reset_enable(RCU_USART0RST);
 8001782:	f240 300e 	movw	r0, #782	; 0x30e
 8001786:	f7ff fe9f 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:54
        rcu_periph_reset_disable(RCU_USART0RST);
 800178a:	f240 300e 	movw	r0, #782	; 0x30e
 800178e:	f7ff febd 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:55
        break;
 8001792:	e024      	b.n	80017de <usart_deinit+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:58
        rcu_periph_reset_enable(RCU_USART1RST);
 8001794:	f240 4011 	movw	r0, #1041	; 0x411
 8001798:	f7ff fe96 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:59
        rcu_periph_reset_disable(RCU_USART1RST);
 800179c:	f240 4011 	movw	r0, #1041	; 0x411
 80017a0:	f7ff feb4 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:60
        break;
 80017a4:	e01b      	b.n	80017de <usart_deinit+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:63
        rcu_periph_reset_enable(RCU_USART2RST);
 80017a6:	f240 4012 	movw	r0, #1042	; 0x412
 80017aa:	f7ff fe8d 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:64
        rcu_periph_reset_disable(RCU_USART2RST);
 80017ae:	f240 4012 	movw	r0, #1042	; 0x412
 80017b2:	f7ff feab 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:65
        break;
 80017b6:	e012      	b.n	80017de <usart_deinit+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:68
        rcu_periph_reset_enable(RCU_UART3RST);
 80017b8:	f240 4013 	movw	r0, #1043	; 0x413
 80017bc:	f7ff fe84 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:69
        rcu_periph_reset_disable(RCU_UART3RST);
 80017c0:	f240 4013 	movw	r0, #1043	; 0x413
 80017c4:	f7ff fea2 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:70
        break;
 80017c8:	e009      	b.n	80017de <usart_deinit+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:73
        rcu_periph_reset_enable(RCU_UART4RST);
 80017ca:	f240 4014 	movw	r0, #1044	; 0x414
 80017ce:	f7ff fe7b 	bl	80014c8 <rcu_periph_reset_enable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:74
        rcu_periph_reset_disable(RCU_UART4RST);
 80017d2:	f240 4014 	movw	r0, #1044	; 0x414
 80017d6:	f7ff fe99 	bl	800150c <rcu_periph_reset_disable>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:75
        break;
 80017da:	e000      	b.n	80017de <usart_deinit+0xa6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:77
        break;
 80017dc:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:79
    }
}
 80017de:	bf00      	nop
 80017e0:	3708      	adds	r7, #8
 80017e2:	46bd      	mov	sp, r7
 80017e4:	bd80      	pop	{r7, pc}
 80017e6:	bf00      	nop
 80017e8:	40013800 	.word	0x40013800
 80017ec:	40005000 	.word	0x40005000
 80017f0:	40004c00 	.word	0x40004c00
 80017f4:	40004400 	.word	0x40004400
 80017f8:	40004800 	.word	0x40004800

080017fc <usart_baudrate_set>:
usart_baudrate_set():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:89
    \param[in]  baudval: baud rate value
    \param[out] none
    \retval     none
*/ 
void usart_baudrate_set(uint32_t usart_periph, uint32_t baudval)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b086      	sub	sp, #24
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
 8001804:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:90
    uint32_t uclk=0U, intdiv=0U, fradiv=0U, udiv=0U;
 8001806:	2300      	movs	r3, #0
 8001808:	617b      	str	r3, [r7, #20]
 800180a:	2300      	movs	r3, #0
 800180c:	613b      	str	r3, [r7, #16]
 800180e:	2300      	movs	r3, #0
 8001810:	60fb      	str	r3, [r7, #12]
 8001812:	2300      	movs	r3, #0
 8001814:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:91
    switch(usart_periph){
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	4a2b      	ldr	r2, [pc, #172]	; (80018c8 <usart_baudrate_set+0xcc>)
 800181a:	4293      	cmp	r3, r2
 800181c:	d01c      	beq.n	8001858 <usart_baudrate_set+0x5c>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	4a29      	ldr	r2, [pc, #164]	; (80018c8 <usart_baudrate_set+0xcc>)
 8001822:	4293      	cmp	r3, r2
 8001824:	d831      	bhi.n	800188a <usart_baudrate_set+0x8e>
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	4a28      	ldr	r2, [pc, #160]	; (80018cc <usart_baudrate_set+0xd0>)
 800182a:	4293      	cmp	r3, r2
 800182c:	d028      	beq.n	8001880 <usart_baudrate_set+0x84>
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	4a26      	ldr	r2, [pc, #152]	; (80018cc <usart_baudrate_set+0xd0>)
 8001832:	4293      	cmp	r3, r2
 8001834:	d829      	bhi.n	800188a <usart_baudrate_set+0x8e>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	4a25      	ldr	r2, [pc, #148]	; (80018d0 <usart_baudrate_set+0xd4>)
 800183a:	4293      	cmp	r3, r2
 800183c:	d01b      	beq.n	8001876 <usart_baudrate_set+0x7a>
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	4a23      	ldr	r2, [pc, #140]	; (80018d0 <usart_baudrate_set+0xd4>)
 8001842:	4293      	cmp	r3, r2
 8001844:	d821      	bhi.n	800188a <usart_baudrate_set+0x8e>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	4a22      	ldr	r2, [pc, #136]	; (80018d4 <usart_baudrate_set+0xd8>)
 800184a:	4293      	cmp	r3, r2
 800184c:	d009      	beq.n	8001862 <usart_baudrate_set+0x66>
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	4a21      	ldr	r2, [pc, #132]	; (80018d8 <usart_baudrate_set+0xdc>)
 8001852:	4293      	cmp	r3, r2
 8001854:	d00a      	beq.n	800186c <usart_baudrate_set+0x70>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:114
    case UART4:
         /* get UART4 clock */
         uclk = rcu_clock_freq_get(CK_APB1);
         break;
    default:
         break;
 8001856:	e018      	b.n	800188a <usart_baudrate_set+0x8e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:95
         uclk = rcu_clock_freq_get(CK_APB2);
 8001858:	2003      	movs	r0, #3
 800185a:	f7ff fe7b 	bl	8001554 <rcu_clock_freq_get>
 800185e:	6178      	str	r0, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:96
         break;
 8001860:	e014      	b.n	800188c <usart_baudrate_set+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:99
         uclk = rcu_clock_freq_get(CK_APB1);
 8001862:	2002      	movs	r0, #2
 8001864:	f7ff fe76 	bl	8001554 <rcu_clock_freq_get>
 8001868:	6178      	str	r0, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:100
         break;
 800186a:	e00f      	b.n	800188c <usart_baudrate_set+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:103
         uclk = rcu_clock_freq_get(CK_APB1);
 800186c:	2002      	movs	r0, #2
 800186e:	f7ff fe71 	bl	8001554 <rcu_clock_freq_get>
 8001872:	6178      	str	r0, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:104
         break;
 8001874:	e00a      	b.n	800188c <usart_baudrate_set+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:107
         uclk = rcu_clock_freq_get(CK_APB1);
 8001876:	2002      	movs	r0, #2
 8001878:	f7ff fe6c 	bl	8001554 <rcu_clock_freq_get>
 800187c:	6178      	str	r0, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:108
         break;
 800187e:	e005      	b.n	800188c <usart_baudrate_set+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:111
         uclk = rcu_clock_freq_get(CK_APB1);
 8001880:	2002      	movs	r0, #2
 8001882:	f7ff fe67 	bl	8001554 <rcu_clock_freq_get>
 8001886:	6178      	str	r0, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:112
         break;
 8001888:	e000      	b.n	800188c <usart_baudrate_set+0x90>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:114
         break;
 800188a:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:117
    }
    /* oversampling by 16, configure the value of USART_BAUD */
    udiv = (uclk + baudval / 2U) / baudval;
 800188c:	683b      	ldr	r3, [r7, #0]
 800188e:	085a      	lsrs	r2, r3, #1
 8001890:	697b      	ldr	r3, [r7, #20]
 8001892:	441a      	add	r2, r3
 8001894:	683b      	ldr	r3, [r7, #0]
 8001896:	fbb2 f3f3 	udiv	r3, r2, r3
 800189a:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:118
    intdiv = udiv & 0xfff0U;
 800189c:	68ba      	ldr	r2, [r7, #8]
 800189e:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80018a2:	4013      	ands	r3, r2
 80018a4:	613b      	str	r3, [r7, #16]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:119
    fradiv = udiv & 0xfU;
 80018a6:	68bb      	ldr	r3, [r7, #8]
 80018a8:	f003 030f 	and.w	r3, r3, #15
 80018ac:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:120
    USART_BAUD(usart_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 80018ae:	693a      	ldr	r2, [r7, #16]
 80018b0:	68fb      	ldr	r3, [r7, #12]
 80018b2:	ea42 0103 	orr.w	r1, r2, r3
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	3308      	adds	r3, #8
 80018ba:	461a      	mov	r2, r3
 80018bc:	b28b      	uxth	r3, r1
 80018be:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:121
}
 80018c0:	bf00      	nop
 80018c2:	3718      	adds	r7, #24
 80018c4:	46bd      	mov	sp, r7
 80018c6:	bd80      	pop	{r7, pc}
 80018c8:	40013800 	.word	0x40013800
 80018cc:	40005000 	.word	0x40005000
 80018d0:	40004c00 	.word	0x40004c00
 80018d4:	40004400 	.word	0x40004400
 80018d8:	40004800 	.word	0x40004800

080018dc <usart_enable>:
usart_enable():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:187
    \param[in]  usart_periph: USARTx(x=0,1,2)/UARTx(x=3,4)
    \param[out] none
    \retval     none
*/
void usart_enable(uint32_t usart_periph)
{
 80018dc:	b480      	push	{r7}
 80018de:	b083      	sub	sp, #12
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:188
    USART_CTL0(usart_periph) |= USART_CTL0_UEN;
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	330c      	adds	r3, #12
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	687a      	ldr	r2, [r7, #4]
 80018ec:	320c      	adds	r2, #12
 80018ee:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80018f2:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:189
}
 80018f4:	bf00      	nop
 80018f6:	370c      	adds	r7, #12
 80018f8:	46bd      	mov	sp, r7
 80018fa:	bc80      	pop	{r7}
 80018fc:	4770      	bx	lr

080018fe <usart_transmit_config>:
usart_transmit_config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:213
      \arg        USART_TRANSMIT_DISABLE: enable USART transmission
    \param[out] none
    \retval     none
*/
void usart_transmit_config(uint32_t usart_periph, uint32_t txconfig)
{
 80018fe:	b480      	push	{r7}
 8001900:	b083      	sub	sp, #12
 8001902:	af00      	add	r7, sp, #0
 8001904:	6078      	str	r0, [r7, #4]
 8001906:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:214
    USART_CTL0(usart_periph) &= ~(USART_CTL0_TEN);
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	330c      	adds	r3, #12
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	687a      	ldr	r2, [r7, #4]
 8001910:	320c      	adds	r2, #12
 8001912:	f023 0308 	bic.w	r3, r3, #8
 8001916:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:215
    USART_CTL0(usart_periph) |= (USART_CTL0_TEN & txconfig);
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	330c      	adds	r3, #12
 800191c:	681a      	ldr	r2, [r3, #0]
 800191e:	683b      	ldr	r3, [r7, #0]
 8001920:	f003 0308 	and.w	r3, r3, #8
 8001924:	6879      	ldr	r1, [r7, #4]
 8001926:	310c      	adds	r1, #12
 8001928:	4313      	orrs	r3, r2
 800192a:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:216
}
 800192c:	bf00      	nop
 800192e:	370c      	adds	r7, #12
 8001930:	46bd      	mov	sp, r7
 8001932:	bc80      	pop	{r7}
 8001934:	4770      	bx	lr

08001936 <usart_receive_config>:
usart_receive_config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:229
      \arg        USART_RECEIVE_DISABLE: disable USART reception
    \param[out] none
    \retval     none
*/
void usart_receive_config(uint32_t usart_periph, uint32_t rxconfig)
{
 8001936:	b480      	push	{r7}
 8001938:	b083      	sub	sp, #12
 800193a:	af00      	add	r7, sp, #0
 800193c:	6078      	str	r0, [r7, #4]
 800193e:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:230
    USART_CTL0(usart_periph) &= ~(USART_CTL0_REN);
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	330c      	adds	r3, #12
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	687a      	ldr	r2, [r7, #4]
 8001948:	320c      	adds	r2, #12
 800194a:	f023 0304 	bic.w	r3, r3, #4
 800194e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:231
    USART_CTL0(usart_periph) |= (USART_CTL0_REN & rxconfig);
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	330c      	adds	r3, #12
 8001954:	681a      	ldr	r2, [r3, #0]
 8001956:	683b      	ldr	r3, [r7, #0]
 8001958:	f003 0304 	and.w	r3, r3, #4
 800195c:	6879      	ldr	r1, [r7, #4]
 800195e:	310c      	adds	r1, #12
 8001960:	4313      	orrs	r3, r2
 8001962:	600b      	str	r3, [r1, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:232
}
 8001964:	bf00      	nop
 8001966:	370c      	adds	r7, #12
 8001968:	46bd      	mov	sp, r7
 800196a:	bc80      	pop	{r7}
 800196c:	4770      	bx	lr

0800196e <usart_data_transmit>:
usart_data_transmit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:340
    \param[in]  data: data of transmission 
    \param[out] none
    \retval     none
*/
void usart_data_transmit(uint32_t usart_periph, uint16_t data)
{
 800196e:	b480      	push	{r7}
 8001970:	b083      	sub	sp, #12
 8001972:	af00      	add	r7, sp, #0
 8001974:	6078      	str	r0, [r7, #4]
 8001976:	460b      	mov	r3, r1
 8001978:	807b      	strh	r3, [r7, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:341
    USART_DATA(usart_periph) = USART_DATA_DATA & (uint32_t)data;
 800197a:	887b      	ldrh	r3, [r7, #2]
 800197c:	687a      	ldr	r2, [r7, #4]
 800197e:	3204      	adds	r2, #4
 8001980:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001984:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:342
}
 8001986:	bf00      	nop
 8001988:	370c      	adds	r7, #12
 800198a:	46bd      	mov	sp, r7
 800198c:	bc80      	pop	{r7}
 800198e:	4770      	bx	lr

08001990 <usart_flag_get>:
usart_flag_get():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:743
      \arg        USART_FLAG_RT: receiver timeout flag 
    \param[out] none
    \retval     FlagStatus: SET or RESET
*/
FlagStatus usart_flag_get(uint32_t usart_periph, usart_flag_enum flag)
{
 8001990:	b480      	push	{r7}
 8001992:	b083      	sub	sp, #12
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
 8001998:	460b      	mov	r3, r1
 800199a:	807b      	strh	r3, [r7, #2]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:744
    if(RESET != (USART_REG_VAL(usart_periph, flag) & BIT(USART_BIT_POS(flag)))){
 800199c:	887b      	ldrh	r3, [r7, #2]
 800199e:	099b      	lsrs	r3, r3, #6
 80019a0:	b29b      	uxth	r3, r3
 80019a2:	461a      	mov	r2, r3
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	4413      	add	r3, r2
 80019a8:	681a      	ldr	r2, [r3, #0]
 80019aa:	887b      	ldrh	r3, [r7, #2]
 80019ac:	f003 031f 	and.w	r3, r3, #31
 80019b0:	fa22 f303 	lsr.w	r3, r2, r3
 80019b4:	f003 0301 	and.w	r3, r3, #1
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d001      	beq.n	80019c0 <usart_flag_get+0x30>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:745
        return SET;
 80019bc:	2301      	movs	r3, #1
 80019be:	e000      	b.n	80019c2 <usart_flag_get+0x32>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:747
    }else{
        return RESET;
 80019c0:	2300      	movs	r3, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_usart.c:749
    }
}
 80019c2:	4618      	mov	r0, r3
 80019c4:	370c      	adds	r7, #12
 80019c6:	46bd      	mov	sp, r7
 80019c8:	bc80      	pop	{r7}
 80019ca:	4770      	bx	lr

080019cc <_sbrk>:
_sbrk():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:26

extern int __io_putchar(int ch) __attribute__((weak));
extern int __io_getchar(void) __attribute__((weak));

caddr_t _sbrk(int incr)
{
 80019cc:	b480      	push	{r7}
 80019ce:	b083      	sub	sp, #12
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:31
  extern char _end[];
  extern char _heap_end[];
  static char *curbrk = _end;

  if ((curbrk + incr < _end) || (curbrk + incr > _heap_end))
 80019d4:	4b10      	ldr	r3, [pc, #64]	; (8001a18 <_sbrk+0x4c>)
 80019d6:	681a      	ldr	r2, [r3, #0]
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	4413      	add	r3, r2
 80019dc:	4a0f      	ldr	r2, [pc, #60]	; (8001a1c <_sbrk+0x50>)
 80019de:	4293      	cmp	r3, r2
 80019e0:	d306      	bcc.n	80019f0 <_sbrk+0x24>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:31 (discriminator 1)
 80019e2:	4b0d      	ldr	r3, [pc, #52]	; (8001a18 <_sbrk+0x4c>)
 80019e4:	681a      	ldr	r2, [r3, #0]
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	4413      	add	r3, r2
 80019ea:	4a0d      	ldr	r2, [pc, #52]	; (8001a20 <_sbrk+0x54>)
 80019ec:	4293      	cmp	r3, r2
 80019ee:	d902      	bls.n	80019f6 <_sbrk+0x2a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:32
    return NULL - 1;
 80019f0:	f04f 33ff 	mov.w	r3, #4294967295
 80019f4:	e00a      	b.n	8001a0c <_sbrk+0x40>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:34

  curbrk += incr;
 80019f6:	4b08      	ldr	r3, [pc, #32]	; (8001a18 <_sbrk+0x4c>)
 80019f8:	681a      	ldr	r2, [r3, #0]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	4413      	add	r3, r2
 80019fe:	4a06      	ldr	r2, [pc, #24]	; (8001a18 <_sbrk+0x4c>)
 8001a00:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:35
  return curbrk - incr;
 8001a02:	4b05      	ldr	r3, [pc, #20]	; (8001a18 <_sbrk+0x4c>)
 8001a04:	681a      	ldr	r2, [r3, #0]
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	425b      	negs	r3, r3
 8001a0a:	4413      	add	r3, r2
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:36
}
 8001a0c:	4618      	mov	r0, r3
 8001a0e:	370c      	adds	r7, #12
 8001a10:	46bd      	mov	sp, r7
 8001a12:	bc80      	pop	{r7}
 8001a14:	4770      	bx	lr
 8001a16:	bf00      	nop
 8001a18:	20000080 	.word	0x20000080
 8001a1c:	2000013c 	.word	0x2000013c
 8001a20:	20000540 	.word	0x20000540

08001a24 <_write>:
_write():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:74
	_kill(status, -1);
	while (1) {}
}

int _write(int file, char *ptr, int len)
{
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b086      	sub	sp, #24
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	60f8      	str	r0, [r7, #12]
 8001a2c:	60b9      	str	r1, [r7, #8]
 8001a2e:	607a      	str	r2, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:77
	int DataIdx;

		for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a30:	2300      	movs	r3, #0
 8001a32:	617b      	str	r3, [r7, #20]
 8001a34:	e00a      	b.n	8001a4c <_write+0x28>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:79 (discriminator 3)
		{
		   __io_putchar( *ptr++ );
 8001a36:	68bb      	ldr	r3, [r7, #8]
 8001a38:	1c5a      	adds	r2, r3, #1
 8001a3a:	60ba      	str	r2, [r7, #8]
 8001a3c:	f993 3000 	ldrsb.w	r3, [r3]
 8001a40:	4618      	mov	r0, r3
 8001a42:	f7fe fe75 	bl	8000730 <__io_putchar>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:77 (discriminator 3)
		for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a46:	697b      	ldr	r3, [r7, #20]
 8001a48:	3301      	adds	r3, #1
 8001a4a:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:77 (discriminator 1)
 8001a4c:	697a      	ldr	r2, [r7, #20]
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	429a      	cmp	r2, r3
 8001a52:	dbf0      	blt.n	8001a36 <_write+0x12>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:81
		}
	return len;
 8001a54:	687b      	ldr	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:82
}
 8001a56:	4618      	mov	r0, r3
 8001a58:	3718      	adds	r7, #24
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}

08001a5e <_close>:
_close():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:85

int _close(int file)
{
 8001a5e:	b480      	push	{r7}
 8001a60:	b083      	sub	sp, #12
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:86
	return -1;
 8001a66:	f04f 33ff 	mov.w	r3, #4294967295
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:87
}
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	370c      	adds	r7, #12
 8001a6e:	46bd      	mov	sp, r7
 8001a70:	bc80      	pop	{r7}
 8001a72:	4770      	bx	lr

08001a74 <_fstat>:
_fstat():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:90

int _fstat(int file, struct stat *st)
{
 8001a74:	b480      	push	{r7}
 8001a76:	b083      	sub	sp, #12
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
 8001a7c:	6039      	str	r1, [r7, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:91
	st->st_mode = S_IFCHR;
 8001a7e:	683b      	ldr	r3, [r7, #0]
 8001a80:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001a84:	605a      	str	r2, [r3, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:92
	return 0;
 8001a86:	2300      	movs	r3, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:93
}
 8001a88:	4618      	mov	r0, r3
 8001a8a:	370c      	adds	r7, #12
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	bc80      	pop	{r7}
 8001a90:	4770      	bx	lr

08001a92 <_isatty>:
_isatty():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:96

int _isatty(int file)
{
 8001a92:	b480      	push	{r7}
 8001a94:	b083      	sub	sp, #12
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:97
	return 1;
 8001a9a:	2301      	movs	r3, #1
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:98
}
 8001a9c:	4618      	mov	r0, r3
 8001a9e:	370c      	adds	r7, #12
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bc80      	pop	{r7}
 8001aa4:	4770      	bx	lr

08001aa6 <_lseek>:
_lseek():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:101

int _lseek(int file, int ptr, int dir)
{
 8001aa6:	b480      	push	{r7}
 8001aa8:	b085      	sub	sp, #20
 8001aaa:	af00      	add	r7, sp, #0
 8001aac:	60f8      	str	r0, [r7, #12]
 8001aae:	60b9      	str	r1, [r7, #8]
 8001ab0:	607a      	str	r2, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:102
	return 0;
 8001ab2:	2300      	movs	r3, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:103
}
 8001ab4:	4618      	mov	r0, r3
 8001ab6:	3714      	adds	r7, #20
 8001ab8:	46bd      	mov	sp, r7
 8001aba:	bc80      	pop	{r7}
 8001abc:	4770      	bx	lr

08001abe <_read>:
_read():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:106

int _read(int file, char *ptr, int len)
{
 8001abe:	b580      	push	{r7, lr}
 8001ac0:	b086      	sub	sp, #24
 8001ac2:	af00      	add	r7, sp, #0
 8001ac4:	60f8      	str	r0, [r7, #12]
 8001ac6:	60b9      	str	r1, [r7, #8]
 8001ac8:	607a      	str	r2, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:109
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001aca:	2300      	movs	r3, #0
 8001acc:	617b      	str	r3, [r7, #20]
 8001ace:	e00a      	b.n	8001ae6 <_read+0x28>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:111 (discriminator 3)
	{
	  *ptr++ = __io_getchar();
 8001ad0:	f3af 8000 	nop.w
 8001ad4:	4601      	mov	r1, r0
 8001ad6:	68bb      	ldr	r3, [r7, #8]
 8001ad8:	1c5a      	adds	r2, r3, #1
 8001ada:	60ba      	str	r2, [r7, #8]
 8001adc:	b24a      	sxtb	r2, r1
 8001ade:	701a      	strb	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:109 (discriminator 3)
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ae0:	697b      	ldr	r3, [r7, #20]
 8001ae2:	3301      	adds	r3, #1
 8001ae4:	617b      	str	r3, [r7, #20]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:109 (discriminator 1)
 8001ae6:	697a      	ldr	r2, [r7, #20]
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	429a      	cmp	r2, r3
 8001aec:	dbf0      	blt.n	8001ad0 <_read+0x12>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:114
	}

   return len;
 8001aee:	687b      	ldr	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/syscalls.c:115
}
 8001af0:	4618      	mov	r0, r3
 8001af2:	3718      	adds	r7, #24
 8001af4:	46bd      	mov	sp, r7
 8001af6:	bd80      	pop	{r7, pc}

08001af8 <_soft_delay_>:
_soft_delay_():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:146
static void system_clock_config(void);

/* software delay to prevent the impact of Vcore fluctuations.
   It is strongly recommended to include it to avoid issues caused by self-removal. */
static void _soft_delay_(uint32_t time)
{
 8001af8:	b480      	push	{r7}
 8001afa:	b085      	sub	sp, #20
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	6078      	str	r0, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:148
    __IO uint32_t i;
    for(i=0; i<time*10; i++){
 8001b00:	2300      	movs	r3, #0
 8001b02:	60fb      	str	r3, [r7, #12]
 8001b04:	e002      	b.n	8001b0c <_soft_delay_+0x14>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:148 (discriminator 3)
 8001b06:	68fb      	ldr	r3, [r7, #12]
 8001b08:	3301      	adds	r3, #1
 8001b0a:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:148 (discriminator 1)
 8001b0c:	687a      	ldr	r2, [r7, #4]
 8001b0e:	4613      	mov	r3, r2
 8001b10:	009b      	lsls	r3, r3, #2
 8001b12:	4413      	add	r3, r2
 8001b14:	005b      	lsls	r3, r3, #1
 8001b16:	461a      	mov	r2, r3
 8001b18:	68fb      	ldr	r3, [r7, #12]
 8001b1a:	429a      	cmp	r2, r3
 8001b1c:	d8f3      	bhi.n	8001b06 <_soft_delay_+0xe>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:150
    }
}
 8001b1e:	bf00      	nop
 8001b20:	bf00      	nop
 8001b22:	3714      	adds	r7, #20
 8001b24:	46bd      	mov	sp, r7
 8001b26:	bc80      	pop	{r7}
 8001b28:	4770      	bx	lr
	...

08001b2c <SystemInit>:
SystemInit():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:159
    \param[in]  none
    \param[out] none
    \retval     none
*/
void SystemInit (void)
{
 8001b2c:	b580      	push	{r7, lr}
 8001b2e:	b082      	sub	sp, #8
 8001b30:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:166
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
#endif
    /* reset the RCU clock configuration to the default reset state */
    /* Set IRC8MEN bit */
    RCU_CTL |= RCU_CTL_IRC8MEN;
 8001b32:	4b4f      	ldr	r3, [pc, #316]	; (8001c70 <SystemInit+0x144>)
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	4a4e      	ldr	r2, [pc, #312]	; (8001c70 <SystemInit+0x144>)
 8001b38:	f043 0301 	orr.w	r3, r3, #1
 8001b3c:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:167
    while(0U == (RCU_CTL & RCU_CTL_IRC8MSTB)){
 8001b3e:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:167 (discriminator 1)
 8001b40:	4b4b      	ldr	r3, [pc, #300]	; (8001c70 <SystemInit+0x144>)
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	f003 0302 	and.w	r3, r3, #2
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d0f9      	beq.n	8001b40 <SystemInit+0x14>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:169
    }
    if(((RCU_CFG0 & RCU_CFG0_SCSS) == RCU_SCSS_PLL)){
 8001b4c:	4b49      	ldr	r3, [pc, #292]	; (8001c74 <SystemInit+0x148>)
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	f003 030c 	and.w	r3, r3, #12
 8001b54:	2b08      	cmp	r3, #8
 8001b56:	d164      	bne.n	8001c22 <SystemInit+0xf6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 1)
        RCU_MODIFY_4(0x50);
 8001b58:	2300      	movs	r3, #0
 8001b5a:	607b      	str	r3, [r7, #4]
 8001b5c:	e002      	b.n	8001b64 <SystemInit+0x38>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 4)
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	3301      	adds	r3, #1
 8001b62:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 2)
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	2b4f      	cmp	r3, #79	; 0x4f
 8001b68:	d9f9      	bls.n	8001b5e <SystemInit+0x32>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 5)
 8001b6a:	4b42      	ldr	r3, [pc, #264]	; (8001c74 <SystemInit+0x148>)
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	603b      	str	r3, [r7, #0]
 8001b70:	683b      	ldr	r3, [r7, #0]
 8001b72:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001b76:	603b      	str	r3, [r7, #0]
 8001b78:	683b      	ldr	r3, [r7, #0]
 8001b7a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b7e:	603b      	str	r3, [r7, #0]
 8001b80:	4a3c      	ldr	r2, [pc, #240]	; (8001c74 <SystemInit+0x148>)
 8001b82:	683b      	ldr	r3, [r7, #0]
 8001b84:	6013      	str	r3, [r2, #0]
 8001b86:	2300      	movs	r3, #0
 8001b88:	607b      	str	r3, [r7, #4]
 8001b8a:	e002      	b.n	8001b92 <SystemInit+0x66>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 8)
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	3301      	adds	r3, #1
 8001b90:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 6)
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	2b4f      	cmp	r3, #79	; 0x4f
 8001b96:	d9f9      	bls.n	8001b8c <SystemInit+0x60>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 9)
 8001b98:	4b36      	ldr	r3, [pc, #216]	; (8001c74 <SystemInit+0x148>)
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	603b      	str	r3, [r7, #0]
 8001b9e:	683b      	ldr	r3, [r7, #0]
 8001ba0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001ba4:	603b      	str	r3, [r7, #0]
 8001ba6:	683b      	ldr	r3, [r7, #0]
 8001ba8:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 8001bac:	603b      	str	r3, [r7, #0]
 8001bae:	4a31      	ldr	r2, [pc, #196]	; (8001c74 <SystemInit+0x148>)
 8001bb0:	683b      	ldr	r3, [r7, #0]
 8001bb2:	6013      	str	r3, [r2, #0]
 8001bb4:	2300      	movs	r3, #0
 8001bb6:	607b      	str	r3, [r7, #4]
 8001bb8:	e002      	b.n	8001bc0 <SystemInit+0x94>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 12)
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	3301      	adds	r3, #1
 8001bbe:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 10)
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	2b4f      	cmp	r3, #79	; 0x4f
 8001bc4:	d9f9      	bls.n	8001bba <SystemInit+0x8e>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 13)
 8001bc6:	4b2b      	ldr	r3, [pc, #172]	; (8001c74 <SystemInit+0x148>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	603b      	str	r3, [r7, #0]
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001bd2:	603b      	str	r3, [r7, #0]
 8001bd4:	683b      	ldr	r3, [r7, #0]
 8001bd6:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8001bda:	603b      	str	r3, [r7, #0]
 8001bdc:	4a25      	ldr	r2, [pc, #148]	; (8001c74 <SystemInit+0x148>)
 8001bde:	683b      	ldr	r3, [r7, #0]
 8001be0:	6013      	str	r3, [r2, #0]
 8001be2:	2300      	movs	r3, #0
 8001be4:	607b      	str	r3, [r7, #4]
 8001be6:	e002      	b.n	8001bee <SystemInit+0xc2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 16)
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	3301      	adds	r3, #1
 8001bec:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 14)
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	2b4f      	cmp	r3, #79	; 0x4f
 8001bf2:	d9f9      	bls.n	8001be8 <SystemInit+0xbc>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 17)
 8001bf4:	4b1f      	ldr	r3, [pc, #124]	; (8001c74 <SystemInit+0x148>)
 8001bf6:	681b      	ldr	r3, [r3, #0]
 8001bf8:	603b      	str	r3, [r7, #0]
 8001bfa:	683b      	ldr	r3, [r7, #0]
 8001bfc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001c00:	603b      	str	r3, [r7, #0]
 8001c02:	683b      	ldr	r3, [r7, #0]
 8001c04:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8001c08:	603b      	str	r3, [r7, #0]
 8001c0a:	4a1a      	ldr	r2, [pc, #104]	; (8001c74 <SystemInit+0x148>)
 8001c0c:	683b      	ldr	r3, [r7, #0]
 8001c0e:	6013      	str	r3, [r2, #0]
 8001c10:	2300      	movs	r3, #0
 8001c12:	607b      	str	r3, [r7, #4]
 8001c14:	e002      	b.n	8001c1c <SystemInit+0xf0>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 20)
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	3301      	adds	r3, #1
 8001c1a:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:170 (discriminator 18)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	2b4f      	cmp	r3, #79	; 0x4f
 8001c20:	d9f9      	bls.n	8001c16 <SystemInit+0xea>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:172
    }
    _soft_delay_(200);
 8001c22:	20c8      	movs	r0, #200	; 0xc8
 8001c24:	f7ff ff68 	bl	8001af8 <_soft_delay_>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:174
    
    RCU_CFG0 &= ~RCU_CFG0_SCS;
 8001c28:	4b12      	ldr	r3, [pc, #72]	; (8001c74 <SystemInit+0x148>)
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	4a11      	ldr	r2, [pc, #68]	; (8001c74 <SystemInit+0x148>)
 8001c2e:	f023 0303 	bic.w	r3, r3, #3
 8001c32:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:178

#if (defined(GD32F30X_HD) || defined(GD32F30X_XD))
    /* reset HXTALEN, CKMEN and PLLEN bits */
    RCU_CTL &= ~(RCU_CTL_PLLEN | RCU_CTL_CKMEN | RCU_CTL_HXTALEN);
 8001c34:	4b0e      	ldr	r3, [pc, #56]	; (8001c70 <SystemInit+0x144>)
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	4a0d      	ldr	r2, [pc, #52]	; (8001c70 <SystemInit+0x144>)
 8001c3a:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001c3e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001c42:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:180
    /* disable all interrupts */
    RCU_INT = 0x009f0000U;
 8001c44:	4b0c      	ldr	r3, [pc, #48]	; (8001c78 <SystemInit+0x14c>)
 8001c46:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8001c4a:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:189
    /* disable all interrupts */
    RCU_INT = 0x00ff0000U;
#endif

    /* reset HXTALBPS bit */
    RCU_CTL &= ~(RCU_CTL_HXTALBPS);
 8001c4c:	4b08      	ldr	r3, [pc, #32]	; (8001c70 <SystemInit+0x144>)
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	4a07      	ldr	r2, [pc, #28]	; (8001c70 <SystemInit+0x144>)
 8001c52:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001c56:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:192
    
    /* Reset CFG0 and CFG1 registers */
    RCU_CFG0 = 0x00000000U;
 8001c58:	4b06      	ldr	r3, [pc, #24]	; (8001c74 <SystemInit+0x148>)
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:193
    RCU_CFG1 = 0x00000000U;
 8001c5e:	4b07      	ldr	r3, [pc, #28]	; (8001c7c <SystemInit+0x150>)
 8001c60:	2200      	movs	r2, #0
 8001c62:	601a      	str	r2, [r3, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:196

    /* configure the system clock source, PLL Multiplier, AHB/APBx prescalers and Flash settings */
    system_clock_config();
 8001c64:	f000 f80c 	bl	8001c80 <system_clock_config>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:197
}
 8001c68:	bf00      	nop
 8001c6a:	3708      	adds	r7, #8
 8001c6c:	46bd      	mov	sp, r7
 8001c6e:	bd80      	pop	{r7, pc}
 8001c70:	40021000 	.word	0x40021000
 8001c74:	40021004 	.word	0x40021004
 8001c78:	40021008 	.word	0x40021008
 8001c7c:	4002102c 	.word	0x4002102c

08001c80 <system_clock_config>:
system_clock_config():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:205
    \param[in]  none
    \param[out] none
    \retval     none
*/
static void system_clock_config(void)
{
 8001c80:	b580      	push	{r7, lr}
 8001c82:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:226
#elif defined (__SYSTEM_CLOCK_72M_PLL_HXTAL)
    system_clock_72m_hxtal();
#elif defined (__SYSTEM_CLOCK_108M_PLL_HXTAL)
    system_clock_108m_hxtal();
#elif defined (__SYSTEM_CLOCK_120M_PLL_HXTAL)
    system_clock_120m_hxtal();
 8001c84:	f000 f802 	bl	8001c8c <system_clock_120m_hxtal>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:228
#endif /* __SYSTEM_CLOCK_IRC8M */
}
 8001c88:	bf00      	nop
 8001c8a:	bd80      	pop	{r7, pc}

08001c8c <system_clock_120m_hxtal>:
system_clock_120m_hxtal():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:895
    \param[in]  none
    \param[out] none
    \retval     none
*/
static void system_clock_120m_hxtal(void)
{
 8001c8c:	b480      	push	{r7}
 8001c8e:	b085      	sub	sp, #20
 8001c90:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:896
    uint32_t timeout = 0U;
 8001c92:	2300      	movs	r3, #0
 8001c94:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:897
    uint32_t stab_flag = 0U;
 8001c96:	2300      	movs	r3, #0
 8001c98:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:901
    __IO uint32_t reg_temp;

    /* enable HXTAL */
    RCU_CTL |= RCU_CTL_HXTALEN;
 8001c9a:	4b4a      	ldr	r3, [pc, #296]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4a49      	ldr	r2, [pc, #292]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001ca0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ca4:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:905 (discriminator 2)

    /* wait until HXTAL is stable or the startup time is longer than HXTAL_STARTUP_TIMEOUT */
    do{
        timeout++;
 8001ca6:	68fb      	ldr	r3, [r7, #12]
 8001ca8:	3301      	adds	r3, #1
 8001caa:	60fb      	str	r3, [r7, #12]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:906 (discriminator 2)
        stab_flag = (RCU_CTL & RCU_CTL_HXTALSTB);
 8001cac:	4b45      	ldr	r3, [pc, #276]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cb4:	60bb      	str	r3, [r7, #8]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:907 (discriminator 2)
    }while((0U == stab_flag) && (HXTAL_STARTUP_TIMEOUT != timeout));
 8001cb6:	68bb      	ldr	r3, [r7, #8]
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d104      	bne.n	8001cc6 <system_clock_120m_hxtal+0x3a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:907 (discriminator 1)
 8001cbc:	68fb      	ldr	r3, [r7, #12]
 8001cbe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cc2:	4293      	cmp	r3, r2
 8001cc4:	d1ef      	bne.n	8001ca6 <system_clock_120m_hxtal+0x1a>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:910

    /* if fail */
    if(0U == (RCU_CTL & RCU_CTL_HXTALSTB)){
 8001cc6:	4b3f      	ldr	r3, [pc, #252]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d100      	bne.n	8001cd4 <system_clock_120m_hxtal+0x48>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:911 (discriminator 1)
        while(1){
 8001cd2:	e7fe      	b.n	8001cd2 <system_clock_120m_hxtal+0x46>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:915
        }
    }

    RCU_APB1EN |= RCU_APB1EN_PMUEN;
 8001cd4:	4b3c      	ldr	r3, [pc, #240]	; (8001dc8 <system_clock_120m_hxtal+0x13c>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	4a3b      	ldr	r2, [pc, #236]	; (8001dc8 <system_clock_120m_hxtal+0x13c>)
 8001cda:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001cde:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:916
    PMU_CTL |= PMU_CTL_LDOVS;
 8001ce0:	4b3a      	ldr	r3, [pc, #232]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	4a39      	ldr	r2, [pc, #228]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001ce6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001cea:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:920

    /* HXTAL is stable */
    /* AHB = SYSCLK */
    RCU_CFG0 |= RCU_AHB_CKSYS_DIV1;
 8001cec:	4b38      	ldr	r3, [pc, #224]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001cee:	4a38      	ldr	r2, [pc, #224]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:922
    /* APB2 = AHB/1 */
    RCU_CFG0 |= RCU_APB2_CKAHB_DIV1;
 8001cf4:	4b36      	ldr	r3, [pc, #216]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001cf6:	4a36      	ldr	r2, [pc, #216]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:924
    /* APB1 = AHB/2 */
    RCU_CFG0 |= RCU_APB1_CKAHB_DIV2;
 8001cfc:	4b34      	ldr	r3, [pc, #208]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	4a33      	ldr	r2, [pc, #204]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d02:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001d06:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:928

#if (defined(GD32F30X_HD) || defined(GD32F30X_XD))
    /* select HXTAL/2 as clock source */
    RCU_CFG0 &= ~(RCU_CFG0_PLLSEL | RCU_CFG0_PREDV0);
 8001d08:	4b31      	ldr	r3, [pc, #196]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	4a30      	ldr	r2, [pc, #192]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d0e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001d12:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:929
    RCU_CFG0 |= (RCU_PLLSRC_HXTAL_IRC48M | RCU_CFG0_PREDV0);
 8001d14:	4b2e      	ldr	r3, [pc, #184]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	4a2d      	ldr	r2, [pc, #180]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d1a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001d1e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:932

    /* CK_PLL = (CK_HXTAL/2) * 30 = 120 MHz */
    RCU_CFG0 &= ~(RCU_CFG0_PLLMF | RCU_CFG0_PLLMF_4 | RCU_CFG0_PLLMF_5);
 8001d20:	4b2b      	ldr	r3, [pc, #172]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	4a2a      	ldr	r2, [pc, #168]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d26:	f023 4390 	bic.w	r3, r3, #1207959552	; 0x48000000
 8001d2a:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 8001d2e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:933
    RCU_CFG0 |= RCU_PLL_MUL30;
 8001d30:	4b27      	ldr	r3, [pc, #156]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	4a26      	ldr	r2, [pc, #152]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d36:	f043 6303 	orr.w	r3, r3, #137363456	; 0x8300000
 8001d3a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001d3e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:952
    while((RCU_CTL & RCU_CTL_PLL1STB) == 0U){
    }
#endif /* GD32F30X_HD and GD32F30X_XD */

    /* enable PLL */
    RCU_CTL |= RCU_CTL_PLLEN;
 8001d40:	4b20      	ldr	r3, [pc, #128]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	4a1f      	ldr	r2, [pc, #124]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001d46:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001d4a:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:955

    /* wait until PLL is stable */
    while(0U == (RCU_CTL & RCU_CTL_PLLSTB)){
 8001d4c:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:955 (discriminator 1)
 8001d4e:	4b1d      	ldr	r3, [pc, #116]	; (8001dc4 <system_clock_120m_hxtal+0x138>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d0f9      	beq.n	8001d4e <system_clock_120m_hxtal+0xc2>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:959
    }

    /* enable the high-drive to extend the clock frequency to 120 MHz */
    PMU_CTL |= PMU_CTL_HDEN;
 8001d5a:	4b1c      	ldr	r3, [pc, #112]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	4a1b      	ldr	r2, [pc, #108]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001d60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d64:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:960
    while(0U == (PMU_CS & PMU_CS_HDRF)){
 8001d66:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:960 (discriminator 1)
 8001d68:	4b1a      	ldr	r3, [pc, #104]	; (8001dd4 <system_clock_120m_hxtal+0x148>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d70:	2b00      	cmp	r3, #0
 8001d72:	d0f9      	beq.n	8001d68 <system_clock_120m_hxtal+0xdc>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:964
    }

    /* select the high-drive mode */
    PMU_CTL |= PMU_CTL_HDS;
 8001d74:	4b15      	ldr	r3, [pc, #84]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	4a14      	ldr	r2, [pc, #80]	; (8001dcc <system_clock_120m_hxtal+0x140>)
 8001d7a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d7e:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:965
    while(0U == (PMU_CS & PMU_CS_HDSRF)){
 8001d80:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:965 (discriminator 1)
 8001d82:	4b14      	ldr	r3, [pc, #80]	; (8001dd4 <system_clock_120m_hxtal+0x148>)
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d0f9      	beq.n	8001d82 <system_clock_120m_hxtal+0xf6>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:968
    }

    reg_temp = RCU_CFG0;
 8001d8e:	4b10      	ldr	r3, [pc, #64]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:970
    /* select PLL as system clock */
    reg_temp &= ~RCU_CFG0_SCS;
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	f023 0303 	bic.w	r3, r3, #3
 8001d9a:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:971
    reg_temp |= RCU_CKSYSSRC_PLL;
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	f043 0302 	orr.w	r3, r3, #2
 8001da2:	607b      	str	r3, [r7, #4]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:972
    RCU_CFG0 = reg_temp;
 8001da4:	4a0a      	ldr	r2, [pc, #40]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	6013      	str	r3, [r2, #0]
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:975

    /* wait until PLL is selected as system clock */
    while(0U == (RCU_CFG0 & RCU_SCSS_PLL)){
 8001daa:	bf00      	nop
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:975 (discriminator 1)
 8001dac:	4b08      	ldr	r3, [pc, #32]	; (8001dd0 <system_clock_120m_hxtal+0x144>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f003 0308 	and.w	r3, r3, #8
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d0f9      	beq.n	8001dac <system_clock_120m_hxtal+0x120>
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:977
    }
}
 8001db8:	bf00      	nop
 8001dba:	bf00      	nop
 8001dbc:	3714      	adds	r7, #20
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	bc80      	pop	{r7}
 8001dc2:	4770      	bx	lr
 8001dc4:	40021000 	.word	0x40021000
 8001dc8:	4002101c 	.word	0x4002101c
 8001dcc:	40007000 	.word	0x40007000
 8001dd0:	40021004 	.word	0x40021004
 8001dd4:	40007004 	.word	0x40007004

08001dd8 <gd32f30x_firmware_version_get>:
gd32f30x_firmware_version_get():
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:1093
    \param[in]  none
    \param[out] none
    \retval     firmware version
*/
uint32_t gd32f30x_firmware_version_get(void)
{
 8001dd8:	b480      	push	{r7}
 8001dda:	af00      	add	r7, sp, #0
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:1094
    return __GD32F30x_STDPERIPH_VERSION;
 8001ddc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
C:\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder_1.5.3.31964\GD32EmbeddedBuilder\workspace\CAN_TEST\GD ARM MCU Debug/../Firmware/CMSIS/GD/GD32F30x/Source/system_gd32f30x.c:1095
}
 8001de0:	4618      	mov	r0, r3
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bc80      	pop	{r7}
 8001de6:	4770      	bx	lr

08001de8 <__libc_init_array>:
__libc_init_array():
 8001de8:	b570      	push	{r4, r5, r6, lr}
 8001dea:	4d0d      	ldr	r5, [pc, #52]	; (8001e20 <__libc_init_array+0x38>)
 8001dec:	4c0d      	ldr	r4, [pc, #52]	; (8001e24 <__libc_init_array+0x3c>)
 8001dee:	1b64      	subs	r4, r4, r5
 8001df0:	10a4      	asrs	r4, r4, #2
 8001df2:	2600      	movs	r6, #0
 8001df4:	42a6      	cmp	r6, r4
 8001df6:	d109      	bne.n	8001e0c <__libc_init_array+0x24>
 8001df8:	4d0b      	ldr	r5, [pc, #44]	; (8001e28 <__libc_init_array+0x40>)
 8001dfa:	4c0c      	ldr	r4, [pc, #48]	; (8001e2c <__libc_init_array+0x44>)
 8001dfc:	f000 ff72 	bl	8002ce4 <_init>
 8001e00:	1b64      	subs	r4, r4, r5
 8001e02:	10a4      	asrs	r4, r4, #2
 8001e04:	2600      	movs	r6, #0
 8001e06:	42a6      	cmp	r6, r4
 8001e08:	d105      	bne.n	8001e16 <__libc_init_array+0x2e>
 8001e0a:	bd70      	pop	{r4, r5, r6, pc}
 8001e0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e10:	4798      	blx	r3
 8001e12:	3601      	adds	r6, #1
 8001e14:	e7ee      	b.n	8001df4 <__libc_init_array+0xc>
 8001e16:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e1a:	4798      	blx	r3
 8001e1c:	3601      	adds	r6, #1
 8001e1e:	e7f2      	b.n	8001e06 <__libc_init_array+0x1e>
 8001e20:	08002e3c 	.word	0x08002e3c
 8001e24:	08002e3c 	.word	0x08002e3c
 8001e28:	08002e3c 	.word	0x08002e3c
 8001e2c:	08002e40 	.word	0x08002e40

08001e30 <memset>:
memset():
 8001e30:	4402      	add	r2, r0
 8001e32:	4603      	mov	r3, r0
 8001e34:	4293      	cmp	r3, r2
 8001e36:	d100      	bne.n	8001e3a <memset+0xa>
 8001e38:	4770      	bx	lr
 8001e3a:	f803 1b01 	strb.w	r1, [r3], #1
 8001e3e:	e7f9      	b.n	8001e34 <memset+0x4>

08001e40 <iprintf>:
iprintf():
 8001e40:	b40f      	push	{r0, r1, r2, r3}
 8001e42:	4b0a      	ldr	r3, [pc, #40]	; (8001e6c <iprintf+0x2c>)
 8001e44:	b513      	push	{r0, r1, r4, lr}
 8001e46:	681c      	ldr	r4, [r3, #0]
 8001e48:	b124      	cbz	r4, 8001e54 <iprintf+0x14>
 8001e4a:	69a3      	ldr	r3, [r4, #24]
 8001e4c:	b913      	cbnz	r3, 8001e54 <iprintf+0x14>
 8001e4e:	4620      	mov	r0, r4
 8001e50:	f000 f866 	bl	8001f20 <__sinit>
 8001e54:	ab05      	add	r3, sp, #20
 8001e56:	9a04      	ldr	r2, [sp, #16]
 8001e58:	68a1      	ldr	r1, [r4, #8]
 8001e5a:	9301      	str	r3, [sp, #4]
 8001e5c:	4620      	mov	r0, r4
 8001e5e:	f000 f9cf 	bl	8002200 <_vfiprintf_r>
 8001e62:	b002      	add	sp, #8
 8001e64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e68:	b004      	add	sp, #16
 8001e6a:	4770      	bx	lr
 8001e6c:	20000088 	.word	0x20000088

08001e70 <std>:
std():
 8001e70:	2300      	movs	r3, #0
 8001e72:	b510      	push	{r4, lr}
 8001e74:	4604      	mov	r4, r0
 8001e76:	e9c0 3300 	strd	r3, r3, [r0]
 8001e7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001e7e:	6083      	str	r3, [r0, #8]
 8001e80:	8181      	strh	r1, [r0, #12]
 8001e82:	6643      	str	r3, [r0, #100]	; 0x64
 8001e84:	81c2      	strh	r2, [r0, #14]
 8001e86:	6183      	str	r3, [r0, #24]
 8001e88:	4619      	mov	r1, r3
 8001e8a:	2208      	movs	r2, #8
 8001e8c:	305c      	adds	r0, #92	; 0x5c
 8001e8e:	f7ff ffcf 	bl	8001e30 <memset>
 8001e92:	4b05      	ldr	r3, [pc, #20]	; (8001ea8 <std+0x38>)
 8001e94:	6263      	str	r3, [r4, #36]	; 0x24
 8001e96:	4b05      	ldr	r3, [pc, #20]	; (8001eac <std+0x3c>)
 8001e98:	62a3      	str	r3, [r4, #40]	; 0x28
 8001e9a:	4b05      	ldr	r3, [pc, #20]	; (8001eb0 <std+0x40>)
 8001e9c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001e9e:	4b05      	ldr	r3, [pc, #20]	; (8001eb4 <std+0x44>)
 8001ea0:	6224      	str	r4, [r4, #32]
 8001ea2:	6323      	str	r3, [r4, #48]	; 0x30
 8001ea4:	bd10      	pop	{r4, pc}
 8001ea6:	bf00      	nop
 8001ea8:	080027a9 	.word	0x080027a9
 8001eac:	080027cb 	.word	0x080027cb
 8001eb0:	08002803 	.word	0x08002803
 8001eb4:	08002827 	.word	0x08002827

08001eb8 <_cleanup_r>:
_cleanup_r():
 8001eb8:	4901      	ldr	r1, [pc, #4]	; (8001ec0 <_cleanup_r+0x8>)
 8001eba:	f000 b8af 	b.w	800201c <_fwalk_reent>
 8001ebe:	bf00      	nop
 8001ec0:	08002b01 	.word	0x08002b01

08001ec4 <__sfmoreglue>:
__sfmoreglue():
 8001ec4:	b570      	push	{r4, r5, r6, lr}
 8001ec6:	1e4a      	subs	r2, r1, #1
 8001ec8:	2568      	movs	r5, #104	; 0x68
 8001eca:	4355      	muls	r5, r2
 8001ecc:	460e      	mov	r6, r1
 8001ece:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8001ed2:	f000 f913 	bl	80020fc <_malloc_r>
 8001ed6:	4604      	mov	r4, r0
 8001ed8:	b140      	cbz	r0, 8001eec <__sfmoreglue+0x28>
 8001eda:	2100      	movs	r1, #0
 8001edc:	e9c0 1600 	strd	r1, r6, [r0]
 8001ee0:	300c      	adds	r0, #12
 8001ee2:	60a0      	str	r0, [r4, #8]
 8001ee4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001ee8:	f7ff ffa2 	bl	8001e30 <memset>
 8001eec:	4620      	mov	r0, r4
 8001eee:	bd70      	pop	{r4, r5, r6, pc}

08001ef0 <__sfp_lock_acquire>:
__sfp_lock_acquire():
 8001ef0:	4801      	ldr	r0, [pc, #4]	; (8001ef8 <__sfp_lock_acquire+0x8>)
 8001ef2:	f000 b8b3 	b.w	800205c <__retarget_lock_acquire_recursive>
 8001ef6:	bf00      	nop
 8001ef8:	20000138 	.word	0x20000138

08001efc <__sfp_lock_release>:
__sfp_lock_release():
 8001efc:	4801      	ldr	r0, [pc, #4]	; (8001f04 <__sfp_lock_release+0x8>)
 8001efe:	f000 b8ae 	b.w	800205e <__retarget_lock_release_recursive>
 8001f02:	bf00      	nop
 8001f04:	20000138 	.word	0x20000138

08001f08 <__sinit_lock_acquire>:
__sinit_lock_acquire():
 8001f08:	4801      	ldr	r0, [pc, #4]	; (8001f10 <__sinit_lock_acquire+0x8>)
 8001f0a:	f000 b8a7 	b.w	800205c <__retarget_lock_acquire_recursive>
 8001f0e:	bf00      	nop
 8001f10:	20000133 	.word	0x20000133

08001f14 <__sinit_lock_release>:
__sinit_lock_release():
 8001f14:	4801      	ldr	r0, [pc, #4]	; (8001f1c <__sinit_lock_release+0x8>)
 8001f16:	f000 b8a2 	b.w	800205e <__retarget_lock_release_recursive>
 8001f1a:	bf00      	nop
 8001f1c:	20000133 	.word	0x20000133

08001f20 <__sinit>:
__sinit():
 8001f20:	b510      	push	{r4, lr}
 8001f22:	4604      	mov	r4, r0
 8001f24:	f7ff fff0 	bl	8001f08 <__sinit_lock_acquire>
 8001f28:	69a3      	ldr	r3, [r4, #24]
 8001f2a:	b11b      	cbz	r3, 8001f34 <__sinit+0x14>
 8001f2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f30:	f7ff bff0 	b.w	8001f14 <__sinit_lock_release>
 8001f34:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001f38:	6523      	str	r3, [r4, #80]	; 0x50
 8001f3a:	4b13      	ldr	r3, [pc, #76]	; (8001f88 <__sinit+0x68>)
 8001f3c:	4a13      	ldr	r2, [pc, #76]	; (8001f8c <__sinit+0x6c>)
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	62a2      	str	r2, [r4, #40]	; 0x28
 8001f42:	42a3      	cmp	r3, r4
 8001f44:	bf04      	itt	eq
 8001f46:	2301      	moveq	r3, #1
 8001f48:	61a3      	streq	r3, [r4, #24]
 8001f4a:	4620      	mov	r0, r4
 8001f4c:	f000 f820 	bl	8001f90 <__sfp>
 8001f50:	6060      	str	r0, [r4, #4]
 8001f52:	4620      	mov	r0, r4
 8001f54:	f000 f81c 	bl	8001f90 <__sfp>
 8001f58:	60a0      	str	r0, [r4, #8]
 8001f5a:	4620      	mov	r0, r4
 8001f5c:	f000 f818 	bl	8001f90 <__sfp>
 8001f60:	2200      	movs	r2, #0
 8001f62:	60e0      	str	r0, [r4, #12]
 8001f64:	2104      	movs	r1, #4
 8001f66:	6860      	ldr	r0, [r4, #4]
 8001f68:	f7ff ff82 	bl	8001e70 <std>
 8001f6c:	68a0      	ldr	r0, [r4, #8]
 8001f6e:	2201      	movs	r2, #1
 8001f70:	2109      	movs	r1, #9
 8001f72:	f7ff ff7d 	bl	8001e70 <std>
 8001f76:	68e0      	ldr	r0, [r4, #12]
 8001f78:	2202      	movs	r2, #2
 8001f7a:	2112      	movs	r1, #18
 8001f7c:	f7ff ff78 	bl	8001e70 <std>
 8001f80:	2301      	movs	r3, #1
 8001f82:	61a3      	str	r3, [r4, #24]
 8001f84:	e7d2      	b.n	8001f2c <__sinit+0xc>
 8001f86:	bf00      	nop
 8001f88:	08002da4 	.word	0x08002da4
 8001f8c:	08001eb9 	.word	0x08001eb9

08001f90 <__sfp>:
__sfp():
 8001f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f92:	4607      	mov	r7, r0
 8001f94:	f7ff ffac 	bl	8001ef0 <__sfp_lock_acquire>
 8001f98:	4b1e      	ldr	r3, [pc, #120]	; (8002014 <__sfp+0x84>)
 8001f9a:	681e      	ldr	r6, [r3, #0]
 8001f9c:	69b3      	ldr	r3, [r6, #24]
 8001f9e:	b913      	cbnz	r3, 8001fa6 <__sfp+0x16>
 8001fa0:	4630      	mov	r0, r6
 8001fa2:	f7ff ffbd 	bl	8001f20 <__sinit>
 8001fa6:	3648      	adds	r6, #72	; 0x48
 8001fa8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001fac:	3b01      	subs	r3, #1
 8001fae:	d503      	bpl.n	8001fb8 <__sfp+0x28>
 8001fb0:	6833      	ldr	r3, [r6, #0]
 8001fb2:	b30b      	cbz	r3, 8001ff8 <__sfp+0x68>
 8001fb4:	6836      	ldr	r6, [r6, #0]
 8001fb6:	e7f7      	b.n	8001fa8 <__sfp+0x18>
 8001fb8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001fbc:	b9d5      	cbnz	r5, 8001ff4 <__sfp+0x64>
 8001fbe:	4b16      	ldr	r3, [pc, #88]	; (8002018 <__sfp+0x88>)
 8001fc0:	60e3      	str	r3, [r4, #12]
 8001fc2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001fc6:	6665      	str	r5, [r4, #100]	; 0x64
 8001fc8:	f000 f847 	bl	800205a <__retarget_lock_init_recursive>
 8001fcc:	f7ff ff96 	bl	8001efc <__sfp_lock_release>
 8001fd0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001fd4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001fd8:	6025      	str	r5, [r4, #0]
 8001fda:	61a5      	str	r5, [r4, #24]
 8001fdc:	2208      	movs	r2, #8
 8001fde:	4629      	mov	r1, r5
 8001fe0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001fe4:	f7ff ff24 	bl	8001e30 <memset>
 8001fe8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001fec:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001ff0:	4620      	mov	r0, r4
 8001ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ff4:	3468      	adds	r4, #104	; 0x68
 8001ff6:	e7d9      	b.n	8001fac <__sfp+0x1c>
 8001ff8:	2104      	movs	r1, #4
 8001ffa:	4638      	mov	r0, r7
 8001ffc:	f7ff ff62 	bl	8001ec4 <__sfmoreglue>
 8002000:	4604      	mov	r4, r0
 8002002:	6030      	str	r0, [r6, #0]
 8002004:	2800      	cmp	r0, #0
 8002006:	d1d5      	bne.n	8001fb4 <__sfp+0x24>
 8002008:	f7ff ff78 	bl	8001efc <__sfp_lock_release>
 800200c:	230c      	movs	r3, #12
 800200e:	603b      	str	r3, [r7, #0]
 8002010:	e7ee      	b.n	8001ff0 <__sfp+0x60>
 8002012:	bf00      	nop
 8002014:	08002da4 	.word	0x08002da4
 8002018:	ffff0001 	.word	0xffff0001

0800201c <_fwalk_reent>:
_fwalk_reent():
 800201c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002020:	4606      	mov	r6, r0
 8002022:	4688      	mov	r8, r1
 8002024:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002028:	2700      	movs	r7, #0
 800202a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800202e:	f1b9 0901 	subs.w	r9, r9, #1
 8002032:	d505      	bpl.n	8002040 <_fwalk_reent+0x24>
 8002034:	6824      	ldr	r4, [r4, #0]
 8002036:	2c00      	cmp	r4, #0
 8002038:	d1f7      	bne.n	800202a <_fwalk_reent+0xe>
 800203a:	4638      	mov	r0, r7
 800203c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002040:	89ab      	ldrh	r3, [r5, #12]
 8002042:	2b01      	cmp	r3, #1
 8002044:	d907      	bls.n	8002056 <_fwalk_reent+0x3a>
 8002046:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800204a:	3301      	adds	r3, #1
 800204c:	d003      	beq.n	8002056 <_fwalk_reent+0x3a>
 800204e:	4629      	mov	r1, r5
 8002050:	4630      	mov	r0, r6
 8002052:	47c0      	blx	r8
 8002054:	4307      	orrs	r7, r0
 8002056:	3568      	adds	r5, #104	; 0x68
 8002058:	e7e9      	b.n	800202e <_fwalk_reent+0x12>

0800205a <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
 800205a:	4770      	bx	lr

0800205c <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
 800205c:	4770      	bx	lr

0800205e <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
 800205e:	4770      	bx	lr

08002060 <_free_r>:
_free_r():
 8002060:	b538      	push	{r3, r4, r5, lr}
 8002062:	4605      	mov	r5, r0
 8002064:	2900      	cmp	r1, #0
 8002066:	d045      	beq.n	80020f4 <_free_r+0x94>
 8002068:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800206c:	1f0c      	subs	r4, r1, #4
 800206e:	2b00      	cmp	r3, #0
 8002070:	bfb8      	it	lt
 8002072:	18e4      	addlt	r4, r4, r3
 8002074:	f000 fdf6 	bl	8002c64 <__malloc_lock>
 8002078:	4a1f      	ldr	r2, [pc, #124]	; (80020f8 <_free_r+0x98>)
 800207a:	6813      	ldr	r3, [r2, #0]
 800207c:	4610      	mov	r0, r2
 800207e:	b933      	cbnz	r3, 800208e <_free_r+0x2e>
 8002080:	6063      	str	r3, [r4, #4]
 8002082:	6014      	str	r4, [r2, #0]
 8002084:	4628      	mov	r0, r5
 8002086:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800208a:	f000 bdf1 	b.w	8002c70 <__malloc_unlock>
 800208e:	42a3      	cmp	r3, r4
 8002090:	d90b      	bls.n	80020aa <_free_r+0x4a>
 8002092:	6821      	ldr	r1, [r4, #0]
 8002094:	1862      	adds	r2, r4, r1
 8002096:	4293      	cmp	r3, r2
 8002098:	bf04      	itt	eq
 800209a:	681a      	ldreq	r2, [r3, #0]
 800209c:	685b      	ldreq	r3, [r3, #4]
 800209e:	6063      	str	r3, [r4, #4]
 80020a0:	bf04      	itt	eq
 80020a2:	1852      	addeq	r2, r2, r1
 80020a4:	6022      	streq	r2, [r4, #0]
 80020a6:	6004      	str	r4, [r0, #0]
 80020a8:	e7ec      	b.n	8002084 <_free_r+0x24>
 80020aa:	461a      	mov	r2, r3
 80020ac:	685b      	ldr	r3, [r3, #4]
 80020ae:	b10b      	cbz	r3, 80020b4 <_free_r+0x54>
 80020b0:	42a3      	cmp	r3, r4
 80020b2:	d9fa      	bls.n	80020aa <_free_r+0x4a>
 80020b4:	6811      	ldr	r1, [r2, #0]
 80020b6:	1850      	adds	r0, r2, r1
 80020b8:	42a0      	cmp	r0, r4
 80020ba:	d10b      	bne.n	80020d4 <_free_r+0x74>
 80020bc:	6820      	ldr	r0, [r4, #0]
 80020be:	4401      	add	r1, r0
 80020c0:	1850      	adds	r0, r2, r1
 80020c2:	4283      	cmp	r3, r0
 80020c4:	6011      	str	r1, [r2, #0]
 80020c6:	d1dd      	bne.n	8002084 <_free_r+0x24>
 80020c8:	6818      	ldr	r0, [r3, #0]
 80020ca:	685b      	ldr	r3, [r3, #4]
 80020cc:	6053      	str	r3, [r2, #4]
 80020ce:	4401      	add	r1, r0
 80020d0:	6011      	str	r1, [r2, #0]
 80020d2:	e7d7      	b.n	8002084 <_free_r+0x24>
 80020d4:	d902      	bls.n	80020dc <_free_r+0x7c>
 80020d6:	230c      	movs	r3, #12
 80020d8:	602b      	str	r3, [r5, #0]
 80020da:	e7d3      	b.n	8002084 <_free_r+0x24>
 80020dc:	6820      	ldr	r0, [r4, #0]
 80020de:	1821      	adds	r1, r4, r0
 80020e0:	428b      	cmp	r3, r1
 80020e2:	bf04      	itt	eq
 80020e4:	6819      	ldreq	r1, [r3, #0]
 80020e6:	685b      	ldreq	r3, [r3, #4]
 80020e8:	6063      	str	r3, [r4, #4]
 80020ea:	bf04      	itt	eq
 80020ec:	1809      	addeq	r1, r1, r0
 80020ee:	6021      	streq	r1, [r4, #0]
 80020f0:	6054      	str	r4, [r2, #4]
 80020f2:	e7c7      	b.n	8002084 <_free_r+0x24>
 80020f4:	bd38      	pop	{r3, r4, r5, pc}
 80020f6:	bf00      	nop
 80020f8:	20000110 	.word	0x20000110

080020fc <_malloc_r>:
_malloc_r():
 80020fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020fe:	1ccd      	adds	r5, r1, #3
 8002100:	f025 0503 	bic.w	r5, r5, #3
 8002104:	3508      	adds	r5, #8
 8002106:	2d0c      	cmp	r5, #12
 8002108:	bf38      	it	cc
 800210a:	250c      	movcc	r5, #12
 800210c:	2d00      	cmp	r5, #0
 800210e:	4606      	mov	r6, r0
 8002110:	db01      	blt.n	8002116 <_malloc_r+0x1a>
 8002112:	42a9      	cmp	r1, r5
 8002114:	d903      	bls.n	800211e <_malloc_r+0x22>
 8002116:	230c      	movs	r3, #12
 8002118:	6033      	str	r3, [r6, #0]
 800211a:	2000      	movs	r0, #0
 800211c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800211e:	f000 fda1 	bl	8002c64 <__malloc_lock>
 8002122:	4921      	ldr	r1, [pc, #132]	; (80021a8 <_malloc_r+0xac>)
 8002124:	680a      	ldr	r2, [r1, #0]
 8002126:	4614      	mov	r4, r2
 8002128:	b99c      	cbnz	r4, 8002152 <_malloc_r+0x56>
 800212a:	4f20      	ldr	r7, [pc, #128]	; (80021ac <_malloc_r+0xb0>)
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	b923      	cbnz	r3, 800213a <_malloc_r+0x3e>
 8002130:	4621      	mov	r1, r4
 8002132:	4630      	mov	r0, r6
 8002134:	f000 fb28 	bl	8002788 <_sbrk_r>
 8002138:	6038      	str	r0, [r7, #0]
 800213a:	4629      	mov	r1, r5
 800213c:	4630      	mov	r0, r6
 800213e:	f000 fb23 	bl	8002788 <_sbrk_r>
 8002142:	1c43      	adds	r3, r0, #1
 8002144:	d123      	bne.n	800218e <_malloc_r+0x92>
 8002146:	230c      	movs	r3, #12
 8002148:	6033      	str	r3, [r6, #0]
 800214a:	4630      	mov	r0, r6
 800214c:	f000 fd90 	bl	8002c70 <__malloc_unlock>
 8002150:	e7e3      	b.n	800211a <_malloc_r+0x1e>
 8002152:	6823      	ldr	r3, [r4, #0]
 8002154:	1b5b      	subs	r3, r3, r5
 8002156:	d417      	bmi.n	8002188 <_malloc_r+0x8c>
 8002158:	2b0b      	cmp	r3, #11
 800215a:	d903      	bls.n	8002164 <_malloc_r+0x68>
 800215c:	6023      	str	r3, [r4, #0]
 800215e:	441c      	add	r4, r3
 8002160:	6025      	str	r5, [r4, #0]
 8002162:	e004      	b.n	800216e <_malloc_r+0x72>
 8002164:	6863      	ldr	r3, [r4, #4]
 8002166:	42a2      	cmp	r2, r4
 8002168:	bf0c      	ite	eq
 800216a:	600b      	streq	r3, [r1, #0]
 800216c:	6053      	strne	r3, [r2, #4]
 800216e:	4630      	mov	r0, r6
 8002170:	f000 fd7e 	bl	8002c70 <__malloc_unlock>
 8002174:	f104 000b 	add.w	r0, r4, #11
 8002178:	1d23      	adds	r3, r4, #4
 800217a:	f020 0007 	bic.w	r0, r0, #7
 800217e:	1ac2      	subs	r2, r0, r3
 8002180:	d0cc      	beq.n	800211c <_malloc_r+0x20>
 8002182:	1a1b      	subs	r3, r3, r0
 8002184:	50a3      	str	r3, [r4, r2]
 8002186:	e7c9      	b.n	800211c <_malloc_r+0x20>
 8002188:	4622      	mov	r2, r4
 800218a:	6864      	ldr	r4, [r4, #4]
 800218c:	e7cc      	b.n	8002128 <_malloc_r+0x2c>
 800218e:	1cc4      	adds	r4, r0, #3
 8002190:	f024 0403 	bic.w	r4, r4, #3
 8002194:	42a0      	cmp	r0, r4
 8002196:	d0e3      	beq.n	8002160 <_malloc_r+0x64>
 8002198:	1a21      	subs	r1, r4, r0
 800219a:	4630      	mov	r0, r6
 800219c:	f000 faf4 	bl	8002788 <_sbrk_r>
 80021a0:	3001      	adds	r0, #1
 80021a2:	d1dd      	bne.n	8002160 <_malloc_r+0x64>
 80021a4:	e7cf      	b.n	8002146 <_malloc_r+0x4a>
 80021a6:	bf00      	nop
 80021a8:	20000110 	.word	0x20000110
 80021ac:	20000114 	.word	0x20000114

080021b0 <__sfputc_r>:
__sfputc_r():
 80021b0:	6893      	ldr	r3, [r2, #8]
 80021b2:	3b01      	subs	r3, #1
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	b410      	push	{r4}
 80021b8:	6093      	str	r3, [r2, #8]
 80021ba:	da07      	bge.n	80021cc <__sfputc_r+0x1c>
 80021bc:	6994      	ldr	r4, [r2, #24]
 80021be:	42a3      	cmp	r3, r4
 80021c0:	db01      	blt.n	80021c6 <__sfputc_r+0x16>
 80021c2:	290a      	cmp	r1, #10
 80021c4:	d102      	bne.n	80021cc <__sfputc_r+0x1c>
 80021c6:	bc10      	pop	{r4}
 80021c8:	f000 bb32 	b.w	8002830 <__swbuf_r>
 80021cc:	6813      	ldr	r3, [r2, #0]
 80021ce:	1c58      	adds	r0, r3, #1
 80021d0:	6010      	str	r0, [r2, #0]
 80021d2:	7019      	strb	r1, [r3, #0]
 80021d4:	4608      	mov	r0, r1
 80021d6:	bc10      	pop	{r4}
 80021d8:	4770      	bx	lr

080021da <__sfputs_r>:
__sfputs_r():
 80021da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021dc:	4606      	mov	r6, r0
 80021de:	460f      	mov	r7, r1
 80021e0:	4614      	mov	r4, r2
 80021e2:	18d5      	adds	r5, r2, r3
 80021e4:	42ac      	cmp	r4, r5
 80021e6:	d101      	bne.n	80021ec <__sfputs_r+0x12>
 80021e8:	2000      	movs	r0, #0
 80021ea:	e007      	b.n	80021fc <__sfputs_r+0x22>
 80021ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80021f0:	463a      	mov	r2, r7
 80021f2:	4630      	mov	r0, r6
 80021f4:	f7ff ffdc 	bl	80021b0 <__sfputc_r>
 80021f8:	1c43      	adds	r3, r0, #1
 80021fa:	d1f3      	bne.n	80021e4 <__sfputs_r+0xa>
 80021fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002200 <_vfiprintf_r>:
_vfprintf_r():
 8002200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002204:	460d      	mov	r5, r1
 8002206:	b09d      	sub	sp, #116	; 0x74
 8002208:	4614      	mov	r4, r2
 800220a:	4698      	mov	r8, r3
 800220c:	4606      	mov	r6, r0
 800220e:	b118      	cbz	r0, 8002218 <_vfiprintf_r+0x18>
 8002210:	6983      	ldr	r3, [r0, #24]
 8002212:	b90b      	cbnz	r3, 8002218 <_vfiprintf_r+0x18>
 8002214:	f7ff fe84 	bl	8001f20 <__sinit>
 8002218:	4b89      	ldr	r3, [pc, #548]	; (8002440 <_vfiprintf_r+0x240>)
 800221a:	429d      	cmp	r5, r3
 800221c:	d11b      	bne.n	8002256 <_vfiprintf_r+0x56>
 800221e:	6875      	ldr	r5, [r6, #4]
 8002220:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002222:	07d9      	lsls	r1, r3, #31
 8002224:	d405      	bmi.n	8002232 <_vfiprintf_r+0x32>
 8002226:	89ab      	ldrh	r3, [r5, #12]
 8002228:	059a      	lsls	r2, r3, #22
 800222a:	d402      	bmi.n	8002232 <_vfiprintf_r+0x32>
 800222c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800222e:	f7ff ff15 	bl	800205c <__retarget_lock_acquire_recursive>
 8002232:	89ab      	ldrh	r3, [r5, #12]
 8002234:	071b      	lsls	r3, r3, #28
 8002236:	d501      	bpl.n	800223c <_vfiprintf_r+0x3c>
 8002238:	692b      	ldr	r3, [r5, #16]
 800223a:	b9eb      	cbnz	r3, 8002278 <_vfiprintf_r+0x78>
 800223c:	4629      	mov	r1, r5
 800223e:	4630      	mov	r0, r6
 8002240:	f000 fb5a 	bl	80028f8 <__swsetup_r>
 8002244:	b1c0      	cbz	r0, 8002278 <_vfiprintf_r+0x78>
 8002246:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002248:	07dc      	lsls	r4, r3, #31
 800224a:	d50e      	bpl.n	800226a <_vfiprintf_r+0x6a>
 800224c:	f04f 30ff 	mov.w	r0, #4294967295
 8002250:	b01d      	add	sp, #116	; 0x74
 8002252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002256:	4b7b      	ldr	r3, [pc, #492]	; (8002444 <_vfiprintf_r+0x244>)
 8002258:	429d      	cmp	r5, r3
 800225a:	d101      	bne.n	8002260 <_vfiprintf_r+0x60>
 800225c:	68b5      	ldr	r5, [r6, #8]
 800225e:	e7df      	b.n	8002220 <_vfiprintf_r+0x20>
 8002260:	4b79      	ldr	r3, [pc, #484]	; (8002448 <_vfiprintf_r+0x248>)
 8002262:	429d      	cmp	r5, r3
 8002264:	bf08      	it	eq
 8002266:	68f5      	ldreq	r5, [r6, #12]
 8002268:	e7da      	b.n	8002220 <_vfiprintf_r+0x20>
 800226a:	89ab      	ldrh	r3, [r5, #12]
 800226c:	0598      	lsls	r0, r3, #22
 800226e:	d4ed      	bmi.n	800224c <_vfiprintf_r+0x4c>
 8002270:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002272:	f7ff fef4 	bl	800205e <__retarget_lock_release_recursive>
 8002276:	e7e9      	b.n	800224c <_vfiprintf_r+0x4c>
 8002278:	2300      	movs	r3, #0
 800227a:	9309      	str	r3, [sp, #36]	; 0x24
 800227c:	2320      	movs	r3, #32
 800227e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002282:	f8cd 800c 	str.w	r8, [sp, #12]
 8002286:	2330      	movs	r3, #48	; 0x30
 8002288:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800244c <_vfiprintf_r+0x24c>
 800228c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002290:	f04f 0901 	mov.w	r9, #1
 8002294:	4623      	mov	r3, r4
 8002296:	469a      	mov	sl, r3
 8002298:	f813 2b01 	ldrb.w	r2, [r3], #1
 800229c:	b10a      	cbz	r2, 80022a2 <_vfiprintf_r+0xa2>
 800229e:	2a25      	cmp	r2, #37	; 0x25
 80022a0:	d1f9      	bne.n	8002296 <_vfiprintf_r+0x96>
 80022a2:	ebba 0b04 	subs.w	fp, sl, r4
 80022a6:	d00b      	beq.n	80022c0 <_vfiprintf_r+0xc0>
 80022a8:	465b      	mov	r3, fp
 80022aa:	4622      	mov	r2, r4
 80022ac:	4629      	mov	r1, r5
 80022ae:	4630      	mov	r0, r6
 80022b0:	f7ff ff93 	bl	80021da <__sfputs_r>
 80022b4:	3001      	adds	r0, #1
 80022b6:	f000 80aa 	beq.w	800240e <_vfiprintf_r+0x20e>
 80022ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80022bc:	445a      	add	r2, fp
 80022be:	9209      	str	r2, [sp, #36]	; 0x24
 80022c0:	f89a 3000 	ldrb.w	r3, [sl]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	f000 80a2 	beq.w	800240e <_vfiprintf_r+0x20e>
 80022ca:	2300      	movs	r3, #0
 80022cc:	f04f 32ff 	mov.w	r2, #4294967295
 80022d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80022d4:	f10a 0a01 	add.w	sl, sl, #1
 80022d8:	9304      	str	r3, [sp, #16]
 80022da:	9307      	str	r3, [sp, #28]
 80022dc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80022e0:	931a      	str	r3, [sp, #104]	; 0x68
 80022e2:	4654      	mov	r4, sl
 80022e4:	2205      	movs	r2, #5
 80022e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80022ea:	4858      	ldr	r0, [pc, #352]	; (800244c <_vfiprintf_r+0x24c>)
 80022ec:	f7fd ff20 	bl	8000130 <memchr>
 80022f0:	9a04      	ldr	r2, [sp, #16]
 80022f2:	b9d8      	cbnz	r0, 800232c <_vfiprintf_r+0x12c>
 80022f4:	06d1      	lsls	r1, r2, #27
 80022f6:	bf44      	itt	mi
 80022f8:	2320      	movmi	r3, #32
 80022fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80022fe:	0713      	lsls	r3, r2, #28
 8002300:	bf44      	itt	mi
 8002302:	232b      	movmi	r3, #43	; 0x2b
 8002304:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002308:	f89a 3000 	ldrb.w	r3, [sl]
 800230c:	2b2a      	cmp	r3, #42	; 0x2a
 800230e:	d015      	beq.n	800233c <_vfiprintf_r+0x13c>
 8002310:	9a07      	ldr	r2, [sp, #28]
 8002312:	4654      	mov	r4, sl
 8002314:	2000      	movs	r0, #0
 8002316:	f04f 0c0a 	mov.w	ip, #10
 800231a:	4621      	mov	r1, r4
 800231c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002320:	3b30      	subs	r3, #48	; 0x30
 8002322:	2b09      	cmp	r3, #9
 8002324:	d94e      	bls.n	80023c4 <_vfiprintf_r+0x1c4>
 8002326:	b1b0      	cbz	r0, 8002356 <_vfiprintf_r+0x156>
 8002328:	9207      	str	r2, [sp, #28]
 800232a:	e014      	b.n	8002356 <_vfiprintf_r+0x156>
 800232c:	eba0 0308 	sub.w	r3, r0, r8
 8002330:	fa09 f303 	lsl.w	r3, r9, r3
 8002334:	4313      	orrs	r3, r2
 8002336:	9304      	str	r3, [sp, #16]
 8002338:	46a2      	mov	sl, r4
 800233a:	e7d2      	b.n	80022e2 <_vfiprintf_r+0xe2>
 800233c:	9b03      	ldr	r3, [sp, #12]
 800233e:	1d19      	adds	r1, r3, #4
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	9103      	str	r1, [sp, #12]
 8002344:	2b00      	cmp	r3, #0
 8002346:	bfbb      	ittet	lt
 8002348:	425b      	neglt	r3, r3
 800234a:	f042 0202 	orrlt.w	r2, r2, #2
 800234e:	9307      	strge	r3, [sp, #28]
 8002350:	9307      	strlt	r3, [sp, #28]
 8002352:	bfb8      	it	lt
 8002354:	9204      	strlt	r2, [sp, #16]
 8002356:	7823      	ldrb	r3, [r4, #0]
 8002358:	2b2e      	cmp	r3, #46	; 0x2e
 800235a:	d10c      	bne.n	8002376 <_vfiprintf_r+0x176>
 800235c:	7863      	ldrb	r3, [r4, #1]
 800235e:	2b2a      	cmp	r3, #42	; 0x2a
 8002360:	d135      	bne.n	80023ce <_vfiprintf_r+0x1ce>
 8002362:	9b03      	ldr	r3, [sp, #12]
 8002364:	1d1a      	adds	r2, r3, #4
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	9203      	str	r2, [sp, #12]
 800236a:	2b00      	cmp	r3, #0
 800236c:	bfb8      	it	lt
 800236e:	f04f 33ff 	movlt.w	r3, #4294967295
 8002372:	3402      	adds	r4, #2
 8002374:	9305      	str	r3, [sp, #20]
 8002376:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800245c <_vfiprintf_r+0x25c>
 800237a:	7821      	ldrb	r1, [r4, #0]
 800237c:	2203      	movs	r2, #3
 800237e:	4650      	mov	r0, sl
 8002380:	f7fd fed6 	bl	8000130 <memchr>
 8002384:	b140      	cbz	r0, 8002398 <_vfiprintf_r+0x198>
 8002386:	2340      	movs	r3, #64	; 0x40
 8002388:	eba0 000a 	sub.w	r0, r0, sl
 800238c:	fa03 f000 	lsl.w	r0, r3, r0
 8002390:	9b04      	ldr	r3, [sp, #16]
 8002392:	4303      	orrs	r3, r0
 8002394:	3401      	adds	r4, #1
 8002396:	9304      	str	r3, [sp, #16]
 8002398:	f814 1b01 	ldrb.w	r1, [r4], #1
 800239c:	482c      	ldr	r0, [pc, #176]	; (8002450 <_vfiprintf_r+0x250>)
 800239e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80023a2:	2206      	movs	r2, #6
 80023a4:	f7fd fec4 	bl	8000130 <memchr>
 80023a8:	2800      	cmp	r0, #0
 80023aa:	d03f      	beq.n	800242c <_vfiprintf_r+0x22c>
 80023ac:	4b29      	ldr	r3, [pc, #164]	; (8002454 <_vfiprintf_r+0x254>)
 80023ae:	bb1b      	cbnz	r3, 80023f8 <_vfiprintf_r+0x1f8>
 80023b0:	9b03      	ldr	r3, [sp, #12]
 80023b2:	3307      	adds	r3, #7
 80023b4:	f023 0307 	bic.w	r3, r3, #7
 80023b8:	3308      	adds	r3, #8
 80023ba:	9303      	str	r3, [sp, #12]
 80023bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80023be:	443b      	add	r3, r7
 80023c0:	9309      	str	r3, [sp, #36]	; 0x24
 80023c2:	e767      	b.n	8002294 <_vfiprintf_r+0x94>
 80023c4:	fb0c 3202 	mla	r2, ip, r2, r3
 80023c8:	460c      	mov	r4, r1
 80023ca:	2001      	movs	r0, #1
 80023cc:	e7a5      	b.n	800231a <_vfiprintf_r+0x11a>
 80023ce:	2300      	movs	r3, #0
 80023d0:	3401      	adds	r4, #1
 80023d2:	9305      	str	r3, [sp, #20]
 80023d4:	4619      	mov	r1, r3
 80023d6:	f04f 0c0a 	mov.w	ip, #10
 80023da:	4620      	mov	r0, r4
 80023dc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80023e0:	3a30      	subs	r2, #48	; 0x30
 80023e2:	2a09      	cmp	r2, #9
 80023e4:	d903      	bls.n	80023ee <_vfiprintf_r+0x1ee>
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d0c5      	beq.n	8002376 <_vfiprintf_r+0x176>
 80023ea:	9105      	str	r1, [sp, #20]
 80023ec:	e7c3      	b.n	8002376 <_vfiprintf_r+0x176>
 80023ee:	fb0c 2101 	mla	r1, ip, r1, r2
 80023f2:	4604      	mov	r4, r0
 80023f4:	2301      	movs	r3, #1
 80023f6:	e7f0      	b.n	80023da <_vfiprintf_r+0x1da>
 80023f8:	ab03      	add	r3, sp, #12
 80023fa:	9300      	str	r3, [sp, #0]
 80023fc:	462a      	mov	r2, r5
 80023fe:	4b16      	ldr	r3, [pc, #88]	; (8002458 <_vfiprintf_r+0x258>)
 8002400:	a904      	add	r1, sp, #16
 8002402:	4630      	mov	r0, r6
 8002404:	f3af 8000 	nop.w
 8002408:	4607      	mov	r7, r0
 800240a:	1c78      	adds	r0, r7, #1
 800240c:	d1d6      	bne.n	80023bc <_vfiprintf_r+0x1bc>
 800240e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002410:	07d9      	lsls	r1, r3, #31
 8002412:	d405      	bmi.n	8002420 <_vfiprintf_r+0x220>
 8002414:	89ab      	ldrh	r3, [r5, #12]
 8002416:	059a      	lsls	r2, r3, #22
 8002418:	d402      	bmi.n	8002420 <_vfiprintf_r+0x220>
 800241a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800241c:	f7ff fe1f 	bl	800205e <__retarget_lock_release_recursive>
 8002420:	89ab      	ldrh	r3, [r5, #12]
 8002422:	065b      	lsls	r3, r3, #25
 8002424:	f53f af12 	bmi.w	800224c <_vfiprintf_r+0x4c>
 8002428:	9809      	ldr	r0, [sp, #36]	; 0x24
 800242a:	e711      	b.n	8002250 <_vfiprintf_r+0x50>
 800242c:	ab03      	add	r3, sp, #12
 800242e:	9300      	str	r3, [sp, #0]
 8002430:	462a      	mov	r2, r5
 8002432:	4b09      	ldr	r3, [pc, #36]	; (8002458 <_vfiprintf_r+0x258>)
 8002434:	a904      	add	r1, sp, #16
 8002436:	4630      	mov	r0, r6
 8002438:	f000 f880 	bl	800253c <_printf_i>
 800243c:	e7e4      	b.n	8002408 <_vfiprintf_r+0x208>
 800243e:	bf00      	nop
 8002440:	08002dc8 	.word	0x08002dc8
 8002444:	08002de8 	.word	0x08002de8
 8002448:	08002da8 	.word	0x08002da8
 800244c:	08002e08 	.word	0x08002e08
 8002450:	08002e12 	.word	0x08002e12
 8002454:	00000000 	.word	0x00000000
 8002458:	080021db 	.word	0x080021db
 800245c:	08002e0e 	.word	0x08002e0e

08002460 <_printf_common>:
_printf_common():
 8002460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002464:	4616      	mov	r6, r2
 8002466:	4699      	mov	r9, r3
 8002468:	688a      	ldr	r2, [r1, #8]
 800246a:	690b      	ldr	r3, [r1, #16]
 800246c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002470:	4293      	cmp	r3, r2
 8002472:	bfb8      	it	lt
 8002474:	4613      	movlt	r3, r2
 8002476:	6033      	str	r3, [r6, #0]
 8002478:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800247c:	4607      	mov	r7, r0
 800247e:	460c      	mov	r4, r1
 8002480:	b10a      	cbz	r2, 8002486 <_printf_common+0x26>
 8002482:	3301      	adds	r3, #1
 8002484:	6033      	str	r3, [r6, #0]
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	0699      	lsls	r1, r3, #26
 800248a:	bf42      	ittt	mi
 800248c:	6833      	ldrmi	r3, [r6, #0]
 800248e:	3302      	addmi	r3, #2
 8002490:	6033      	strmi	r3, [r6, #0]
 8002492:	6825      	ldr	r5, [r4, #0]
 8002494:	f015 0506 	ands.w	r5, r5, #6
 8002498:	d106      	bne.n	80024a8 <_printf_common+0x48>
 800249a:	f104 0a19 	add.w	sl, r4, #25
 800249e:	68e3      	ldr	r3, [r4, #12]
 80024a0:	6832      	ldr	r2, [r6, #0]
 80024a2:	1a9b      	subs	r3, r3, r2
 80024a4:	42ab      	cmp	r3, r5
 80024a6:	dc26      	bgt.n	80024f6 <_printf_common+0x96>
 80024a8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80024ac:	1e13      	subs	r3, r2, #0
 80024ae:	6822      	ldr	r2, [r4, #0]
 80024b0:	bf18      	it	ne
 80024b2:	2301      	movne	r3, #1
 80024b4:	0692      	lsls	r2, r2, #26
 80024b6:	d42b      	bmi.n	8002510 <_printf_common+0xb0>
 80024b8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80024bc:	4649      	mov	r1, r9
 80024be:	4638      	mov	r0, r7
 80024c0:	47c0      	blx	r8
 80024c2:	3001      	adds	r0, #1
 80024c4:	d01e      	beq.n	8002504 <_printf_common+0xa4>
 80024c6:	6823      	ldr	r3, [r4, #0]
 80024c8:	68e5      	ldr	r5, [r4, #12]
 80024ca:	6832      	ldr	r2, [r6, #0]
 80024cc:	f003 0306 	and.w	r3, r3, #6
 80024d0:	2b04      	cmp	r3, #4
 80024d2:	bf08      	it	eq
 80024d4:	1aad      	subeq	r5, r5, r2
 80024d6:	68a3      	ldr	r3, [r4, #8]
 80024d8:	6922      	ldr	r2, [r4, #16]
 80024da:	bf0c      	ite	eq
 80024dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80024e0:	2500      	movne	r5, #0
 80024e2:	4293      	cmp	r3, r2
 80024e4:	bfc4      	itt	gt
 80024e6:	1a9b      	subgt	r3, r3, r2
 80024e8:	18ed      	addgt	r5, r5, r3
 80024ea:	2600      	movs	r6, #0
 80024ec:	341a      	adds	r4, #26
 80024ee:	42b5      	cmp	r5, r6
 80024f0:	d11a      	bne.n	8002528 <_printf_common+0xc8>
 80024f2:	2000      	movs	r0, #0
 80024f4:	e008      	b.n	8002508 <_printf_common+0xa8>
 80024f6:	2301      	movs	r3, #1
 80024f8:	4652      	mov	r2, sl
 80024fa:	4649      	mov	r1, r9
 80024fc:	4638      	mov	r0, r7
 80024fe:	47c0      	blx	r8
 8002500:	3001      	adds	r0, #1
 8002502:	d103      	bne.n	800250c <_printf_common+0xac>
 8002504:	f04f 30ff 	mov.w	r0, #4294967295
 8002508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800250c:	3501      	adds	r5, #1
 800250e:	e7c6      	b.n	800249e <_printf_common+0x3e>
 8002510:	18e1      	adds	r1, r4, r3
 8002512:	1c5a      	adds	r2, r3, #1
 8002514:	2030      	movs	r0, #48	; 0x30
 8002516:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800251a:	4422      	add	r2, r4
 800251c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002520:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002524:	3302      	adds	r3, #2
 8002526:	e7c7      	b.n	80024b8 <_printf_common+0x58>
 8002528:	2301      	movs	r3, #1
 800252a:	4622      	mov	r2, r4
 800252c:	4649      	mov	r1, r9
 800252e:	4638      	mov	r0, r7
 8002530:	47c0      	blx	r8
 8002532:	3001      	adds	r0, #1
 8002534:	d0e6      	beq.n	8002504 <_printf_common+0xa4>
 8002536:	3601      	adds	r6, #1
 8002538:	e7d9      	b.n	80024ee <_printf_common+0x8e>
	...

0800253c <_printf_i>:
_printf_i():
 800253c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002540:	460c      	mov	r4, r1
 8002542:	4691      	mov	r9, r2
 8002544:	7e27      	ldrb	r7, [r4, #24]
 8002546:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002548:	2f78      	cmp	r7, #120	; 0x78
 800254a:	4680      	mov	r8, r0
 800254c:	469a      	mov	sl, r3
 800254e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002552:	d807      	bhi.n	8002564 <_printf_i+0x28>
 8002554:	2f62      	cmp	r7, #98	; 0x62
 8002556:	d80a      	bhi.n	800256e <_printf_i+0x32>
 8002558:	2f00      	cmp	r7, #0
 800255a:	f000 80d8 	beq.w	800270e <_printf_i+0x1d2>
 800255e:	2f58      	cmp	r7, #88	; 0x58
 8002560:	f000 80a3 	beq.w	80026aa <_printf_i+0x16e>
 8002564:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002568:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800256c:	e03a      	b.n	80025e4 <_printf_i+0xa8>
 800256e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002572:	2b15      	cmp	r3, #21
 8002574:	d8f6      	bhi.n	8002564 <_printf_i+0x28>
 8002576:	a001      	add	r0, pc, #4	; (adr r0, 800257c <_printf_i+0x40>)
 8002578:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800257c:	080025d5 	.word	0x080025d5
 8002580:	080025e9 	.word	0x080025e9
 8002584:	08002565 	.word	0x08002565
 8002588:	08002565 	.word	0x08002565
 800258c:	08002565 	.word	0x08002565
 8002590:	08002565 	.word	0x08002565
 8002594:	080025e9 	.word	0x080025e9
 8002598:	08002565 	.word	0x08002565
 800259c:	08002565 	.word	0x08002565
 80025a0:	08002565 	.word	0x08002565
 80025a4:	08002565 	.word	0x08002565
 80025a8:	080026f5 	.word	0x080026f5
 80025ac:	08002619 	.word	0x08002619
 80025b0:	080026d7 	.word	0x080026d7
 80025b4:	08002565 	.word	0x08002565
 80025b8:	08002565 	.word	0x08002565
 80025bc:	08002717 	.word	0x08002717
 80025c0:	08002565 	.word	0x08002565
 80025c4:	08002619 	.word	0x08002619
 80025c8:	08002565 	.word	0x08002565
 80025cc:	08002565 	.word	0x08002565
 80025d0:	080026df 	.word	0x080026df
 80025d4:	680b      	ldr	r3, [r1, #0]
 80025d6:	1d1a      	adds	r2, r3, #4
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	600a      	str	r2, [r1, #0]
 80025dc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80025e0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80025e4:	2301      	movs	r3, #1
 80025e6:	e0a3      	b.n	8002730 <_printf_i+0x1f4>
 80025e8:	6825      	ldr	r5, [r4, #0]
 80025ea:	6808      	ldr	r0, [r1, #0]
 80025ec:	062e      	lsls	r6, r5, #24
 80025ee:	f100 0304 	add.w	r3, r0, #4
 80025f2:	d50a      	bpl.n	800260a <_printf_i+0xce>
 80025f4:	6805      	ldr	r5, [r0, #0]
 80025f6:	600b      	str	r3, [r1, #0]
 80025f8:	2d00      	cmp	r5, #0
 80025fa:	da03      	bge.n	8002604 <_printf_i+0xc8>
 80025fc:	232d      	movs	r3, #45	; 0x2d
 80025fe:	426d      	negs	r5, r5
 8002600:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002604:	485e      	ldr	r0, [pc, #376]	; (8002780 <_printf_i+0x244>)
 8002606:	230a      	movs	r3, #10
 8002608:	e019      	b.n	800263e <_printf_i+0x102>
 800260a:	f015 0f40 	tst.w	r5, #64	; 0x40
 800260e:	6805      	ldr	r5, [r0, #0]
 8002610:	600b      	str	r3, [r1, #0]
 8002612:	bf18      	it	ne
 8002614:	b22d      	sxthne	r5, r5
 8002616:	e7ef      	b.n	80025f8 <_printf_i+0xbc>
 8002618:	680b      	ldr	r3, [r1, #0]
 800261a:	6825      	ldr	r5, [r4, #0]
 800261c:	1d18      	adds	r0, r3, #4
 800261e:	6008      	str	r0, [r1, #0]
 8002620:	0628      	lsls	r0, r5, #24
 8002622:	d501      	bpl.n	8002628 <_printf_i+0xec>
 8002624:	681d      	ldr	r5, [r3, #0]
 8002626:	e002      	b.n	800262e <_printf_i+0xf2>
 8002628:	0669      	lsls	r1, r5, #25
 800262a:	d5fb      	bpl.n	8002624 <_printf_i+0xe8>
 800262c:	881d      	ldrh	r5, [r3, #0]
 800262e:	4854      	ldr	r0, [pc, #336]	; (8002780 <_printf_i+0x244>)
 8002630:	2f6f      	cmp	r7, #111	; 0x6f
 8002632:	bf0c      	ite	eq
 8002634:	2308      	moveq	r3, #8
 8002636:	230a      	movne	r3, #10
 8002638:	2100      	movs	r1, #0
 800263a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800263e:	6866      	ldr	r6, [r4, #4]
 8002640:	60a6      	str	r6, [r4, #8]
 8002642:	2e00      	cmp	r6, #0
 8002644:	bfa2      	ittt	ge
 8002646:	6821      	ldrge	r1, [r4, #0]
 8002648:	f021 0104 	bicge.w	r1, r1, #4
 800264c:	6021      	strge	r1, [r4, #0]
 800264e:	b90d      	cbnz	r5, 8002654 <_printf_i+0x118>
 8002650:	2e00      	cmp	r6, #0
 8002652:	d04d      	beq.n	80026f0 <_printf_i+0x1b4>
 8002654:	4616      	mov	r6, r2
 8002656:	fbb5 f1f3 	udiv	r1, r5, r3
 800265a:	fb03 5711 	mls	r7, r3, r1, r5
 800265e:	5dc7      	ldrb	r7, [r0, r7]
 8002660:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002664:	462f      	mov	r7, r5
 8002666:	42bb      	cmp	r3, r7
 8002668:	460d      	mov	r5, r1
 800266a:	d9f4      	bls.n	8002656 <_printf_i+0x11a>
 800266c:	2b08      	cmp	r3, #8
 800266e:	d10b      	bne.n	8002688 <_printf_i+0x14c>
 8002670:	6823      	ldr	r3, [r4, #0]
 8002672:	07df      	lsls	r7, r3, #31
 8002674:	d508      	bpl.n	8002688 <_printf_i+0x14c>
 8002676:	6923      	ldr	r3, [r4, #16]
 8002678:	6861      	ldr	r1, [r4, #4]
 800267a:	4299      	cmp	r1, r3
 800267c:	bfde      	ittt	le
 800267e:	2330      	movle	r3, #48	; 0x30
 8002680:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002684:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002688:	1b92      	subs	r2, r2, r6
 800268a:	6122      	str	r2, [r4, #16]
 800268c:	f8cd a000 	str.w	sl, [sp]
 8002690:	464b      	mov	r3, r9
 8002692:	aa03      	add	r2, sp, #12
 8002694:	4621      	mov	r1, r4
 8002696:	4640      	mov	r0, r8
 8002698:	f7ff fee2 	bl	8002460 <_printf_common>
 800269c:	3001      	adds	r0, #1
 800269e:	d14c      	bne.n	800273a <_printf_i+0x1fe>
 80026a0:	f04f 30ff 	mov.w	r0, #4294967295
 80026a4:	b004      	add	sp, #16
 80026a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80026aa:	4835      	ldr	r0, [pc, #212]	; (8002780 <_printf_i+0x244>)
 80026ac:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80026b0:	6823      	ldr	r3, [r4, #0]
 80026b2:	680e      	ldr	r6, [r1, #0]
 80026b4:	061f      	lsls	r7, r3, #24
 80026b6:	f856 5b04 	ldr.w	r5, [r6], #4
 80026ba:	600e      	str	r6, [r1, #0]
 80026bc:	d514      	bpl.n	80026e8 <_printf_i+0x1ac>
 80026be:	07d9      	lsls	r1, r3, #31
 80026c0:	bf44      	itt	mi
 80026c2:	f043 0320 	orrmi.w	r3, r3, #32
 80026c6:	6023      	strmi	r3, [r4, #0]
 80026c8:	b91d      	cbnz	r5, 80026d2 <_printf_i+0x196>
 80026ca:	6823      	ldr	r3, [r4, #0]
 80026cc:	f023 0320 	bic.w	r3, r3, #32
 80026d0:	6023      	str	r3, [r4, #0]
 80026d2:	2310      	movs	r3, #16
 80026d4:	e7b0      	b.n	8002638 <_printf_i+0xfc>
 80026d6:	6823      	ldr	r3, [r4, #0]
 80026d8:	f043 0320 	orr.w	r3, r3, #32
 80026dc:	6023      	str	r3, [r4, #0]
 80026de:	2378      	movs	r3, #120	; 0x78
 80026e0:	4828      	ldr	r0, [pc, #160]	; (8002784 <_printf_i+0x248>)
 80026e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80026e6:	e7e3      	b.n	80026b0 <_printf_i+0x174>
 80026e8:	065e      	lsls	r6, r3, #25
 80026ea:	bf48      	it	mi
 80026ec:	b2ad      	uxthmi	r5, r5
 80026ee:	e7e6      	b.n	80026be <_printf_i+0x182>
 80026f0:	4616      	mov	r6, r2
 80026f2:	e7bb      	b.n	800266c <_printf_i+0x130>
 80026f4:	680b      	ldr	r3, [r1, #0]
 80026f6:	6826      	ldr	r6, [r4, #0]
 80026f8:	6960      	ldr	r0, [r4, #20]
 80026fa:	1d1d      	adds	r5, r3, #4
 80026fc:	600d      	str	r5, [r1, #0]
 80026fe:	0635      	lsls	r5, r6, #24
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	d501      	bpl.n	8002708 <_printf_i+0x1cc>
 8002704:	6018      	str	r0, [r3, #0]
 8002706:	e002      	b.n	800270e <_printf_i+0x1d2>
 8002708:	0671      	lsls	r1, r6, #25
 800270a:	d5fb      	bpl.n	8002704 <_printf_i+0x1c8>
 800270c:	8018      	strh	r0, [r3, #0]
 800270e:	2300      	movs	r3, #0
 8002710:	6123      	str	r3, [r4, #16]
 8002712:	4616      	mov	r6, r2
 8002714:	e7ba      	b.n	800268c <_printf_i+0x150>
 8002716:	680b      	ldr	r3, [r1, #0]
 8002718:	1d1a      	adds	r2, r3, #4
 800271a:	600a      	str	r2, [r1, #0]
 800271c:	681e      	ldr	r6, [r3, #0]
 800271e:	6862      	ldr	r2, [r4, #4]
 8002720:	2100      	movs	r1, #0
 8002722:	4630      	mov	r0, r6
 8002724:	f7fd fd04 	bl	8000130 <memchr>
 8002728:	b108      	cbz	r0, 800272e <_printf_i+0x1f2>
 800272a:	1b80      	subs	r0, r0, r6
 800272c:	6060      	str	r0, [r4, #4]
 800272e:	6863      	ldr	r3, [r4, #4]
 8002730:	6123      	str	r3, [r4, #16]
 8002732:	2300      	movs	r3, #0
 8002734:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002738:	e7a8      	b.n	800268c <_printf_i+0x150>
 800273a:	6923      	ldr	r3, [r4, #16]
 800273c:	4632      	mov	r2, r6
 800273e:	4649      	mov	r1, r9
 8002740:	4640      	mov	r0, r8
 8002742:	47d0      	blx	sl
 8002744:	3001      	adds	r0, #1
 8002746:	d0ab      	beq.n	80026a0 <_printf_i+0x164>
 8002748:	6823      	ldr	r3, [r4, #0]
 800274a:	079b      	lsls	r3, r3, #30
 800274c:	d413      	bmi.n	8002776 <_printf_i+0x23a>
 800274e:	68e0      	ldr	r0, [r4, #12]
 8002750:	9b03      	ldr	r3, [sp, #12]
 8002752:	4298      	cmp	r0, r3
 8002754:	bfb8      	it	lt
 8002756:	4618      	movlt	r0, r3
 8002758:	e7a4      	b.n	80026a4 <_printf_i+0x168>
 800275a:	2301      	movs	r3, #1
 800275c:	4632      	mov	r2, r6
 800275e:	4649      	mov	r1, r9
 8002760:	4640      	mov	r0, r8
 8002762:	47d0      	blx	sl
 8002764:	3001      	adds	r0, #1
 8002766:	d09b      	beq.n	80026a0 <_printf_i+0x164>
 8002768:	3501      	adds	r5, #1
 800276a:	68e3      	ldr	r3, [r4, #12]
 800276c:	9903      	ldr	r1, [sp, #12]
 800276e:	1a5b      	subs	r3, r3, r1
 8002770:	42ab      	cmp	r3, r5
 8002772:	dcf2      	bgt.n	800275a <_printf_i+0x21e>
 8002774:	e7eb      	b.n	800274e <_printf_i+0x212>
 8002776:	2500      	movs	r5, #0
 8002778:	f104 0619 	add.w	r6, r4, #25
 800277c:	e7f5      	b.n	800276a <_printf_i+0x22e>
 800277e:	bf00      	nop
 8002780:	08002e19 	.word	0x08002e19
 8002784:	08002e2a 	.word	0x08002e2a

08002788 <_sbrk_r>:
_sbrk_r():
 8002788:	b538      	push	{r3, r4, r5, lr}
 800278a:	4d06      	ldr	r5, [pc, #24]	; (80027a4 <_sbrk_r+0x1c>)
 800278c:	2300      	movs	r3, #0
 800278e:	4604      	mov	r4, r0
 8002790:	4608      	mov	r0, r1
 8002792:	602b      	str	r3, [r5, #0]
 8002794:	f7ff f91a 	bl	80019cc <_sbrk>
 8002798:	1c43      	adds	r3, r0, #1
 800279a:	d102      	bne.n	80027a2 <_sbrk_r+0x1a>
 800279c:	682b      	ldr	r3, [r5, #0]
 800279e:	b103      	cbz	r3, 80027a2 <_sbrk_r+0x1a>
 80027a0:	6023      	str	r3, [r4, #0]
 80027a2:	bd38      	pop	{r3, r4, r5, pc}
 80027a4:	2000012c 	.word	0x2000012c

080027a8 <__sread>:
__sread():
 80027a8:	b510      	push	{r4, lr}
 80027aa:	460c      	mov	r4, r1
 80027ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80027b0:	f000 fa64 	bl	8002c7c <_read_r>
 80027b4:	2800      	cmp	r0, #0
 80027b6:	bfab      	itete	ge
 80027b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80027ba:	89a3      	ldrhlt	r3, [r4, #12]
 80027bc:	181b      	addge	r3, r3, r0
 80027be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80027c2:	bfac      	ite	ge
 80027c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80027c6:	81a3      	strhlt	r3, [r4, #12]
 80027c8:	bd10      	pop	{r4, pc}

080027ca <__swrite>:
__swrite():
 80027ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80027ce:	461f      	mov	r7, r3
 80027d0:	898b      	ldrh	r3, [r1, #12]
 80027d2:	05db      	lsls	r3, r3, #23
 80027d4:	4605      	mov	r5, r0
 80027d6:	460c      	mov	r4, r1
 80027d8:	4616      	mov	r6, r2
 80027da:	d505      	bpl.n	80027e8 <__swrite+0x1e>
 80027dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80027e0:	2302      	movs	r3, #2
 80027e2:	2200      	movs	r2, #0
 80027e4:	f000 f9c8 	bl	8002b78 <_lseek_r>
 80027e8:	89a3      	ldrh	r3, [r4, #12]
 80027ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80027ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80027f2:	81a3      	strh	r3, [r4, #12]
 80027f4:	4632      	mov	r2, r6
 80027f6:	463b      	mov	r3, r7
 80027f8:	4628      	mov	r0, r5
 80027fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80027fe:	f000 b869 	b.w	80028d4 <_write_r>

08002802 <__sseek>:
__sseek():
 8002802:	b510      	push	{r4, lr}
 8002804:	460c      	mov	r4, r1
 8002806:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800280a:	f000 f9b5 	bl	8002b78 <_lseek_r>
 800280e:	1c43      	adds	r3, r0, #1
 8002810:	89a3      	ldrh	r3, [r4, #12]
 8002812:	bf15      	itete	ne
 8002814:	6560      	strne	r0, [r4, #84]	; 0x54
 8002816:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800281a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800281e:	81a3      	strheq	r3, [r4, #12]
 8002820:	bf18      	it	ne
 8002822:	81a3      	strhne	r3, [r4, #12]
 8002824:	bd10      	pop	{r4, pc}

08002826 <__sclose>:
__sclose():
 8002826:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800282a:	f000 b8d3 	b.w	80029d4 <_close_r>
	...

08002830 <__swbuf_r>:
__swbuf_r():
 8002830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002832:	460e      	mov	r6, r1
 8002834:	4614      	mov	r4, r2
 8002836:	4605      	mov	r5, r0
 8002838:	b118      	cbz	r0, 8002842 <__swbuf_r+0x12>
 800283a:	6983      	ldr	r3, [r0, #24]
 800283c:	b90b      	cbnz	r3, 8002842 <__swbuf_r+0x12>
 800283e:	f7ff fb6f 	bl	8001f20 <__sinit>
 8002842:	4b21      	ldr	r3, [pc, #132]	; (80028c8 <__swbuf_r+0x98>)
 8002844:	429c      	cmp	r4, r3
 8002846:	d12b      	bne.n	80028a0 <__swbuf_r+0x70>
 8002848:	686c      	ldr	r4, [r5, #4]
 800284a:	69a3      	ldr	r3, [r4, #24]
 800284c:	60a3      	str	r3, [r4, #8]
 800284e:	89a3      	ldrh	r3, [r4, #12]
 8002850:	071a      	lsls	r2, r3, #28
 8002852:	d52f      	bpl.n	80028b4 <__swbuf_r+0x84>
 8002854:	6923      	ldr	r3, [r4, #16]
 8002856:	b36b      	cbz	r3, 80028b4 <__swbuf_r+0x84>
 8002858:	6923      	ldr	r3, [r4, #16]
 800285a:	6820      	ldr	r0, [r4, #0]
 800285c:	1ac0      	subs	r0, r0, r3
 800285e:	6963      	ldr	r3, [r4, #20]
 8002860:	b2f6      	uxtb	r6, r6
 8002862:	4283      	cmp	r3, r0
 8002864:	4637      	mov	r7, r6
 8002866:	dc04      	bgt.n	8002872 <__swbuf_r+0x42>
 8002868:	4621      	mov	r1, r4
 800286a:	4628      	mov	r0, r5
 800286c:	f000 f948 	bl	8002b00 <_fflush_r>
 8002870:	bb30      	cbnz	r0, 80028c0 <__swbuf_r+0x90>
 8002872:	68a3      	ldr	r3, [r4, #8]
 8002874:	3b01      	subs	r3, #1
 8002876:	60a3      	str	r3, [r4, #8]
 8002878:	6823      	ldr	r3, [r4, #0]
 800287a:	1c5a      	adds	r2, r3, #1
 800287c:	6022      	str	r2, [r4, #0]
 800287e:	701e      	strb	r6, [r3, #0]
 8002880:	6963      	ldr	r3, [r4, #20]
 8002882:	3001      	adds	r0, #1
 8002884:	4283      	cmp	r3, r0
 8002886:	d004      	beq.n	8002892 <__swbuf_r+0x62>
 8002888:	89a3      	ldrh	r3, [r4, #12]
 800288a:	07db      	lsls	r3, r3, #31
 800288c:	d506      	bpl.n	800289c <__swbuf_r+0x6c>
 800288e:	2e0a      	cmp	r6, #10
 8002890:	d104      	bne.n	800289c <__swbuf_r+0x6c>
 8002892:	4621      	mov	r1, r4
 8002894:	4628      	mov	r0, r5
 8002896:	f000 f933 	bl	8002b00 <_fflush_r>
 800289a:	b988      	cbnz	r0, 80028c0 <__swbuf_r+0x90>
 800289c:	4638      	mov	r0, r7
 800289e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028a0:	4b0a      	ldr	r3, [pc, #40]	; (80028cc <__swbuf_r+0x9c>)
 80028a2:	429c      	cmp	r4, r3
 80028a4:	d101      	bne.n	80028aa <__swbuf_r+0x7a>
 80028a6:	68ac      	ldr	r4, [r5, #8]
 80028a8:	e7cf      	b.n	800284a <__swbuf_r+0x1a>
 80028aa:	4b09      	ldr	r3, [pc, #36]	; (80028d0 <__swbuf_r+0xa0>)
 80028ac:	429c      	cmp	r4, r3
 80028ae:	bf08      	it	eq
 80028b0:	68ec      	ldreq	r4, [r5, #12]
 80028b2:	e7ca      	b.n	800284a <__swbuf_r+0x1a>
 80028b4:	4621      	mov	r1, r4
 80028b6:	4628      	mov	r0, r5
 80028b8:	f000 f81e 	bl	80028f8 <__swsetup_r>
 80028bc:	2800      	cmp	r0, #0
 80028be:	d0cb      	beq.n	8002858 <__swbuf_r+0x28>
 80028c0:	f04f 37ff 	mov.w	r7, #4294967295
 80028c4:	e7ea      	b.n	800289c <__swbuf_r+0x6c>
 80028c6:	bf00      	nop
 80028c8:	08002dc8 	.word	0x08002dc8
 80028cc:	08002de8 	.word	0x08002de8
 80028d0:	08002da8 	.word	0x08002da8

080028d4 <_write_r>:
_write_r():
 80028d4:	b538      	push	{r3, r4, r5, lr}
 80028d6:	4d07      	ldr	r5, [pc, #28]	; (80028f4 <_write_r+0x20>)
 80028d8:	4604      	mov	r4, r0
 80028da:	4608      	mov	r0, r1
 80028dc:	4611      	mov	r1, r2
 80028de:	2200      	movs	r2, #0
 80028e0:	602a      	str	r2, [r5, #0]
 80028e2:	461a      	mov	r2, r3
 80028e4:	f7ff f89e 	bl	8001a24 <_write>
 80028e8:	1c43      	adds	r3, r0, #1
 80028ea:	d102      	bne.n	80028f2 <_write_r+0x1e>
 80028ec:	682b      	ldr	r3, [r5, #0]
 80028ee:	b103      	cbz	r3, 80028f2 <_write_r+0x1e>
 80028f0:	6023      	str	r3, [r4, #0]
 80028f2:	bd38      	pop	{r3, r4, r5, pc}
 80028f4:	2000012c 	.word	0x2000012c

080028f8 <__swsetup_r>:
__swsetup_r():
 80028f8:	4b32      	ldr	r3, [pc, #200]	; (80029c4 <__swsetup_r+0xcc>)
 80028fa:	b570      	push	{r4, r5, r6, lr}
 80028fc:	681d      	ldr	r5, [r3, #0]
 80028fe:	4606      	mov	r6, r0
 8002900:	460c      	mov	r4, r1
 8002902:	b125      	cbz	r5, 800290e <__swsetup_r+0x16>
 8002904:	69ab      	ldr	r3, [r5, #24]
 8002906:	b913      	cbnz	r3, 800290e <__swsetup_r+0x16>
 8002908:	4628      	mov	r0, r5
 800290a:	f7ff fb09 	bl	8001f20 <__sinit>
 800290e:	4b2e      	ldr	r3, [pc, #184]	; (80029c8 <__swsetup_r+0xd0>)
 8002910:	429c      	cmp	r4, r3
 8002912:	d10f      	bne.n	8002934 <__swsetup_r+0x3c>
 8002914:	686c      	ldr	r4, [r5, #4]
 8002916:	89a3      	ldrh	r3, [r4, #12]
 8002918:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800291c:	0719      	lsls	r1, r3, #28
 800291e:	d42c      	bmi.n	800297a <__swsetup_r+0x82>
 8002920:	06dd      	lsls	r5, r3, #27
 8002922:	d411      	bmi.n	8002948 <__swsetup_r+0x50>
 8002924:	2309      	movs	r3, #9
 8002926:	6033      	str	r3, [r6, #0]
 8002928:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800292c:	81a3      	strh	r3, [r4, #12]
 800292e:	f04f 30ff 	mov.w	r0, #4294967295
 8002932:	e03e      	b.n	80029b2 <__swsetup_r+0xba>
 8002934:	4b25      	ldr	r3, [pc, #148]	; (80029cc <__swsetup_r+0xd4>)
 8002936:	429c      	cmp	r4, r3
 8002938:	d101      	bne.n	800293e <__swsetup_r+0x46>
 800293a:	68ac      	ldr	r4, [r5, #8]
 800293c:	e7eb      	b.n	8002916 <__swsetup_r+0x1e>
 800293e:	4b24      	ldr	r3, [pc, #144]	; (80029d0 <__swsetup_r+0xd8>)
 8002940:	429c      	cmp	r4, r3
 8002942:	bf08      	it	eq
 8002944:	68ec      	ldreq	r4, [r5, #12]
 8002946:	e7e6      	b.n	8002916 <__swsetup_r+0x1e>
 8002948:	0758      	lsls	r0, r3, #29
 800294a:	d512      	bpl.n	8002972 <__swsetup_r+0x7a>
 800294c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800294e:	b141      	cbz	r1, 8002962 <__swsetup_r+0x6a>
 8002950:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002954:	4299      	cmp	r1, r3
 8002956:	d002      	beq.n	800295e <__swsetup_r+0x66>
 8002958:	4630      	mov	r0, r6
 800295a:	f7ff fb81 	bl	8002060 <_free_r>
 800295e:	2300      	movs	r3, #0
 8002960:	6363      	str	r3, [r4, #52]	; 0x34
 8002962:	89a3      	ldrh	r3, [r4, #12]
 8002964:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002968:	81a3      	strh	r3, [r4, #12]
 800296a:	2300      	movs	r3, #0
 800296c:	6063      	str	r3, [r4, #4]
 800296e:	6923      	ldr	r3, [r4, #16]
 8002970:	6023      	str	r3, [r4, #0]
 8002972:	89a3      	ldrh	r3, [r4, #12]
 8002974:	f043 0308 	orr.w	r3, r3, #8
 8002978:	81a3      	strh	r3, [r4, #12]
 800297a:	6923      	ldr	r3, [r4, #16]
 800297c:	b94b      	cbnz	r3, 8002992 <__swsetup_r+0x9a>
 800297e:	89a3      	ldrh	r3, [r4, #12]
 8002980:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002984:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002988:	d003      	beq.n	8002992 <__swsetup_r+0x9a>
 800298a:	4621      	mov	r1, r4
 800298c:	4630      	mov	r0, r6
 800298e:	f000 f929 	bl	8002be4 <__smakebuf_r>
 8002992:	89a0      	ldrh	r0, [r4, #12]
 8002994:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002998:	f010 0301 	ands.w	r3, r0, #1
 800299c:	d00a      	beq.n	80029b4 <__swsetup_r+0xbc>
 800299e:	2300      	movs	r3, #0
 80029a0:	60a3      	str	r3, [r4, #8]
 80029a2:	6963      	ldr	r3, [r4, #20]
 80029a4:	425b      	negs	r3, r3
 80029a6:	61a3      	str	r3, [r4, #24]
 80029a8:	6923      	ldr	r3, [r4, #16]
 80029aa:	b943      	cbnz	r3, 80029be <__swsetup_r+0xc6>
 80029ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80029b0:	d1ba      	bne.n	8002928 <__swsetup_r+0x30>
 80029b2:	bd70      	pop	{r4, r5, r6, pc}
 80029b4:	0781      	lsls	r1, r0, #30
 80029b6:	bf58      	it	pl
 80029b8:	6963      	ldrpl	r3, [r4, #20]
 80029ba:	60a3      	str	r3, [r4, #8]
 80029bc:	e7f4      	b.n	80029a8 <__swsetup_r+0xb0>
 80029be:	2000      	movs	r0, #0
 80029c0:	e7f7      	b.n	80029b2 <__swsetup_r+0xba>
 80029c2:	bf00      	nop
 80029c4:	20000088 	.word	0x20000088
 80029c8:	08002dc8 	.word	0x08002dc8
 80029cc:	08002de8 	.word	0x08002de8
 80029d0:	08002da8 	.word	0x08002da8

080029d4 <_close_r>:
_close_r():
 80029d4:	b538      	push	{r3, r4, r5, lr}
 80029d6:	4d06      	ldr	r5, [pc, #24]	; (80029f0 <_close_r+0x1c>)
 80029d8:	2300      	movs	r3, #0
 80029da:	4604      	mov	r4, r0
 80029dc:	4608      	mov	r0, r1
 80029de:	602b      	str	r3, [r5, #0]
 80029e0:	f7ff f83d 	bl	8001a5e <_close>
 80029e4:	1c43      	adds	r3, r0, #1
 80029e6:	d102      	bne.n	80029ee <_close_r+0x1a>
 80029e8:	682b      	ldr	r3, [r5, #0]
 80029ea:	b103      	cbz	r3, 80029ee <_close_r+0x1a>
 80029ec:	6023      	str	r3, [r4, #0]
 80029ee:	bd38      	pop	{r3, r4, r5, pc}
 80029f0:	2000012c 	.word	0x2000012c

080029f4 <__sflush_r>:
__sflush_r():
 80029f4:	898a      	ldrh	r2, [r1, #12]
 80029f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029fa:	4605      	mov	r5, r0
 80029fc:	0710      	lsls	r0, r2, #28
 80029fe:	460c      	mov	r4, r1
 8002a00:	d458      	bmi.n	8002ab4 <__sflush_r+0xc0>
 8002a02:	684b      	ldr	r3, [r1, #4]
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	dc05      	bgt.n	8002a14 <__sflush_r+0x20>
 8002a08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	dc02      	bgt.n	8002a14 <__sflush_r+0x20>
 8002a0e:	2000      	movs	r0, #0
 8002a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002a14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002a16:	2e00      	cmp	r6, #0
 8002a18:	d0f9      	beq.n	8002a0e <__sflush_r+0x1a>
 8002a1a:	2300      	movs	r3, #0
 8002a1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8002a20:	682f      	ldr	r7, [r5, #0]
 8002a22:	602b      	str	r3, [r5, #0]
 8002a24:	d032      	beq.n	8002a8c <__sflush_r+0x98>
 8002a26:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002a28:	89a3      	ldrh	r3, [r4, #12]
 8002a2a:	075a      	lsls	r2, r3, #29
 8002a2c:	d505      	bpl.n	8002a3a <__sflush_r+0x46>
 8002a2e:	6863      	ldr	r3, [r4, #4]
 8002a30:	1ac0      	subs	r0, r0, r3
 8002a32:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002a34:	b10b      	cbz	r3, 8002a3a <__sflush_r+0x46>
 8002a36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002a38:	1ac0      	subs	r0, r0, r3
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	4602      	mov	r2, r0
 8002a3e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002a40:	6a21      	ldr	r1, [r4, #32]
 8002a42:	4628      	mov	r0, r5
 8002a44:	47b0      	blx	r6
 8002a46:	1c43      	adds	r3, r0, #1
 8002a48:	89a3      	ldrh	r3, [r4, #12]
 8002a4a:	d106      	bne.n	8002a5a <__sflush_r+0x66>
 8002a4c:	6829      	ldr	r1, [r5, #0]
 8002a4e:	291d      	cmp	r1, #29
 8002a50:	d82c      	bhi.n	8002aac <__sflush_r+0xb8>
 8002a52:	4a2a      	ldr	r2, [pc, #168]	; (8002afc <__sflush_r+0x108>)
 8002a54:	40ca      	lsrs	r2, r1
 8002a56:	07d6      	lsls	r6, r2, #31
 8002a58:	d528      	bpl.n	8002aac <__sflush_r+0xb8>
 8002a5a:	2200      	movs	r2, #0
 8002a5c:	6062      	str	r2, [r4, #4]
 8002a5e:	04d9      	lsls	r1, r3, #19
 8002a60:	6922      	ldr	r2, [r4, #16]
 8002a62:	6022      	str	r2, [r4, #0]
 8002a64:	d504      	bpl.n	8002a70 <__sflush_r+0x7c>
 8002a66:	1c42      	adds	r2, r0, #1
 8002a68:	d101      	bne.n	8002a6e <__sflush_r+0x7a>
 8002a6a:	682b      	ldr	r3, [r5, #0]
 8002a6c:	b903      	cbnz	r3, 8002a70 <__sflush_r+0x7c>
 8002a6e:	6560      	str	r0, [r4, #84]	; 0x54
 8002a70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002a72:	602f      	str	r7, [r5, #0]
 8002a74:	2900      	cmp	r1, #0
 8002a76:	d0ca      	beq.n	8002a0e <__sflush_r+0x1a>
 8002a78:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002a7c:	4299      	cmp	r1, r3
 8002a7e:	d002      	beq.n	8002a86 <__sflush_r+0x92>
 8002a80:	4628      	mov	r0, r5
 8002a82:	f7ff faed 	bl	8002060 <_free_r>
 8002a86:	2000      	movs	r0, #0
 8002a88:	6360      	str	r0, [r4, #52]	; 0x34
 8002a8a:	e7c1      	b.n	8002a10 <__sflush_r+0x1c>
 8002a8c:	6a21      	ldr	r1, [r4, #32]
 8002a8e:	2301      	movs	r3, #1
 8002a90:	4628      	mov	r0, r5
 8002a92:	47b0      	blx	r6
 8002a94:	1c41      	adds	r1, r0, #1
 8002a96:	d1c7      	bne.n	8002a28 <__sflush_r+0x34>
 8002a98:	682b      	ldr	r3, [r5, #0]
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d0c4      	beq.n	8002a28 <__sflush_r+0x34>
 8002a9e:	2b1d      	cmp	r3, #29
 8002aa0:	d001      	beq.n	8002aa6 <__sflush_r+0xb2>
 8002aa2:	2b16      	cmp	r3, #22
 8002aa4:	d101      	bne.n	8002aaa <__sflush_r+0xb6>
 8002aa6:	602f      	str	r7, [r5, #0]
 8002aa8:	e7b1      	b.n	8002a0e <__sflush_r+0x1a>
 8002aaa:	89a3      	ldrh	r3, [r4, #12]
 8002aac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002ab0:	81a3      	strh	r3, [r4, #12]
 8002ab2:	e7ad      	b.n	8002a10 <__sflush_r+0x1c>
 8002ab4:	690f      	ldr	r7, [r1, #16]
 8002ab6:	2f00      	cmp	r7, #0
 8002ab8:	d0a9      	beq.n	8002a0e <__sflush_r+0x1a>
 8002aba:	0793      	lsls	r3, r2, #30
 8002abc:	680e      	ldr	r6, [r1, #0]
 8002abe:	bf08      	it	eq
 8002ac0:	694b      	ldreq	r3, [r1, #20]
 8002ac2:	600f      	str	r7, [r1, #0]
 8002ac4:	bf18      	it	ne
 8002ac6:	2300      	movne	r3, #0
 8002ac8:	eba6 0807 	sub.w	r8, r6, r7
 8002acc:	608b      	str	r3, [r1, #8]
 8002ace:	f1b8 0f00 	cmp.w	r8, #0
 8002ad2:	dd9c      	ble.n	8002a0e <__sflush_r+0x1a>
 8002ad4:	6a21      	ldr	r1, [r4, #32]
 8002ad6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8002ad8:	4643      	mov	r3, r8
 8002ada:	463a      	mov	r2, r7
 8002adc:	4628      	mov	r0, r5
 8002ade:	47b0      	blx	r6
 8002ae0:	2800      	cmp	r0, #0
 8002ae2:	dc06      	bgt.n	8002af2 <__sflush_r+0xfe>
 8002ae4:	89a3      	ldrh	r3, [r4, #12]
 8002ae6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002aea:	81a3      	strh	r3, [r4, #12]
 8002aec:	f04f 30ff 	mov.w	r0, #4294967295
 8002af0:	e78e      	b.n	8002a10 <__sflush_r+0x1c>
 8002af2:	4407      	add	r7, r0
 8002af4:	eba8 0800 	sub.w	r8, r8, r0
 8002af8:	e7e9      	b.n	8002ace <__sflush_r+0xda>
 8002afa:	bf00      	nop
 8002afc:	20400001 	.word	0x20400001

08002b00 <_fflush_r>:
_fflush_r():
 8002b00:	b538      	push	{r3, r4, r5, lr}
 8002b02:	690b      	ldr	r3, [r1, #16]
 8002b04:	4605      	mov	r5, r0
 8002b06:	460c      	mov	r4, r1
 8002b08:	b913      	cbnz	r3, 8002b10 <_fflush_r+0x10>
 8002b0a:	2500      	movs	r5, #0
 8002b0c:	4628      	mov	r0, r5
 8002b0e:	bd38      	pop	{r3, r4, r5, pc}
 8002b10:	b118      	cbz	r0, 8002b1a <_fflush_r+0x1a>
 8002b12:	6983      	ldr	r3, [r0, #24]
 8002b14:	b90b      	cbnz	r3, 8002b1a <_fflush_r+0x1a>
 8002b16:	f7ff fa03 	bl	8001f20 <__sinit>
 8002b1a:	4b14      	ldr	r3, [pc, #80]	; (8002b6c <_fflush_r+0x6c>)
 8002b1c:	429c      	cmp	r4, r3
 8002b1e:	d11b      	bne.n	8002b58 <_fflush_r+0x58>
 8002b20:	686c      	ldr	r4, [r5, #4]
 8002b22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d0ef      	beq.n	8002b0a <_fflush_r+0xa>
 8002b2a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002b2c:	07d0      	lsls	r0, r2, #31
 8002b2e:	d404      	bmi.n	8002b3a <_fflush_r+0x3a>
 8002b30:	0599      	lsls	r1, r3, #22
 8002b32:	d402      	bmi.n	8002b3a <_fflush_r+0x3a>
 8002b34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002b36:	f7ff fa91 	bl	800205c <__retarget_lock_acquire_recursive>
 8002b3a:	4628      	mov	r0, r5
 8002b3c:	4621      	mov	r1, r4
 8002b3e:	f7ff ff59 	bl	80029f4 <__sflush_r>
 8002b42:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002b44:	07da      	lsls	r2, r3, #31
 8002b46:	4605      	mov	r5, r0
 8002b48:	d4e0      	bmi.n	8002b0c <_fflush_r+0xc>
 8002b4a:	89a3      	ldrh	r3, [r4, #12]
 8002b4c:	059b      	lsls	r3, r3, #22
 8002b4e:	d4dd      	bmi.n	8002b0c <_fflush_r+0xc>
 8002b50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002b52:	f7ff fa84 	bl	800205e <__retarget_lock_release_recursive>
 8002b56:	e7d9      	b.n	8002b0c <_fflush_r+0xc>
 8002b58:	4b05      	ldr	r3, [pc, #20]	; (8002b70 <_fflush_r+0x70>)
 8002b5a:	429c      	cmp	r4, r3
 8002b5c:	d101      	bne.n	8002b62 <_fflush_r+0x62>
 8002b5e:	68ac      	ldr	r4, [r5, #8]
 8002b60:	e7df      	b.n	8002b22 <_fflush_r+0x22>
 8002b62:	4b04      	ldr	r3, [pc, #16]	; (8002b74 <_fflush_r+0x74>)
 8002b64:	429c      	cmp	r4, r3
 8002b66:	bf08      	it	eq
 8002b68:	68ec      	ldreq	r4, [r5, #12]
 8002b6a:	e7da      	b.n	8002b22 <_fflush_r+0x22>
 8002b6c:	08002dc8 	.word	0x08002dc8
 8002b70:	08002de8 	.word	0x08002de8
 8002b74:	08002da8 	.word	0x08002da8

08002b78 <_lseek_r>:
_lseek_r():
 8002b78:	b538      	push	{r3, r4, r5, lr}
 8002b7a:	4d07      	ldr	r5, [pc, #28]	; (8002b98 <_lseek_r+0x20>)
 8002b7c:	4604      	mov	r4, r0
 8002b7e:	4608      	mov	r0, r1
 8002b80:	4611      	mov	r1, r2
 8002b82:	2200      	movs	r2, #0
 8002b84:	602a      	str	r2, [r5, #0]
 8002b86:	461a      	mov	r2, r3
 8002b88:	f7fe ff8d 	bl	8001aa6 <_lseek>
 8002b8c:	1c43      	adds	r3, r0, #1
 8002b8e:	d102      	bne.n	8002b96 <_lseek_r+0x1e>
 8002b90:	682b      	ldr	r3, [r5, #0]
 8002b92:	b103      	cbz	r3, 8002b96 <_lseek_r+0x1e>
 8002b94:	6023      	str	r3, [r4, #0]
 8002b96:	bd38      	pop	{r3, r4, r5, pc}
 8002b98:	2000012c 	.word	0x2000012c

08002b9c <__swhatbuf_r>:
__swhatbuf_r():
 8002b9c:	b570      	push	{r4, r5, r6, lr}
 8002b9e:	460e      	mov	r6, r1
 8002ba0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002ba4:	2900      	cmp	r1, #0
 8002ba6:	b096      	sub	sp, #88	; 0x58
 8002ba8:	4614      	mov	r4, r2
 8002baa:	461d      	mov	r5, r3
 8002bac:	da07      	bge.n	8002bbe <__swhatbuf_r+0x22>
 8002bae:	2300      	movs	r3, #0
 8002bb0:	602b      	str	r3, [r5, #0]
 8002bb2:	89b3      	ldrh	r3, [r6, #12]
 8002bb4:	061a      	lsls	r2, r3, #24
 8002bb6:	d410      	bmi.n	8002bda <__swhatbuf_r+0x3e>
 8002bb8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002bbc:	e00e      	b.n	8002bdc <__swhatbuf_r+0x40>
 8002bbe:	466a      	mov	r2, sp
 8002bc0:	f000 f86e 	bl	8002ca0 <_fstat_r>
 8002bc4:	2800      	cmp	r0, #0
 8002bc6:	dbf2      	blt.n	8002bae <__swhatbuf_r+0x12>
 8002bc8:	9a01      	ldr	r2, [sp, #4]
 8002bca:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8002bce:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8002bd2:	425a      	negs	r2, r3
 8002bd4:	415a      	adcs	r2, r3
 8002bd6:	602a      	str	r2, [r5, #0]
 8002bd8:	e7ee      	b.n	8002bb8 <__swhatbuf_r+0x1c>
 8002bda:	2340      	movs	r3, #64	; 0x40
 8002bdc:	2000      	movs	r0, #0
 8002bde:	6023      	str	r3, [r4, #0]
 8002be0:	b016      	add	sp, #88	; 0x58
 8002be2:	bd70      	pop	{r4, r5, r6, pc}

08002be4 <__smakebuf_r>:
__smakebuf_r():
 8002be4:	898b      	ldrh	r3, [r1, #12]
 8002be6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002be8:	079d      	lsls	r5, r3, #30
 8002bea:	4606      	mov	r6, r0
 8002bec:	460c      	mov	r4, r1
 8002bee:	d507      	bpl.n	8002c00 <__smakebuf_r+0x1c>
 8002bf0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8002bf4:	6023      	str	r3, [r4, #0]
 8002bf6:	6123      	str	r3, [r4, #16]
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	6163      	str	r3, [r4, #20]
 8002bfc:	b002      	add	sp, #8
 8002bfe:	bd70      	pop	{r4, r5, r6, pc}
 8002c00:	ab01      	add	r3, sp, #4
 8002c02:	466a      	mov	r2, sp
 8002c04:	f7ff ffca 	bl	8002b9c <__swhatbuf_r>
 8002c08:	9900      	ldr	r1, [sp, #0]
 8002c0a:	4605      	mov	r5, r0
 8002c0c:	4630      	mov	r0, r6
 8002c0e:	f7ff fa75 	bl	80020fc <_malloc_r>
 8002c12:	b948      	cbnz	r0, 8002c28 <__smakebuf_r+0x44>
 8002c14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002c18:	059a      	lsls	r2, r3, #22
 8002c1a:	d4ef      	bmi.n	8002bfc <__smakebuf_r+0x18>
 8002c1c:	f023 0303 	bic.w	r3, r3, #3
 8002c20:	f043 0302 	orr.w	r3, r3, #2
 8002c24:	81a3      	strh	r3, [r4, #12]
 8002c26:	e7e3      	b.n	8002bf0 <__smakebuf_r+0xc>
 8002c28:	4b0d      	ldr	r3, [pc, #52]	; (8002c60 <__smakebuf_r+0x7c>)
 8002c2a:	62b3      	str	r3, [r6, #40]	; 0x28
 8002c2c:	89a3      	ldrh	r3, [r4, #12]
 8002c2e:	6020      	str	r0, [r4, #0]
 8002c30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002c34:	81a3      	strh	r3, [r4, #12]
 8002c36:	9b00      	ldr	r3, [sp, #0]
 8002c38:	6163      	str	r3, [r4, #20]
 8002c3a:	9b01      	ldr	r3, [sp, #4]
 8002c3c:	6120      	str	r0, [r4, #16]
 8002c3e:	b15b      	cbz	r3, 8002c58 <__smakebuf_r+0x74>
 8002c40:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002c44:	4630      	mov	r0, r6
 8002c46:	f000 f83d 	bl	8002cc4 <_isatty_r>
 8002c4a:	b128      	cbz	r0, 8002c58 <__smakebuf_r+0x74>
 8002c4c:	89a3      	ldrh	r3, [r4, #12]
 8002c4e:	f023 0303 	bic.w	r3, r3, #3
 8002c52:	f043 0301 	orr.w	r3, r3, #1
 8002c56:	81a3      	strh	r3, [r4, #12]
 8002c58:	89a0      	ldrh	r0, [r4, #12]
 8002c5a:	4305      	orrs	r5, r0
 8002c5c:	81a5      	strh	r5, [r4, #12]
 8002c5e:	e7cd      	b.n	8002bfc <__smakebuf_r+0x18>
 8002c60:	08001eb9 	.word	0x08001eb9

08002c64 <__malloc_lock>:
__malloc_lock():
 8002c64:	4801      	ldr	r0, [pc, #4]	; (8002c6c <__malloc_lock+0x8>)
 8002c66:	f7ff b9f9 	b.w	800205c <__retarget_lock_acquire_recursive>
 8002c6a:	bf00      	nop
 8002c6c:	20000134 	.word	0x20000134

08002c70 <__malloc_unlock>:
__malloc_unlock():
 8002c70:	4801      	ldr	r0, [pc, #4]	; (8002c78 <__malloc_unlock+0x8>)
 8002c72:	f7ff b9f4 	b.w	800205e <__retarget_lock_release_recursive>
 8002c76:	bf00      	nop
 8002c78:	20000134 	.word	0x20000134

08002c7c <_read_r>:
_read_r():
 8002c7c:	b538      	push	{r3, r4, r5, lr}
 8002c7e:	4d07      	ldr	r5, [pc, #28]	; (8002c9c <_read_r+0x20>)
 8002c80:	4604      	mov	r4, r0
 8002c82:	4608      	mov	r0, r1
 8002c84:	4611      	mov	r1, r2
 8002c86:	2200      	movs	r2, #0
 8002c88:	602a      	str	r2, [r5, #0]
 8002c8a:	461a      	mov	r2, r3
 8002c8c:	f7fe ff17 	bl	8001abe <_read>
 8002c90:	1c43      	adds	r3, r0, #1
 8002c92:	d102      	bne.n	8002c9a <_read_r+0x1e>
 8002c94:	682b      	ldr	r3, [r5, #0]
 8002c96:	b103      	cbz	r3, 8002c9a <_read_r+0x1e>
 8002c98:	6023      	str	r3, [r4, #0]
 8002c9a:	bd38      	pop	{r3, r4, r5, pc}
 8002c9c:	2000012c 	.word	0x2000012c

08002ca0 <_fstat_r>:
_fstat_r():
 8002ca0:	b538      	push	{r3, r4, r5, lr}
 8002ca2:	4d07      	ldr	r5, [pc, #28]	; (8002cc0 <_fstat_r+0x20>)
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	4604      	mov	r4, r0
 8002ca8:	4608      	mov	r0, r1
 8002caa:	4611      	mov	r1, r2
 8002cac:	602b      	str	r3, [r5, #0]
 8002cae:	f7fe fee1 	bl	8001a74 <_fstat>
 8002cb2:	1c43      	adds	r3, r0, #1
 8002cb4:	d102      	bne.n	8002cbc <_fstat_r+0x1c>
 8002cb6:	682b      	ldr	r3, [r5, #0]
 8002cb8:	b103      	cbz	r3, 8002cbc <_fstat_r+0x1c>
 8002cba:	6023      	str	r3, [r4, #0]
 8002cbc:	bd38      	pop	{r3, r4, r5, pc}
 8002cbe:	bf00      	nop
 8002cc0:	2000012c 	.word	0x2000012c

08002cc4 <_isatty_r>:
_isatty_r():
 8002cc4:	b538      	push	{r3, r4, r5, lr}
 8002cc6:	4d06      	ldr	r5, [pc, #24]	; (8002ce0 <_isatty_r+0x1c>)
 8002cc8:	2300      	movs	r3, #0
 8002cca:	4604      	mov	r4, r0
 8002ccc:	4608      	mov	r0, r1
 8002cce:	602b      	str	r3, [r5, #0]
 8002cd0:	f7fe fedf 	bl	8001a92 <_isatty>
 8002cd4:	1c43      	adds	r3, r0, #1
 8002cd6:	d102      	bne.n	8002cde <_isatty_r+0x1a>
 8002cd8:	682b      	ldr	r3, [r5, #0]
 8002cda:	b103      	cbz	r3, 8002cde <_isatty_r+0x1a>
 8002cdc:	6023      	str	r3, [r4, #0]
 8002cde:	bd38      	pop	{r3, r4, r5, pc}
 8002ce0:	2000012c 	.word	0x2000012c

08002ce4 <_init>:
_init():
 8002ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ce6:	bf00      	nop
 8002ce8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002cea:	bc08      	pop	{r3}
 8002cec:	469e      	mov	lr, r3
 8002cee:	4770      	bx	lr

08002cf0 <_fini>:
_fini():
 8002cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cf2:	bf00      	nop
 8002cf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002cf6:	bc08      	pop	{r3}
 8002cf8:	469e      	mov	lr, r3
 8002cfa:	4770      	bx	lr
