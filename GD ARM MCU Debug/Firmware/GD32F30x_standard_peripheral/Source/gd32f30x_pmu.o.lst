   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f30x_pmu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.pmu_deinit,"ax",%progbits
  16              		.align	1
  17              		.global	pmu_deinit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	pmu_deinit:
  25              	.LFB116:
  26              		.file 1 "../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c"
   1:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
   2:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \file    gd32f30x_pmu.c
   3:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief   PMU driver
   4:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
   5:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****    \version 2024-12-20, V3.0.1, firmware for GD32F30x
   6:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
   7:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
   8:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*
   9:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  11:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** are permitted provided that the following conditions are met:
  13:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  14:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****        list of conditions and the following disclaimer.
  16:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****        this list of conditions and the following disclaimer in the documentation
  18:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****        and/or other materials provided with the distribution.
  19:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****        may be used to endorse or promote products derived from this software without
  21:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****        specific prior written permission.
  22:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  23:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** OF SUCH DAMAGE.
  33:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
  34:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  35:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  36:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** #include "gd32f30x_pmu.h"
  37:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  38:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
  39:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      reset PMU register
  40:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
  41:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
  42:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
  43:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
  44:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_deinit(void)
  45:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
  27              		.loc 1 45 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  46:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* reset PMU */
  47:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     rcu_periph_reset_enable(RCU_PMURST);
  37              		.loc 1 47 5
  38 0004 40F21C40 		movw	r0, #1052
  39 0008 FFF7FEFF 		bl	rcu_periph_reset_enable
  48:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     rcu_periph_reset_disable(RCU_PMURST);
  40              		.loc 1 48 5
  41 000c 40F21C40 		movw	r0, #1052
  42 0010 FFF7FEFF 		bl	rcu_periph_reset_disable
  49:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
  43              		.loc 1 49 1
  44 0014 00BF     		nop
  45 0016 80BD     		pop	{r7, pc}
  46              		.cfi_endproc
  47              	.LFE116:
  49              		.section	.text.pmu_lvd_select,"ax",%progbits
  50              		.align	1
  51              		.global	pmu_lvd_select
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	pmu_lvd_select:
  58              	.LFB117:
  50:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  51:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
  52:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      select low voltage detector threshold
  53:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  lvdt_n:
  54:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_0: voltage threshold is 2.1V
  55:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_1: voltage threshold is 2.3V
  56:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_2: voltage threshold is 2.4V
  57:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_3: voltage threshold is 2.6V
  58:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_4: voltage threshold is 2.7V
  59:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_5: voltage threshold is 2.9V
  60:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_6: voltage threshold is 3.0V
  61:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LVDT_7: voltage threshold is 3.1V
  62:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
  63:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
  64:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
  65:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_lvd_select(uint32_t lvdt_n)
  66:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
  59              		.loc 1 66 1
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 8
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0000 80B4     		push	{r7}
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              		.cfi_def_cfa_offset 16
  69 0004 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  71 0006 7860     		str	r0, [r7, #4]
  67:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* disable LVD */
  68:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LVDEN;
  72              		.loc 1 68 13
  73 0008 0E4B     		ldr	r3, .L3
  74 000a 1B68     		ldr	r3, [r3]
  75 000c 0D4A     		ldr	r2, .L3
  76 000e 23F01003 		bic	r3, r3, #16
  77 0012 1360     		str	r3, [r2]
  69:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* clear LVDT bits */
  70:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LVDT;
  78              		.loc 1 70 13
  79 0014 0B4B     		ldr	r3, .L3
  80 0016 1B68     		ldr	r3, [r3]
  81 0018 0A4A     		ldr	r2, .L3
  82 001a 23F0E003 		bic	r3, r3, #224
  83 001e 1360     		str	r3, [r2]
  71:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* set LVDT bits according to lvdt_n */
  72:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= lvdt_n;
  84              		.loc 1 72 13
  85 0020 084B     		ldr	r3, .L3
  86 0022 1A68     		ldr	r2, [r3]
  87 0024 0749     		ldr	r1, .L3
  88 0026 7B68     		ldr	r3, [r7, #4]
  89 0028 1343     		orrs	r3, r3, r2
  90 002a 0B60     		str	r3, [r1]
  73:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* enable LVD */
  74:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_LVDEN;
  91              		.loc 1 74 13
  92 002c 054B     		ldr	r3, .L3
  93 002e 1B68     		ldr	r3, [r3]
  94 0030 044A     		ldr	r2, .L3
  95 0032 43F01003 		orr	r3, r3, #16
  96 0036 1360     		str	r3, [r2]
  75:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
  97              		.loc 1 75 1
  98 0038 00BF     		nop
  99 003a 0C37     		adds	r7, r7, #12
 100              		.cfi_def_cfa_offset 4
 101 003c BD46     		mov	sp, r7
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 003e 80BC     		pop	{r7}
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 0040 7047     		bx	lr
 108              	.L4:
 109 0042 00BF     		.align	2
 110              	.L3:
 111 0044 00700040 		.word	1073770496
 112              		.cfi_endproc
 113              	.LFE117:
 115              		.section	.text.pmu_ldo_output_select,"ax",%progbits
 116              		.align	1
 117              		.global	pmu_ldo_output_select
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
 123              	pmu_ldo_output_select:
 124              	.LFB118:
  76:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  77:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
  78:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      select LDO output voltage
  79:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 this bit set by software when the main PLL closed, before closing PLL, change the s
  80:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  ldo_output:
  81:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LDOVS_LOW: LDO output voltage low mode
  82:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LDOVS_MID: LDO output voltage mid mode
  83:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LDOVS_HIGH: LDO output voltage high mode
  84:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
  85:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
  86:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
  87:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_ldo_output_select(uint32_t ldo_output)
  88:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 125              		.loc 1 88 1
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130 0000 80B4     		push	{r7}
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 7, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 137 0006 7860     		str	r0, [r7, #4]
  89:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LDOVS;
 138              		.loc 1 89 13
 139 0008 084B     		ldr	r3, .L6
 140 000a 1B68     		ldr	r3, [r3]
 141 000c 074A     		ldr	r2, .L6
 142 000e 23F44043 		bic	r3, r3, #49152
 143 0012 1360     		str	r3, [r2]
  90:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= ldo_output;
 144              		.loc 1 90 13
 145 0014 054B     		ldr	r3, .L6
 146 0016 1A68     		ldr	r2, [r3]
 147 0018 0449     		ldr	r1, .L6
 148 001a 7B68     		ldr	r3, [r7, #4]
 149 001c 1343     		orrs	r3, r3, r2
 150 001e 0B60     		str	r3, [r1]
  91:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 151              		.loc 1 91 1
 152 0020 00BF     		nop
 153 0022 0C37     		adds	r7, r7, #12
 154              		.cfi_def_cfa_offset 4
 155 0024 BD46     		mov	sp, r7
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0026 80BC     		pop	{r7}
 159              		.cfi_restore 7
 160              		.cfi_def_cfa_offset 0
 161 0028 7047     		bx	lr
 162              	.L7:
 163 002a 00BF     		.align	2
 164              	.L6:
 165 002c 00700040 		.word	1073770496
 166              		.cfi_endproc
 167              	.LFE118:
 169              		.section	.text.pmu_lvd_disable,"ax",%progbits
 170              		.align	1
 171              		.global	pmu_lvd_disable
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	pmu_lvd_disable:
 178              	.LFB119:
  92:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
  93:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
  94:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      disable PMU lvd
  95:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
  96:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
  97:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
  98:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
  99:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_lvd_disable(void)
 100:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 179              		.loc 1 100 1
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 7, -4
 187 0002 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 101:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* disable LVD */
 102:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LVDEN;
 189              		.loc 1 102 13
 190 0004 044B     		ldr	r3, .L9
 191 0006 1B68     		ldr	r3, [r3]
 192 0008 034A     		ldr	r2, .L9
 193 000a 23F01003 		bic	r3, r3, #16
 194 000e 1360     		str	r3, [r2]
 103:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 195              		.loc 1 103 1
 196 0010 00BF     		nop
 197 0012 BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 0014 80BC     		pop	{r7}
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 0016 7047     		bx	lr
 204              	.L10:
 205              		.align	2
 206              	.L9:
 207 0018 00700040 		.word	1073770496
 208              		.cfi_endproc
 209              	.LFE119:
 211              		.section	.text.pmu_highdriver_switch_select,"ax",%progbits
 212              		.align	1
 213              		.global	pmu_highdriver_switch_select
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	pmu_highdriver_switch_select:
 220              	.LFB120:
 104:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 105:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 106:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      switch high-driver mode
 107:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 this bit set by software only when IRC16M or HXTAL used as system clock
 108:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  highdr_switch:
 109:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_HIGHDR_SWITCH_NONE: disable high-driver mode switch
 110:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_HIGHDR_SWITCH_EN: enable high-driver mode switch
 111:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 112:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 113:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 114:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_highdriver_switch_select(uint32_t highdr_switch)
 115:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 221              		.loc 1 115 1
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 82B0     		sub	sp, sp, #8
 230              		.cfi_def_cfa_offset 16
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 116:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* wait for HDRF flag set */
 117:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     while(SET != pmu_flag_get(PMU_FLAG_HDRF)) {
 234              		.loc 1 117 10
 235 0008 00BF     		nop
 236              	.L12:
 237              		.loc 1 117 18 discriminator 1
 238 000a 4FF48030 		mov	r0, #65536
 239 000e FFF7FEFF 		bl	pmu_flag_get
 240 0012 0346     		mov	r3, r0
 241              		.loc 1 117 10 discriminator 1
 242 0014 012B     		cmp	r3, #1
 243 0016 F8D1     		bne	.L12
 118:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 119:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_HDS;
 244              		.loc 1 119 13
 245 0018 074B     		ldr	r3, .L13
 246 001a 1B68     		ldr	r3, [r3]
 247 001c 064A     		ldr	r2, .L13
 248 001e 23F40033 		bic	r3, r3, #131072
 249 0022 1360     		str	r3, [r2]
 120:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= highdr_switch;
 250              		.loc 1 120 13
 251 0024 044B     		ldr	r3, .L13
 252 0026 1A68     		ldr	r2, [r3]
 253 0028 0349     		ldr	r1, .L13
 254 002a 7B68     		ldr	r3, [r7, #4]
 255 002c 1343     		orrs	r3, r3, r2
 256 002e 0B60     		str	r3, [r1]
 121:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 257              		.loc 1 121 1
 258 0030 00BF     		nop
 259 0032 0837     		adds	r7, r7, #8
 260              		.cfi_def_cfa_offset 8
 261 0034 BD46     		mov	sp, r7
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 0036 80BD     		pop	{r7, pc}
 265              	.L14:
 266              		.align	2
 267              	.L13:
 268 0038 00700040 		.word	1073770496
 269              		.cfi_endproc
 270              	.LFE120:
 272              		.section	.text.pmu_highdriver_mode_enable,"ax",%progbits
 273              		.align	1
 274              		.global	pmu_highdriver_mode_enable
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	pmu_highdriver_mode_enable:
 281              	.LFB121:
 122:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 123:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 124:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      enable high-driver mode
 125:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 this bit set by software only when IRC16M or HXTAL used as system clock
 126:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 127:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 128:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 129:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 130:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_highdriver_mode_enable(void)
 131:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 282              		.loc 1 131 1
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 132:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_HDEN;
 292              		.loc 1 132 13
 293 0004 044B     		ldr	r3, .L16
 294 0006 1B68     		ldr	r3, [r3]
 295 0008 034A     		ldr	r2, .L16
 296 000a 43F48033 		orr	r3, r3, #65536
 297 000e 1360     		str	r3, [r2]
 133:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 298              		.loc 1 133 1
 299 0010 00BF     		nop
 300 0012 BD46     		mov	sp, r7
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 0014 80BC     		pop	{r7}
 304              		.cfi_restore 7
 305              		.cfi_def_cfa_offset 0
 306 0016 7047     		bx	lr
 307              	.L17:
 308              		.align	2
 309              	.L16:
 310 0018 00700040 		.word	1073770496
 311              		.cfi_endproc
 312              	.LFE121:
 314              		.section	.text.pmu_highdriver_mode_disable,"ax",%progbits
 315              		.align	1
 316              		.global	pmu_highdriver_mode_disable
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu softvfp
 322              	pmu_highdriver_mode_disable:
 323              	.LFB122:
 134:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 135:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 136:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      disable high-driver mode
 137:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 138:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 139:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 140:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 141:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_highdriver_mode_disable(void)
 142:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 324              		.loc 1 142 1
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329 0000 80B4     		push	{r7}
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 143:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_HDEN;
 334              		.loc 1 143 13
 335 0004 044B     		ldr	r3, .L19
 336 0006 1B68     		ldr	r3, [r3]
 337 0008 034A     		ldr	r2, .L19
 338 000a 23F48033 		bic	r3, r3, #65536
 339 000e 1360     		str	r3, [r2]
 144:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 340              		.loc 1 144 1
 341 0010 00BF     		nop
 342 0012 BD46     		mov	sp, r7
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 0014 80BC     		pop	{r7}
 346              		.cfi_restore 7
 347              		.cfi_def_cfa_offset 0
 348 0016 7047     		bx	lr
 349              	.L20:
 350              		.align	2
 351              	.L19:
 352 0018 00700040 		.word	1073770496
 353              		.cfi_endproc
 354              	.LFE122:
 356              		.section	.text.pmu_lowdriver_mode_enable,"ax",%progbits
 357              		.align	1
 358              		.global	pmu_lowdriver_mode_enable
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu softvfp
 364              	pmu_lowdriver_mode_enable:
 365              	.LFB123:
 145:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 146:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 147:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      enable low-driver mode in deep-sleep mode
 148:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 149:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 150:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 151:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 152:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_lowdriver_mode_enable(void)
 153:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 366              		.loc 1 153 1
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 154:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_LDEN;
 376              		.loc 1 154 13
 377 0004 044B     		ldr	r3, .L22
 378 0006 1B68     		ldr	r3, [r3]
 379 0008 034A     		ldr	r2, .L22
 380 000a 43F44023 		orr	r3, r3, #786432
 381 000e 1360     		str	r3, [r2]
 155:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 382              		.loc 1 155 1
 383 0010 00BF     		nop
 384 0012 BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0014 80BC     		pop	{r7}
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0016 7047     		bx	lr
 391              	.L23:
 392              		.align	2
 393              	.L22:
 394 0018 00700040 		.word	1073770496
 395              		.cfi_endproc
 396              	.LFE123:
 398              		.section	.text.pmu_lowdriver_mode_disable,"ax",%progbits
 399              		.align	1
 400              		.global	pmu_lowdriver_mode_disable
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu softvfp
 406              	pmu_lowdriver_mode_disable:
 407              	.LFB124:
 156:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 157:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 158:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      disable low-driver mode in deep-sleep mode
 159:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 160:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 161:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 162:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 163:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_lowdriver_mode_disable(void)
 164:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 408              		.loc 1 164 1
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 165:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LDEN;
 418              		.loc 1 165 13
 419 0004 044B     		ldr	r3, .L25
 420 0006 1B68     		ldr	r3, [r3]
 421 0008 034A     		ldr	r2, .L25
 422 000a 23F44023 		bic	r3, r3, #786432
 423 000e 1360     		str	r3, [r2]
 166:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 424              		.loc 1 166 1
 425 0010 00BF     		nop
 426 0012 BD46     		mov	sp, r7
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0014 80BC     		pop	{r7}
 430              		.cfi_restore 7
 431              		.cfi_def_cfa_offset 0
 432 0016 7047     		bx	lr
 433              	.L26:
 434              		.align	2
 435              	.L25:
 436 0018 00700040 		.word	1073770496
 437              		.cfi_endproc
 438              	.LFE124:
 440              		.section	.text.pmu_lowpower_driver_config,"ax",%progbits
 441              		.align	1
 442              		.global	pmu_lowpower_driver_config
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	pmu_lowpower_driver_config:
 449              	.LFB125:
 167:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 168:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 169:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      driver mode when use low power LDO
 170:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  mode:
 171:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_NORMALDR_LOWPWR:  normal driver when use low power LDO
 172:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LOWDR_LOWPWR:  low-driver mode enabled when LDEN is 11 and use low power LDO
 173:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 174:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 175:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 176:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_lowpower_driver_config(uint32_t mode)
 177:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 450              		.loc 1 177 1
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 83B0     		sub	sp, sp, #12
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
 462 0006 7860     		str	r0, [r7, #4]
 178:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LDLP;
 463              		.loc 1 178 13
 464 0008 084B     		ldr	r3, .L28
 465 000a 1B68     		ldr	r3, [r3]
 466 000c 074A     		ldr	r2, .L28
 467 000e 23F48063 		bic	r3, r3, #1024
 468 0012 1360     		str	r3, [r2]
 179:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= mode;
 469              		.loc 1 179 13
 470 0014 054B     		ldr	r3, .L28
 471 0016 1A68     		ldr	r2, [r3]
 472 0018 0449     		ldr	r1, .L28
 473 001a 7B68     		ldr	r3, [r7, #4]
 474 001c 1343     		orrs	r3, r3, r2
 475 001e 0B60     		str	r3, [r1]
 180:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 476              		.loc 1 180 1
 477 0020 00BF     		nop
 478 0022 0C37     		adds	r7, r7, #12
 479              		.cfi_def_cfa_offset 4
 480 0024 BD46     		mov	sp, r7
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 0026 80BC     		pop	{r7}
 484              		.cfi_restore 7
 485              		.cfi_def_cfa_offset 0
 486 0028 7047     		bx	lr
 487              	.L29:
 488 002a 00BF     		.align	2
 489              	.L28:
 490 002c 00700040 		.word	1073770496
 491              		.cfi_endproc
 492              	.LFE125:
 494              		.section	.text.pmu_normalpower_driver_config,"ax",%progbits
 495              		.align	1
 496              		.global	pmu_normalpower_driver_config
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 502              	pmu_normalpower_driver_config:
 503              	.LFB126:
 181:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 182:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 183:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      driver mode when use normal power LDO
 184:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  mode:
 185:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_NORMALDR_NORMALPWR:  normal driver when use normal power LDO
 186:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LOWDR_NORMALPWR:  low-driver mode enabled when LDEN is 11 and use normal powe
 187:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 188:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 189:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 190:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_normalpower_driver_config(uint32_t mode)
 191:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 504              		.loc 1 191 1
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 8
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 83B0     		sub	sp, sp, #12
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 192:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_LDNP;
 517              		.loc 1 192 13
 518 0008 084B     		ldr	r3, .L31
 519 000a 1B68     		ldr	r3, [r3]
 520 000c 074A     		ldr	r2, .L31
 521 000e 23F40063 		bic	r3, r3, #2048
 522 0012 1360     		str	r3, [r2]
 193:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= mode;
 523              		.loc 1 193 13
 524 0014 054B     		ldr	r3, .L31
 525 0016 1A68     		ldr	r2, [r3]
 526 0018 0449     		ldr	r1, .L31
 527 001a 7B68     		ldr	r3, [r7, #4]
 528 001c 1343     		orrs	r3, r3, r2
 529 001e 0B60     		str	r3, [r1]
 194:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 530              		.loc 1 194 1
 531 0020 00BF     		nop
 532 0022 0C37     		adds	r7, r7, #12
 533              		.cfi_def_cfa_offset 4
 534 0024 BD46     		mov	sp, r7
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 0026 80BC     		pop	{r7}
 538              		.cfi_restore 7
 539              		.cfi_def_cfa_offset 0
 540 0028 7047     		bx	lr
 541              	.L32:
 542 002a 00BF     		.align	2
 543              	.L31:
 544 002c 00700040 		.word	1073770496
 545              		.cfi_endproc
 546              	.LFE126:
 548              		.section	.text.pmu_to_sleepmode,"ax",%progbits
 549              		.align	1
 550              		.global	pmu_to_sleepmode
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	pmu_to_sleepmode:
 557              	.LFB127:
 195:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 196:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 197:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      PMU work in sleep mode
 198:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  sleepmodecmd:
 199:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        WFI_CMD: use WFI command
 200:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        WFE_CMD: use WFE command
 201:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 202:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 203:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 204:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_to_sleepmode(uint8_t sleepmodecmd)
 205:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 558              		.loc 1 205 1
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 8
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              		.cfi_def_cfa_offset 16
 568 0004 00AF     		add	r7, sp, #0
 569              		.cfi_def_cfa_register 7
 570 0006 0346     		mov	r3, r0
 571 0008 FB71     		strb	r3, [r7, #7]
 206:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* clear sleepdeep bit of Cortex-M4 system control register */
 207:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     SCB->SCR &= ~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 572              		.loc 1 207 14
 573 000a 094B     		ldr	r3, .L36
 574 000c 1B69     		ldr	r3, [r3, #16]
 575 000e 084A     		ldr	r2, .L36
 576 0010 23F00403 		bic	r3, r3, #4
 577 0014 1361     		str	r3, [r2, #16]
 208:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 209:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* select WFI or WFE command to enter sleep mode */
 210:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     if(WFI_CMD == sleepmodecmd) {
 578              		.loc 1 210 7
 579 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 580 0018 002B     		cmp	r3, #0
 581 001a 01D1     		bne	.L34
 582              	.LBB16:
 583              	.LBB17:
 584              		.file 2 "../Firmware/CMSIS/core_cmInstr.h"
   1:../Firmware/CMSIS/core_cmInstr.h **** /**************************************************************************//**
   2:../Firmware/CMSIS/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../Firmware/CMSIS/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../Firmware/CMSIS/core_cmInstr.h ****  * @version  V3.01
   5:../Firmware/CMSIS/core_cmInstr.h ****  * @date     06. March 2012
   6:../Firmware/CMSIS/core_cmInstr.h ****  *
   7:../Firmware/CMSIS/core_cmInstr.h ****  * @note
   8:../Firmware/CMSIS/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../Firmware/CMSIS/core_cmInstr.h ****  *
  10:../Firmware/CMSIS/core_cmInstr.h ****  * @par
  11:../Firmware/CMSIS/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../Firmware/CMSIS/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../Firmware/CMSIS/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../Firmware/CMSIS/core_cmInstr.h ****  *
  15:../Firmware/CMSIS/core_cmInstr.h ****  * @par
  16:../Firmware/CMSIS/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../Firmware/CMSIS/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../Firmware/CMSIS/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../Firmware/CMSIS/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../Firmware/CMSIS/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../Firmware/CMSIS/core_cmInstr.h ****  *
  22:../Firmware/CMSIS/core_cmInstr.h ****  ******************************************************************************/
  23:../Firmware/CMSIS/core_cmInstr.h **** 
  24:../Firmware/CMSIS/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../Firmware/CMSIS/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../Firmware/CMSIS/core_cmInstr.h **** 
  27:../Firmware/CMSIS/core_cmInstr.h **** 
  28:../Firmware/CMSIS/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../Firmware/CMSIS/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../Firmware/CMSIS/core_cmInstr.h ****   Access to dedicated instructions
  31:../Firmware/CMSIS/core_cmInstr.h ****   @{
  32:../Firmware/CMSIS/core_cmInstr.h **** */
  33:../Firmware/CMSIS/core_cmInstr.h **** 
  34:../Firmware/CMSIS/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../Firmware/CMSIS/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../Firmware/CMSIS/core_cmInstr.h **** 
  37:../Firmware/CMSIS/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../Firmware/CMSIS/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../Firmware/CMSIS/core_cmInstr.h **** #endif
  40:../Firmware/CMSIS/core_cmInstr.h **** 
  41:../Firmware/CMSIS/core_cmInstr.h **** 
  42:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  No Operation
  43:../Firmware/CMSIS/core_cmInstr.h **** 
  44:../Firmware/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../Firmware/CMSIS/core_cmInstr.h ****  */
  46:../Firmware/CMSIS/core_cmInstr.h **** #define __NOP                             __nop
  47:../Firmware/CMSIS/core_cmInstr.h **** 
  48:../Firmware/CMSIS/core_cmInstr.h **** 
  49:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../Firmware/CMSIS/core_cmInstr.h **** 
  51:../Firmware/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../Firmware/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
  53:../Firmware/CMSIS/core_cmInstr.h ****  */
  54:../Firmware/CMSIS/core_cmInstr.h **** #define __WFI                             __wfi
  55:../Firmware/CMSIS/core_cmInstr.h **** 
  56:../Firmware/CMSIS/core_cmInstr.h **** 
  57:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
  58:../Firmware/CMSIS/core_cmInstr.h **** 
  59:../Firmware/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../Firmware/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../Firmware/CMSIS/core_cmInstr.h ****  */
  62:../Firmware/CMSIS/core_cmInstr.h **** #define __WFE                             __wfe
  63:../Firmware/CMSIS/core_cmInstr.h **** 
  64:../Firmware/CMSIS/core_cmInstr.h **** 
  65:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Send Event
  66:../Firmware/CMSIS/core_cmInstr.h **** 
  67:../Firmware/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../Firmware/CMSIS/core_cmInstr.h ****  */
  69:../Firmware/CMSIS/core_cmInstr.h **** #define __SEV                             __sev
  70:../Firmware/CMSIS/core_cmInstr.h **** 
  71:../Firmware/CMSIS/core_cmInstr.h **** 
  72:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../Firmware/CMSIS/core_cmInstr.h **** 
  74:../Firmware/CMSIS/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../Firmware/CMSIS/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../Firmware/CMSIS/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../Firmware/CMSIS/core_cmInstr.h ****  */
  78:../Firmware/CMSIS/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../Firmware/CMSIS/core_cmInstr.h **** 
  80:../Firmware/CMSIS/core_cmInstr.h **** 
  81:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../Firmware/CMSIS/core_cmInstr.h **** 
  83:../Firmware/CMSIS/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../Firmware/CMSIS/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../Firmware/CMSIS/core_cmInstr.h ****  */
  86:../Firmware/CMSIS/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../Firmware/CMSIS/core_cmInstr.h **** 
  88:../Firmware/CMSIS/core_cmInstr.h **** 
  89:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../Firmware/CMSIS/core_cmInstr.h **** 
  91:../Firmware/CMSIS/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../Firmware/CMSIS/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../Firmware/CMSIS/core_cmInstr.h ****  */
  94:../Firmware/CMSIS/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../Firmware/CMSIS/core_cmInstr.h **** 
  96:../Firmware/CMSIS/core_cmInstr.h **** 
  97:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../Firmware/CMSIS/core_cmInstr.h **** 
  99:../Firmware/CMSIS/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../Firmware/CMSIS/core_cmInstr.h **** 
 101:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../Firmware/CMSIS/core_cmInstr.h ****     \return               Reversed value
 103:../Firmware/CMSIS/core_cmInstr.h ****  */
 104:../Firmware/CMSIS/core_cmInstr.h **** #define __REV                             __rev
 105:../Firmware/CMSIS/core_cmInstr.h **** 
 106:../Firmware/CMSIS/core_cmInstr.h **** 
 107:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../Firmware/CMSIS/core_cmInstr.h **** 
 109:../Firmware/CMSIS/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../Firmware/CMSIS/core_cmInstr.h **** 
 111:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../Firmware/CMSIS/core_cmInstr.h ****     \return               Reversed value
 113:../Firmware/CMSIS/core_cmInstr.h ****  */
 114:../Firmware/CMSIS/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../Firmware/CMSIS/core_cmInstr.h **** {
 116:../Firmware/CMSIS/core_cmInstr.h ****   rev16 r0, r0
 117:../Firmware/CMSIS/core_cmInstr.h ****   bx lr
 118:../Firmware/CMSIS/core_cmInstr.h **** }
 119:../Firmware/CMSIS/core_cmInstr.h **** 
 120:../Firmware/CMSIS/core_cmInstr.h **** 
 121:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../Firmware/CMSIS/core_cmInstr.h **** 
 123:../Firmware/CMSIS/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../Firmware/CMSIS/core_cmInstr.h **** 
 125:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../Firmware/CMSIS/core_cmInstr.h ****     \return               Reversed value
 127:../Firmware/CMSIS/core_cmInstr.h ****  */
 128:../Firmware/CMSIS/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../Firmware/CMSIS/core_cmInstr.h **** {
 130:../Firmware/CMSIS/core_cmInstr.h ****   revsh r0, r0
 131:../Firmware/CMSIS/core_cmInstr.h ****   bx lr
 132:../Firmware/CMSIS/core_cmInstr.h **** }
 133:../Firmware/CMSIS/core_cmInstr.h **** 
 134:../Firmware/CMSIS/core_cmInstr.h **** 
 135:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../Firmware/CMSIS/core_cmInstr.h **** 
 137:../Firmware/CMSIS/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../Firmware/CMSIS/core_cmInstr.h **** 
 139:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../Firmware/CMSIS/core_cmInstr.h ****     \return               Rotated value
 142:../Firmware/CMSIS/core_cmInstr.h ****  */
 143:../Firmware/CMSIS/core_cmInstr.h **** #define __ROR                             __ror
 144:../Firmware/CMSIS/core_cmInstr.h **** 
 145:../Firmware/CMSIS/core_cmInstr.h **** 
 146:../Firmware/CMSIS/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../Firmware/CMSIS/core_cmInstr.h **** 
 148:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../Firmware/CMSIS/core_cmInstr.h **** 
 150:../Firmware/CMSIS/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../Firmware/CMSIS/core_cmInstr.h **** 
 152:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../Firmware/CMSIS/core_cmInstr.h ****     \return               Reversed value
 154:../Firmware/CMSIS/core_cmInstr.h ****  */
 155:../Firmware/CMSIS/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../Firmware/CMSIS/core_cmInstr.h **** 
 157:../Firmware/CMSIS/core_cmInstr.h **** 
 158:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../Firmware/CMSIS/core_cmInstr.h **** 
 160:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../Firmware/CMSIS/core_cmInstr.h **** 
 162:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../Firmware/CMSIS/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../Firmware/CMSIS/core_cmInstr.h ****  */
 165:../Firmware/CMSIS/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../Firmware/CMSIS/core_cmInstr.h **** 
 167:../Firmware/CMSIS/core_cmInstr.h **** 
 168:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../Firmware/CMSIS/core_cmInstr.h **** 
 170:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../Firmware/CMSIS/core_cmInstr.h **** 
 172:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../Firmware/CMSIS/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../Firmware/CMSIS/core_cmInstr.h ****  */
 175:../Firmware/CMSIS/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../Firmware/CMSIS/core_cmInstr.h **** 
 177:../Firmware/CMSIS/core_cmInstr.h **** 
 178:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../Firmware/CMSIS/core_cmInstr.h **** 
 180:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../Firmware/CMSIS/core_cmInstr.h **** 
 182:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../Firmware/CMSIS/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../Firmware/CMSIS/core_cmInstr.h ****  */
 185:../Firmware/CMSIS/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../Firmware/CMSIS/core_cmInstr.h **** 
 187:../Firmware/CMSIS/core_cmInstr.h **** 
 188:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../Firmware/CMSIS/core_cmInstr.h **** 
 190:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../Firmware/CMSIS/core_cmInstr.h **** 
 192:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../Firmware/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 195:../Firmware/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 196:../Firmware/CMSIS/core_cmInstr.h ****  */
 197:../Firmware/CMSIS/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../Firmware/CMSIS/core_cmInstr.h **** 
 199:../Firmware/CMSIS/core_cmInstr.h **** 
 200:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../Firmware/CMSIS/core_cmInstr.h **** 
 202:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../Firmware/CMSIS/core_cmInstr.h **** 
 204:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../Firmware/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 207:../Firmware/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 208:../Firmware/CMSIS/core_cmInstr.h ****  */
 209:../Firmware/CMSIS/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../Firmware/CMSIS/core_cmInstr.h **** 
 211:../Firmware/CMSIS/core_cmInstr.h **** 
 212:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../Firmware/CMSIS/core_cmInstr.h **** 
 214:../Firmware/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../Firmware/CMSIS/core_cmInstr.h **** 
 216:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../Firmware/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 219:../Firmware/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 220:../Firmware/CMSIS/core_cmInstr.h ****  */
 221:../Firmware/CMSIS/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../Firmware/CMSIS/core_cmInstr.h **** 
 223:../Firmware/CMSIS/core_cmInstr.h **** 
 224:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../Firmware/CMSIS/core_cmInstr.h **** 
 226:../Firmware/CMSIS/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../Firmware/CMSIS/core_cmInstr.h **** 
 228:../Firmware/CMSIS/core_cmInstr.h ****  */
 229:../Firmware/CMSIS/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../Firmware/CMSIS/core_cmInstr.h **** 
 231:../Firmware/CMSIS/core_cmInstr.h **** 
 232:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../Firmware/CMSIS/core_cmInstr.h **** 
 234:../Firmware/CMSIS/core_cmInstr.h ****     This function saturates a signed value.
 235:../Firmware/CMSIS/core_cmInstr.h **** 
 236:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../Firmware/CMSIS/core_cmInstr.h ****     \return             Saturated value
 239:../Firmware/CMSIS/core_cmInstr.h ****  */
 240:../Firmware/CMSIS/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../Firmware/CMSIS/core_cmInstr.h **** 
 242:../Firmware/CMSIS/core_cmInstr.h **** 
 243:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../Firmware/CMSIS/core_cmInstr.h **** 
 245:../Firmware/CMSIS/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../Firmware/CMSIS/core_cmInstr.h **** 
 247:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../Firmware/CMSIS/core_cmInstr.h ****     \return             Saturated value
 250:../Firmware/CMSIS/core_cmInstr.h ****  */
 251:../Firmware/CMSIS/core_cmInstr.h **** #define __USAT                            __usat
 252:../Firmware/CMSIS/core_cmInstr.h **** 
 253:../Firmware/CMSIS/core_cmInstr.h **** 
 254:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../Firmware/CMSIS/core_cmInstr.h **** 
 256:../Firmware/CMSIS/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../Firmware/CMSIS/core_cmInstr.h **** 
 258:../Firmware/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../Firmware/CMSIS/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../Firmware/CMSIS/core_cmInstr.h ****  */
 261:../Firmware/CMSIS/core_cmInstr.h **** #define __CLZ                             __clz
 262:../Firmware/CMSIS/core_cmInstr.h **** 
 263:../Firmware/CMSIS/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../Firmware/CMSIS/core_cmInstr.h **** 
 265:../Firmware/CMSIS/core_cmInstr.h **** 
 266:../Firmware/CMSIS/core_cmInstr.h **** 
 267:../Firmware/CMSIS/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../Firmware/CMSIS/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../Firmware/CMSIS/core_cmInstr.h **** 
 270:../Firmware/CMSIS/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../Firmware/CMSIS/core_cmInstr.h **** 
 272:../Firmware/CMSIS/core_cmInstr.h **** 
 273:../Firmware/CMSIS/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../Firmware/CMSIS/core_cmInstr.h **** /* TI CCS specific functions */
 275:../Firmware/CMSIS/core_cmInstr.h **** 
 276:../Firmware/CMSIS/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../Firmware/CMSIS/core_cmInstr.h **** 
 278:../Firmware/CMSIS/core_cmInstr.h **** 
 279:../Firmware/CMSIS/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../Firmware/CMSIS/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../Firmware/CMSIS/core_cmInstr.h **** 
 282:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  No Operation
 283:../Firmware/CMSIS/core_cmInstr.h **** 
 284:../Firmware/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../Firmware/CMSIS/core_cmInstr.h ****  */
 286:../Firmware/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../Firmware/CMSIS/core_cmInstr.h **** {
 288:../Firmware/CMSIS/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../Firmware/CMSIS/core_cmInstr.h **** }
 290:../Firmware/CMSIS/core_cmInstr.h **** 
 291:../Firmware/CMSIS/core_cmInstr.h **** 
 292:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../Firmware/CMSIS/core_cmInstr.h **** 
 294:../Firmware/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../Firmware/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
 296:../Firmware/CMSIS/core_cmInstr.h ****  */
 297:../Firmware/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../Firmware/CMSIS/core_cmInstr.h **** {
 299:../Firmware/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfi");
 585              		.loc 2 299 3
 586              		.syntax unified
 587              	@ 299 "../Firmware/CMSIS/core_cmInstr.h" 1
 588 001c 30BF     		wfi
 589              	@ 0 "" 2
 300:../Firmware/CMSIS/core_cmInstr.h **** }
 590              		.loc 2 300 1
 591              		.thumb
 592              		.syntax unified
 593 001e 01E0     		b	.L35
 594              	.L34:
 595              	.LBE17:
 596              	.LBE16:
 597              	.LBB18:
 598              	.LBB19:
 301:../Firmware/CMSIS/core_cmInstr.h **** 
 302:../Firmware/CMSIS/core_cmInstr.h **** 
 303:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
 304:../Firmware/CMSIS/core_cmInstr.h **** 
 305:../Firmware/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../Firmware/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../Firmware/CMSIS/core_cmInstr.h ****  */
 308:../Firmware/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../Firmware/CMSIS/core_cmInstr.h **** {
 310:../Firmware/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfe");
 599              		.loc 2 310 3
 600              		.syntax unified
 601              	@ 310 "../Firmware/CMSIS/core_cmInstr.h" 1
 602 0020 20BF     		wfe
 603              	@ 0 "" 2
 311:../Firmware/CMSIS/core_cmInstr.h **** }
 604              		.loc 2 311 1
 605              		.thumb
 606              		.syntax unified
 607 0022 00BF     		nop
 608              	.L35:
 609              	.LBE19:
 610              	.LBE18:
 211:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __WFI();
 212:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     } else {
 213:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __WFE();
 214:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 215:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 611              		.loc 1 215 1
 612 0024 00BF     		nop
 613 0026 0C37     		adds	r7, r7, #12
 614              		.cfi_def_cfa_offset 4
 615 0028 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 002a 80BC     		pop	{r7}
 619              		.cfi_restore 7
 620              		.cfi_def_cfa_offset 0
 621 002c 7047     		bx	lr
 622              	.L37:
 623 002e 00BF     		.align	2
 624              	.L36:
 625 0030 00ED00E0 		.word	-536810240
 626              		.cfi_endproc
 627              	.LFE127:
 629              		.section	.text.pmu_to_deepsleepmode,"ax",%progbits
 630              		.align	1
 631              		.global	pmu_to_deepsleepmode
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu softvfp
 637              	pmu_to_deepsleepmode:
 638              	.LFB128:
 216:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 217:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 218:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      PMU work in deepsleep mode
 219:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  ldo:
 220:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 only one parameter can be selected which is shown as below:
 221:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LDO_NORMAL: LDO work in normal power mode when pmu enter deepsleep mode
 222:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LDO_LOWPOWER: LDO work in low power mode when pmu enter deepsleep mode
 223:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  lowdrive:
 224:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 only one parameter can be selected which is shown as below:
 225:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LOWDRIVER_ENABLE: low-driver mode enable in deep-sleep mode
 226:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_LOWDRIVER_DISABLE: low-driver mode disable in deep-sleep mode
 227:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  deepsleepmodecmd:
 228:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****                 only one parameter can be selected which is shown as below:
 229:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        WFI_CMD: use WFI command
 230:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        WFE_CMD: use WFE command
 231:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 232:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 233:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 234:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_to_deepsleepmode(uint32_t ldo, uint32_t lowdrive, uint8_t deepsleepmodecmd)
 235:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 639              		.loc 1 235 1
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644 0000 80B4     		push	{r7}
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 7, -4
 647 0002 85B0     		sub	sp, sp, #20
 648              		.cfi_def_cfa_offset 24
 649 0004 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 651 0006 F860     		str	r0, [r7, #12]
 652 0008 B960     		str	r1, [r7, #8]
 653 000a 1346     		mov	r3, r2
 654 000c FB71     		strb	r3, [r7, #7]
 236:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     static uint32_t reg_snap[ 4 ];
 237:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* clear stbmod and ldolp bits */
 238:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~((uint32_t)(PMU_CTL_STBMOD | PMU_CTL_LDOLP | PMU_CTL_LDEN | PMU_CTL_LDNP | PMU_CTL_
 655              		.loc 1 238 13
 656 000e 384B     		ldr	r3, .L43
 657 0010 1A68     		ldr	r2, [r3]
 658 0012 3749     		ldr	r1, .L43
 659 0014 374B     		ldr	r3, .L43+4
 660 0016 1340     		ands	r3, r3, r2
 661 0018 0B60     		str	r3, [r1]
 239:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 240:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* set ldolp bit according to pmu_ldo */
 241:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= ldo;
 662              		.loc 1 241 13
 663 001a 354B     		ldr	r3, .L43
 664 001c 1A68     		ldr	r2, [r3]
 665 001e 3449     		ldr	r1, .L43
 666 0020 FB68     		ldr	r3, [r7, #12]
 667 0022 1343     		orrs	r3, r3, r2
 668 0024 0B60     		str	r3, [r1]
 242:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 243:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* low drive mode config in deep-sleep mode */
 244:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     if(PMU_LOWDRIVER_ENABLE == lowdrive) {
 669              		.loc 1 244 7
 670 0026 BB68     		ldr	r3, [r7, #8]
 671 0028 B3F5402F 		cmp	r3, #786432
 672 002c 13D1     		bne	.L39
 245:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         if(PMU_LDO_NORMAL == ldo) {
 673              		.loc 1 245 11
 674 002e FB68     		ldr	r3, [r7, #12]
 675 0030 002B     		cmp	r3, #0
 676 0032 08D1     		bne	.L40
 246:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****             PMU_CTL |= (uint32_t)(PMU_CTL_LDEN | PMU_CTL_LDNP);
 677              		.loc 1 246 21
 678 0034 2E4B     		ldr	r3, .L43
 679 0036 1B68     		ldr	r3, [r3]
 680 0038 2D4A     		ldr	r2, .L43
 681 003a 43F44023 		orr	r3, r3, #786432
 682 003e 43F40063 		orr	r3, r3, #2048
 683 0042 1360     		str	r3, [r2]
 684 0044 07E0     		b	.L39
 685              	.L40:
 247:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         } else {
 248:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****             PMU_CTL |= (uint32_t)(PMU_CTL_LDEN | PMU_CTL_LDLP);
 686              		.loc 1 248 21
 687 0046 2A4B     		ldr	r3, .L43
 688 0048 1B68     		ldr	r3, [r3]
 689 004a 294A     		ldr	r2, .L43
 690 004c 43F44023 		orr	r3, r3, #786432
 691 0050 43F48063 		orr	r3, r3, #1024
 692 0054 1360     		str	r3, [r2]
 693              	.L39:
 249:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         }
 250:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 251:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 252:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* set sleepdeep bit of Cortex-M4 system control register */
 253:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 694              		.loc 1 253 14
 695 0056 284B     		ldr	r3, .L43+8
 696 0058 1B69     		ldr	r3, [r3, #16]
 697 005a 274A     		ldr	r2, .L43+8
 698 005c 43F00403 		orr	r3, r3, #4
 699 0060 1361     		str	r3, [r2, #16]
 254:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 255:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     reg_snap[ 0 ] = REG32(0xE000E010U);
 700              		.loc 1 255 21
 701 0062 264B     		ldr	r3, .L43+12
 702 0064 1B68     		ldr	r3, [r3]
 703              		.loc 1 255 19
 704 0066 264A     		ldr	r2, .L43+16
 705 0068 1360     		str	r3, [r2]
 256:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     reg_snap[ 1 ] = REG32(0xE000E100U);
 706              		.loc 1 256 21
 707 006a 264B     		ldr	r3, .L43+20
 708 006c 1B68     		ldr	r3, [r3]
 709              		.loc 1 256 19
 710 006e 244A     		ldr	r2, .L43+16
 711 0070 5360     		str	r3, [r2, #4]
 257:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     reg_snap[ 2 ] = REG32(0xE000E104U);
 712              		.loc 1 257 21
 713 0072 254B     		ldr	r3, .L43+24
 714 0074 1B68     		ldr	r3, [r3]
 715              		.loc 1 257 19
 716 0076 224A     		ldr	r2, .L43+16
 717 0078 9360     		str	r3, [r2, #8]
 258:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     reg_snap[ 3 ] = REG32(0xE000E108U);
 718              		.loc 1 258 21
 719 007a 244B     		ldr	r3, .L43+28
 720 007c 1B68     		ldr	r3, [r3]
 721              		.loc 1 258 19
 722 007e 204A     		ldr	r2, .L43+16
 723 0080 D360     		str	r3, [r2, #12]
 259:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 260:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E010U) &= 0x00010004U;
 724              		.loc 1 260 24
 725 0082 1E4B     		ldr	r3, .L43+12
 726 0084 1A68     		ldr	r2, [r3]
 727 0086 1D49     		ldr	r1, .L43+12
 728 0088 214B     		ldr	r3, .L43+32
 729 008a 1340     		ands	r3, r3, r2
 730 008c 0B60     		str	r3, [r1]
 261:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E180U)  = 0XFF7FF83DU;
 731              		.loc 1 261 5
 732 008e 214B     		ldr	r3, .L43+36
 733              		.loc 1 261 25
 734 0090 214A     		ldr	r2, .L43+40
 735 0092 1A60     		str	r2, [r3]
 262:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E184U)  = 0XFFFFF8FFU;
 736              		.loc 1 262 5
 737 0094 214B     		ldr	r3, .L43+44
 738              		.loc 1 262 25
 739 0096 6FF4E062 		mvn	r2, #1792
 740 009a 1A60     		str	r2, [r3]
 263:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E188U)  = 0xFFFFFFFFU;
 741              		.loc 1 263 5
 742 009c 204B     		ldr	r3, .L43+48
 743              		.loc 1 263 25
 744 009e 4FF0FF32 		mov	r2, #-1
 745 00a2 1A60     		str	r2, [r3]
 264:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 265:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* select WFI or WFE command to enter deepsleep mode */
 266:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     if(WFI_CMD == deepsleepmodecmd) {
 746              		.loc 1 266 7
 747 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 748 00a6 002B     		cmp	r3, #0
 749 00a8 01D1     		bne	.L41
 750              	.LBB20:
 751              	.LBB21:
 299:../Firmware/CMSIS/core_cmInstr.h **** }
 752              		.loc 2 299 3
 753              		.syntax unified
 754              	@ 299 "../Firmware/CMSIS/core_cmInstr.h" 1
 755 00aa 30BF     		wfi
 756              	@ 0 "" 2
 300:../Firmware/CMSIS/core_cmInstr.h **** 
 757              		.loc 2 300 1
 758              		.thumb
 759              		.syntax unified
 760 00ac 05E0     		b	.L42
 761              	.L41:
 762              	.LBE21:
 763              	.LBE20:
 764              	.LBB22:
 765              	.LBB23:
 312:../Firmware/CMSIS/core_cmInstr.h **** 
 313:../Firmware/CMSIS/core_cmInstr.h **** 
 314:../Firmware/CMSIS/core_cmInstr.h **** /** \brief  Send Event
 315:../Firmware/CMSIS/core_cmInstr.h **** 
 316:../Firmware/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../Firmware/CMSIS/core_cmInstr.h ****  */
 318:../Firmware/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../Firmware/CMSIS/core_cmInstr.h **** {
 320:../Firmware/CMSIS/core_cmInstr.h ****   __ASM volatile ("sev");
 766              		.loc 2 320 3
 767              		.syntax unified
 768              	@ 320 "../Firmware/CMSIS/core_cmInstr.h" 1
 769 00ae 40BF     		sev
 770              	@ 0 "" 2
 321:../Firmware/CMSIS/core_cmInstr.h **** }
 771              		.loc 2 321 1
 772              		.thumb
 773              		.syntax unified
 774 00b0 00BF     		nop
 775              	.LBE23:
 776              	.LBE22:
 777              	.LBB24:
 778              	.LBB25:
 310:../Firmware/CMSIS/core_cmInstr.h **** }
 779              		.loc 2 310 3
 780              		.syntax unified
 781              	@ 310 "../Firmware/CMSIS/core_cmInstr.h" 1
 782 00b2 20BF     		wfe
 783              	@ 0 "" 2
 311:../Firmware/CMSIS/core_cmInstr.h **** 
 784              		.loc 2 311 1
 785              		.thumb
 786              		.syntax unified
 787 00b4 00BF     		nop
 788              	.LBE25:
 789              	.LBE24:
 790              	.LBB26:
 791              	.LBB27:
 310:../Firmware/CMSIS/core_cmInstr.h **** }
 792              		.loc 2 310 3
 793              		.syntax unified
 794              	@ 310 "../Firmware/CMSIS/core_cmInstr.h" 1
 795 00b6 20BF     		wfe
 796              	@ 0 "" 2
 311:../Firmware/CMSIS/core_cmInstr.h **** 
 797              		.loc 2 311 1
 798              		.thumb
 799              		.syntax unified
 800 00b8 00BF     		nop
 801              	.L42:
 802              	.LBE27:
 803              	.LBE26:
 267:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __WFI();
 268:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     } else {
 269:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __SEV();
 270:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __WFE();
 271:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         __WFE();
 272:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 273:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 274:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E010U) = reg_snap[ 0 ] ;
 804              		.loc 1 274 5
 805 00ba 104A     		ldr	r2, .L43+12
 806              		.loc 1 274 34
 807 00bc 104B     		ldr	r3, .L43+16
 808 00be 1B68     		ldr	r3, [r3]
 809              		.loc 1 274 24
 810 00c0 1360     		str	r3, [r2]
 275:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E100U) = reg_snap[ 1 ] ;
 811              		.loc 1 275 5
 812 00c2 104A     		ldr	r2, .L43+20
 813              		.loc 1 275 34
 814 00c4 0E4B     		ldr	r3, .L43+16
 815 00c6 5B68     		ldr	r3, [r3, #4]
 816              		.loc 1 275 24
 817 00c8 1360     		str	r3, [r2]
 276:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E104U) = reg_snap[ 2 ] ;
 818              		.loc 1 276 5
 819 00ca 0F4A     		ldr	r2, .L43+24
 820              		.loc 1 276 34
 821 00cc 0C4B     		ldr	r3, .L43+16
 822 00ce 9B68     		ldr	r3, [r3, #8]
 823              		.loc 1 276 24
 824 00d0 1360     		str	r3, [r2]
 277:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E108U) = reg_snap[ 3 ] ;
 825              		.loc 1 277 5
 826 00d2 0E4A     		ldr	r2, .L43+28
 827              		.loc 1 277 34
 828 00d4 0A4B     		ldr	r3, .L43+16
 829 00d6 DB68     		ldr	r3, [r3, #12]
 830              		.loc 1 277 24
 831 00d8 1360     		str	r3, [r2]
 278:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 279:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* reset sleepdeep bit of Cortex-M4 system control register */
 280:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     SCB->SCR &= ~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 832              		.loc 1 280 14
 833 00da 074B     		ldr	r3, .L43+8
 834 00dc 1B69     		ldr	r3, [r3, #16]
 835 00de 064A     		ldr	r2, .L43+8
 836 00e0 23F00403 		bic	r3, r3, #4
 837 00e4 1361     		str	r3, [r2, #16]
 281:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 838              		.loc 1 281 1
 839 00e6 00BF     		nop
 840 00e8 1437     		adds	r7, r7, #20
 841              		.cfi_def_cfa_offset 4
 842 00ea BD46     		mov	sp, r7
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 00ec 80BC     		pop	{r7}
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 00ee 7047     		bx	lr
 849              	.L44:
 850              		.align	2
 851              	.L43:
 852 00f0 00700040 		.word	1073770496
 853 00f4 FCF3F3FF 		.word	-789508
 854 00f8 00ED00E0 		.word	-536810240
 855 00fc 10E000E0 		.word	-536813552
 856 0100 00000000 		.word	reg_snap.7640
 857 0104 00E100E0 		.word	-536813312
 858 0108 04E100E0 		.word	-536813308
 859 010c 08E100E0 		.word	-536813304
 860 0110 04000100 		.word	65540
 861 0114 80E100E0 		.word	-536813184
 862 0118 3DF87FFF 		.word	-8390595
 863 011c 84E100E0 		.word	-536813180
 864 0120 88E100E0 		.word	-536813176
 865              		.cfi_endproc
 866              	.LFE128:
 868              		.section	.text.pmu_to_standbymode,"ax",%progbits
 869              		.align	1
 870              		.global	pmu_to_standbymode
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu softvfp
 876              	pmu_to_standbymode:
 877              	.LFB129:
 282:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 283:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 284:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      pmu work in standby mode
 285:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 286:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 287:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 288:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 289:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_to_standbymode(void)
 290:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 878              		.loc 1 290 1
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883 0000 80B4     		push	{r7}
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 7, -4
 886 0002 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 291:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* set stbmod bit */
 292:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_STBMOD;
 888              		.loc 1 292 13
 889 0004 144B     		ldr	r3, .L46
 890 0006 1B68     		ldr	r3, [r3]
 891 0008 134A     		ldr	r2, .L46
 892 000a 43F00203 		orr	r3, r3, #2
 893 000e 1360     		str	r3, [r2]
 293:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 294:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* reset wakeup flag */
 295:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_WURST;
 894              		.loc 1 295 13
 895 0010 114B     		ldr	r3, .L46
 896 0012 1B68     		ldr	r3, [r3]
 897 0014 104A     		ldr	r2, .L46
 898 0016 43F00403 		orr	r3, r3, #4
 899 001a 1360     		str	r3, [r2]
 296:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 297:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* set sleepdeep bit of Cortex-M4 system control register */
 298:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 900              		.loc 1 298 14
 901 001c 0F4B     		ldr	r3, .L46+4
 902 001e 1B69     		ldr	r3, [r3, #16]
 903 0020 0E4A     		ldr	r2, .L46+4
 904 0022 43F00403 		orr	r3, r3, #4
 905 0026 1361     		str	r3, [r2, #16]
 299:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 300:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E010U) &= 0x00010004U;
 906              		.loc 1 300 24
 907 0028 0D4B     		ldr	r3, .L46+8
 908 002a 1A68     		ldr	r2, [r3]
 909 002c 0C49     		ldr	r1, .L46+8
 910 002e 0D4B     		ldr	r3, .L46+12
 911 0030 1340     		ands	r3, r3, r2
 912 0032 0B60     		str	r3, [r1]
 301:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E180U)  = 0XFFFFFFF7U;
 913              		.loc 1 301 5
 914 0034 0C4B     		ldr	r3, .L46+16
 915              		.loc 1 301 25
 916 0036 6FF00802 		mvn	r2, #8
 917 003a 1A60     		str	r2, [r3]
 302:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E184U)  = 0XFFFFFDFFU;
 918              		.loc 1 302 5
 919 003c 0B4B     		ldr	r3, .L46+20
 920              		.loc 1 302 25
 921 003e 6FF40072 		mvn	r2, #512
 922 0042 1A60     		str	r2, [r3]
 303:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     REG32(0xE000E188U)  = 0xFFFFFFFFU;
 923              		.loc 1 303 5
 924 0044 0A4B     		ldr	r3, .L46+24
 925              		.loc 1 303 25
 926 0046 4FF0FF32 		mov	r2, #-1
 927 004a 1A60     		str	r2, [r3]
 928              	.LBB28:
 929              	.LBB29:
 299:../Firmware/CMSIS/core_cmInstr.h **** }
 930              		.loc 2 299 3
 931              		.syntax unified
 932              	@ 299 "../Firmware/CMSIS/core_cmInstr.h" 1
 933 004c 30BF     		wfi
 934              	@ 0 "" 2
 300:../Firmware/CMSIS/core_cmInstr.h **** 
 935              		.loc 2 300 1
 936              		.thumb
 937              		.syntax unified
 938 004e 00BF     		nop
 939              	.LBE29:
 940              	.LBE28:
 304:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 305:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     /* select WFI or WFE command to enter standby mode */
 306:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     __WFI();
 307:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 941              		.loc 1 307 1
 942 0050 00BF     		nop
 943 0052 BD46     		mov	sp, r7
 944              		.cfi_def_cfa_register 13
 945              		@ sp needed
 946 0054 80BC     		pop	{r7}
 947              		.cfi_restore 7
 948              		.cfi_def_cfa_offset 0
 949 0056 7047     		bx	lr
 950              	.L47:
 951              		.align	2
 952              	.L46:
 953 0058 00700040 		.word	1073770496
 954 005c 00ED00E0 		.word	-536810240
 955 0060 10E000E0 		.word	-536813552
 956 0064 04000100 		.word	65540
 957 0068 80E100E0 		.word	-536813184
 958 006c 84E100E0 		.word	-536813180
 959 0070 88E100E0 		.word	-536813176
 960              		.cfi_endproc
 961              	.LFE129:
 963              		.section	.text.pmu_backup_write_enable,"ax",%progbits
 964              		.align	1
 965              		.global	pmu_backup_write_enable
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu softvfp
 971              	pmu_backup_write_enable:
 972              	.LFB130:
 308:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 309:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 310:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      enable backup domain write
 311:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 312:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 313:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 314:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 315:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_backup_write_enable(void)
 316:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 973              		.loc 1 316 1
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 978 0000 80B4     		push	{r7}
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 7, -4
 981 0002 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 317:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL |= PMU_CTL_BKPWEN;
 983              		.loc 1 317 13
 984 0004 044B     		ldr	r3, .L49
 985 0006 1B68     		ldr	r3, [r3]
 986 0008 034A     		ldr	r2, .L49
 987 000a 43F48073 		orr	r3, r3, #256
 988 000e 1360     		str	r3, [r2]
 318:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 989              		.loc 1 318 1
 990 0010 00BF     		nop
 991 0012 BD46     		mov	sp, r7
 992              		.cfi_def_cfa_register 13
 993              		@ sp needed
 994 0014 80BC     		pop	{r7}
 995              		.cfi_restore 7
 996              		.cfi_def_cfa_offset 0
 997 0016 7047     		bx	lr
 998              	.L50:
 999              		.align	2
 1000              	.L49:
 1001 0018 00700040 		.word	1073770496
 1002              		.cfi_endproc
 1003              	.LFE130:
 1005              		.section	.text.pmu_backup_write_disable,"ax",%progbits
 1006              		.align	1
 1007              		.global	pmu_backup_write_disable
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1011              		.fpu softvfp
 1013              	pmu_backup_write_disable:
 1014              	.LFB131:
 319:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 320:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 321:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      disable backup domain write
 322:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 323:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 324:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 325:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 326:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_backup_write_disable(void)
 327:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 1015              		.loc 1 327 1
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 1020 0000 80B4     		push	{r7}
 1021              		.cfi_def_cfa_offset 4
 1022              		.cfi_offset 7, -4
 1023 0002 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 328:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CTL &= ~PMU_CTL_BKPWEN;
 1025              		.loc 1 328 13
 1026 0004 044B     		ldr	r3, .L52
 1027 0006 1B68     		ldr	r3, [r3]
 1028 0008 034A     		ldr	r2, .L52
 1029 000a 23F48073 		bic	r3, r3, #256
 1030 000e 1360     		str	r3, [r2]
 329:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 1031              		.loc 1 329 1
 1032 0010 00BF     		nop
 1033 0012 BD46     		mov	sp, r7
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 0014 80BC     		pop	{r7}
 1037              		.cfi_restore 7
 1038              		.cfi_def_cfa_offset 0
 1039 0016 7047     		bx	lr
 1040              	.L53:
 1041              		.align	2
 1042              	.L52:
 1043 0018 00700040 		.word	1073770496
 1044              		.cfi_endproc
 1045              	.LFE131:
 1047              		.section	.text.pmu_wakeup_pin_enable,"ax",%progbits
 1048              		.align	1
 1049              		.global	pmu_wakeup_pin_enable
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu softvfp
 1055              	pmu_wakeup_pin_enable:
 1056              	.LFB132:
 330:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 331:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 332:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      enable wakeup pin
 333:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 334:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 335:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 336:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 337:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_wakeup_pin_enable(void)
 338:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 1057              		.loc 1 338 1
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0000 80B4     		push	{r7}
 1063              		.cfi_def_cfa_offset 4
 1064              		.cfi_offset 7, -4
 1065 0002 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 339:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CS |= PMU_CS_WUPEN;
 1067              		.loc 1 339 12
 1068 0004 044B     		ldr	r3, .L55
 1069 0006 1B68     		ldr	r3, [r3]
 1070 0008 034A     		ldr	r2, .L55
 1071 000a 43F48073 		orr	r3, r3, #256
 1072 000e 1360     		str	r3, [r2]
 340:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 1073              		.loc 1 340 1
 1074 0010 00BF     		nop
 1075 0012 BD46     		mov	sp, r7
 1076              		.cfi_def_cfa_register 13
 1077              		@ sp needed
 1078 0014 80BC     		pop	{r7}
 1079              		.cfi_restore 7
 1080              		.cfi_def_cfa_offset 0
 1081 0016 7047     		bx	lr
 1082              	.L56:
 1083              		.align	2
 1084              	.L55:
 1085 0018 04700040 		.word	1073770500
 1086              		.cfi_endproc
 1087              	.LFE132:
 1089              		.section	.text.pmu_wakeup_pin_disable,"ax",%progbits
 1090              		.align	1
 1091              		.global	pmu_wakeup_pin_disable
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu softvfp
 1097              	pmu_wakeup_pin_disable:
 1098              	.LFB133:
 341:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 342:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 343:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      disable wakeup pin
 344:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  none
 345:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 346:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 347:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 348:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_wakeup_pin_disable(void)
 349:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 1099              		.loc 1 349 1
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104 0000 80B4     		push	{r7}
 1105              		.cfi_def_cfa_offset 4
 1106              		.cfi_offset 7, -4
 1107 0002 00AF     		add	r7, sp, #0
 1108              		.cfi_def_cfa_register 7
 350:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     PMU_CS &= ~PMU_CS_WUPEN;
 1109              		.loc 1 350 12
 1110 0004 044B     		ldr	r3, .L58
 1111 0006 1B68     		ldr	r3, [r3]
 1112 0008 034A     		ldr	r2, .L58
 1113 000a 23F48073 		bic	r3, r3, #256
 1114 000e 1360     		str	r3, [r2]
 351:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 1115              		.loc 1 351 1
 1116 0010 00BF     		nop
 1117 0012 BD46     		mov	sp, r7
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 0014 80BC     		pop	{r7}
 1121              		.cfi_restore 7
 1122              		.cfi_def_cfa_offset 0
 1123 0016 7047     		bx	lr
 1124              	.L59:
 1125              		.align	2
 1126              	.L58:
 1127 0018 04700040 		.word	1073770500
 1128              		.cfi_endproc
 1129              	.LFE133:
 1131              		.section	.text.pmu_flag_get,"ax",%progbits
 1132              		.align	1
 1133              		.global	pmu_flag_get
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu softvfp
 1139              	pmu_flag_get:
 1140              	.LFB134:
 352:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 353:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 354:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      get flag state
 355:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  flag:
 356:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_WAKEUP: wakeup flag
 357:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_STANDBY: standby flag
 358:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_LVD: lvd flag
 359:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_LDOVSRF: LDO voltage select ready flag
 360:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_HDRF: high-driver ready flag
 361:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_HDSRF: high-driver switch ready flag
 362:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_LDRF: low-driver mode ready flag
 363:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 364:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     FlagStatus SET or RESET
 365:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 366:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** FlagStatus pmu_flag_get(uint32_t flag)
 367:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 1141              		.loc 1 367 1
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              		.cfi_def_cfa_offset 4
 1148              		.cfi_offset 7, -4
 1149 0002 83B0     		sub	sp, sp, #12
 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 368:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     if(PMU_CS & flag) {
 1154              		.loc 1 368 8
 1155 0008 064B     		ldr	r3, .L63
 1156 000a 1A68     		ldr	r2, [r3]
 1157              		.loc 1 368 15
 1158 000c 7B68     		ldr	r3, [r7, #4]
 1159 000e 1340     		ands	r3, r3, r2
 1160              		.loc 1 368 7
 1161 0010 002B     		cmp	r3, #0
 1162 0012 01D0     		beq	.L61
 369:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         return  SET;
 1163              		.loc 1 369 17
 1164 0014 0123     		movs	r3, #1
 1165 0016 00E0     		b	.L62
 1166              	.L61:
 370:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     } else {
 371:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         return  RESET;
 1167              		.loc 1 371 17
 1168 0018 0023     		movs	r3, #0
 1169              	.L62:
 372:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 373:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 1170              		.loc 1 373 1
 1171 001a 1846     		mov	r0, r3
 1172 001c 0C37     		adds	r7, r7, #12
 1173              		.cfi_def_cfa_offset 4
 1174 001e BD46     		mov	sp, r7
 1175              		.cfi_def_cfa_register 13
 1176              		@ sp needed
 1177 0020 80BC     		pop	{r7}
 1178              		.cfi_restore 7
 1179              		.cfi_def_cfa_offset 0
 1180 0022 7047     		bx	lr
 1181              	.L64:
 1182              		.align	2
 1183              	.L63:
 1184 0024 04700040 		.word	1073770500
 1185              		.cfi_endproc
 1186              	.LFE134:
 1188              		.section	.text.pmu_flag_clear,"ax",%progbits
 1189              		.align	1
 1190              		.global	pmu_flag_clear
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu softvfp
 1196              	pmu_flag_clear:
 1197              	.LFB135:
 374:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** 
 375:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** /*!
 376:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \brief      clear flag bit
 377:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[in]  flag:
 378:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_RESET_WAKEUP: reset wakeup flag
 379:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****       \arg        PMU_FLAG_RESET_STANDBY: reset standby flag
 380:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \param[out] none
 381:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     \retval     none
 382:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** */
 383:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** void pmu_flag_clear(uint32_t flag)
 384:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** {
 1198              		.loc 1 384 1
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203 0000 80B4     		push	{r7}
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 7, -4
 1206 0002 83B0     		sub	sp, sp, #12
 1207              		.cfi_def_cfa_offset 16
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 385:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     switch(flag) {
 1211              		.loc 1 385 5
 1212 0008 7B68     		ldr	r3, [r7, #4]
 1213 000a 002B     		cmp	r3, #0
 1214 000c 03D0     		beq	.L66
 1215 000e 7B68     		ldr	r3, [r7, #4]
 1216 0010 012B     		cmp	r3, #1
 1217 0012 07D0     		beq	.L67
 386:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     case PMU_FLAG_RESET_WAKEUP:
 387:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         /* reset wakeup flag */
 388:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         PMU_CTL |= PMU_CTL_WURST;
 389:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         break;
 390:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     case PMU_FLAG_RESET_STANDBY:
 391:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         /* reset standby flag */
 392:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         PMU_CTL |= PMU_CTL_STBRST;
 393:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         break;
 394:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     default :
 395:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         break;
 1218              		.loc 1 395 9
 1219 0014 0DE0     		b	.L69
 1220              	.L66:
 388:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         break;
 1221              		.loc 1 388 17
 1222 0016 094B     		ldr	r3, .L70
 1223 0018 1B68     		ldr	r3, [r3]
 1224 001a 084A     		ldr	r2, .L70
 1225 001c 43F00403 		orr	r3, r3, #4
 1226 0020 1360     		str	r3, [r2]
 389:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     case PMU_FLAG_RESET_STANDBY:
 1227              		.loc 1 389 9
 1228 0022 06E0     		b	.L69
 1229              	.L67:
 392:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****         break;
 1230              		.loc 1 392 17
 1231 0024 054B     		ldr	r3, .L70
 1232 0026 1B68     		ldr	r3, [r3]
 1233 0028 044A     		ldr	r2, .L70
 1234 002a 43F00803 		orr	r3, r3, #8
 1235 002e 1360     		str	r3, [r2]
 393:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     default :
 1236              		.loc 1 393 9
 1237 0030 00BF     		nop
 1238              	.L69:
 396:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c ****     }
 397:../Firmware/GD32F30x_standard_peripheral/Source/gd32f30x_pmu.c **** }
 1239              		.loc 1 397 1
 1240 0032 00BF     		nop
 1241 0034 0C37     		adds	r7, r7, #12
 1242              		.cfi_def_cfa_offset 4
 1243 0036 BD46     		mov	sp, r7
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 0038 80BC     		pop	{r7}
 1247              		.cfi_restore 7
 1248              		.cfi_def_cfa_offset 0
 1249 003a 7047     		bx	lr
 1250              	.L71:
 1251              		.align	2
 1252              	.L70:
 1253 003c 00700040 		.word	1073770496
 1254              		.cfi_endproc
 1255              	.LFE135:
 1257              		.section	.bss.reg_snap.7640,"aw",%nobits
 1258              		.align	2
 1261              	reg_snap.7640:
 1262 0000 00000000 		.space	16
 1262      00000000 
 1262      00000000 
 1262      00000000 
 1263              		.text
 1264              	.Letext0:
 1265              		.file 3 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools ar
 1266              		.file 4 "c:\\gd32embeddedbuilder_1.5.3.31964\\gd32embeddedbuilder_1.5.3.31964\\tools\\gnu tools ar
 1267              		.file 5 "../Firmware/CMSIS/core_cm4.h"
 1268              		.file 6 "../Firmware/CMSIS/GD/GD32F30x/Include/system_gd32f30x.h"
 1269              		.file 7 "../Firmware/CMSIS/GD/GD32F30x/Include/gd32f30x.h"
 1270              		.file 8 "../Firmware/GD32F30x_standard_peripheral/Include/gd32f30x_rcu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f30x_pmu.c
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:16     .text.pmu_deinit:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:24     .text.pmu_deinit:00000000 pmu_deinit
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:50     .text.pmu_lvd_select:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:57     .text.pmu_lvd_select:00000000 pmu_lvd_select
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:111    .text.pmu_lvd_select:00000044 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:116    .text.pmu_ldo_output_select:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:123    .text.pmu_ldo_output_select:00000000 pmu_ldo_output_select
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:165    .text.pmu_ldo_output_select:0000002c $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:170    .text.pmu_lvd_disable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:177    .text.pmu_lvd_disable:00000000 pmu_lvd_disable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:207    .text.pmu_lvd_disable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:212    .text.pmu_highdriver_switch_select:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:219    .text.pmu_highdriver_switch_select:00000000 pmu_highdriver_switch_select
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1139   .text.pmu_flag_get:00000000 pmu_flag_get
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:268    .text.pmu_highdriver_switch_select:00000038 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:273    .text.pmu_highdriver_mode_enable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:280    .text.pmu_highdriver_mode_enable:00000000 pmu_highdriver_mode_enable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:310    .text.pmu_highdriver_mode_enable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:315    .text.pmu_highdriver_mode_disable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:322    .text.pmu_highdriver_mode_disable:00000000 pmu_highdriver_mode_disable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:352    .text.pmu_highdriver_mode_disable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:357    .text.pmu_lowdriver_mode_enable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:364    .text.pmu_lowdriver_mode_enable:00000000 pmu_lowdriver_mode_enable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:394    .text.pmu_lowdriver_mode_enable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:399    .text.pmu_lowdriver_mode_disable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:406    .text.pmu_lowdriver_mode_disable:00000000 pmu_lowdriver_mode_disable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:436    .text.pmu_lowdriver_mode_disable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:441    .text.pmu_lowpower_driver_config:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:448    .text.pmu_lowpower_driver_config:00000000 pmu_lowpower_driver_config
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:490    .text.pmu_lowpower_driver_config:0000002c $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:495    .text.pmu_normalpower_driver_config:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:502    .text.pmu_normalpower_driver_config:00000000 pmu_normalpower_driver_config
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:544    .text.pmu_normalpower_driver_config:0000002c $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:549    .text.pmu_to_sleepmode:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:556    .text.pmu_to_sleepmode:00000000 pmu_to_sleepmode
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:625    .text.pmu_to_sleepmode:00000030 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:630    .text.pmu_to_deepsleepmode:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:637    .text.pmu_to_deepsleepmode:00000000 pmu_to_deepsleepmode
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:852    .text.pmu_to_deepsleepmode:000000f0 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1261   .bss.reg_snap.7640:00000000 reg_snap.7640
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:869    .text.pmu_to_standbymode:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:876    .text.pmu_to_standbymode:00000000 pmu_to_standbymode
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:953    .text.pmu_to_standbymode:00000058 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:964    .text.pmu_backup_write_enable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:971    .text.pmu_backup_write_enable:00000000 pmu_backup_write_enable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1001   .text.pmu_backup_write_enable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1006   .text.pmu_backup_write_disable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1013   .text.pmu_backup_write_disable:00000000 pmu_backup_write_disable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1043   .text.pmu_backup_write_disable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1048   .text.pmu_wakeup_pin_enable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1055   .text.pmu_wakeup_pin_enable:00000000 pmu_wakeup_pin_enable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1085   .text.pmu_wakeup_pin_enable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1090   .text.pmu_wakeup_pin_disable:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1097   .text.pmu_wakeup_pin_disable:00000000 pmu_wakeup_pin_disable
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1127   .text.pmu_wakeup_pin_disable:00000018 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1132   .text.pmu_flag_get:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1184   .text.pmu_flag_get:00000024 $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1189   .text.pmu_flag_clear:00000000 $t
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1196   .text.pmu_flag_clear:00000000 pmu_flag_clear
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1253   .text.pmu_flag_clear:0000003c $d
C:\Users\gaswerke\AppData\Local\Temp\ccxU7LXx.s:1258   .bss.reg_snap.7640:00000000 $d
                           .group:00000000 wm4.0.0b2cbd0a579afdcbc37120f4ceb86892
                           .group:00000000 wm4.gd32f30x.h.39.a203e36f89dbb1753b66e1e665732b11
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.6f0a9ac4bbc7fecc10f22e6a71f29e52
                           .group:00000000 wm4.system_gd32f30x.h.38.120525a84dcd3d76a4734e6bcde7b49c
                           .group:00000000 wm4.gd32f30x.h.294.5e6753de52124d3e3ab34f8aafd628cc
                           .group:00000000 wm4.gd32f30x_rcu.h.41.eb7011467c51e1274d4ea5dfbe3b7403
                           .group:00000000 wm4.gd32f30x_adc.h.36.124b47377c29d63ea85a6515ff99e7d0
                           .group:00000000 wm4.gd32f30x_can.h.36.85eb2b9bdffce148e9f2cf53e35a47f8
                           .group:00000000 wm4.gd32f30x_crc.h.36.3e50e7397bf79ecca0d280169ab2b7e1
                           .group:00000000 wm4.gd32f30x_ctc.h.36.42aeab0e42f8a7b6cc58608cdc08a712
                           .group:00000000 wm4.gd32f30x_dac.h.36.f867e713911fc6770d5f38223b88a122
                           .group:00000000 wm4.gd32f30x_dbg.h.36.4d3777753862ded915f1f9e71f4c290a
                           .group:00000000 wm4.gd32f30x_dma.h.36.00aa3536820feed4ebeab0c0060e7723
                           .group:00000000 wm4.gd32f30x_exti.h.36.64affc4e75ae7f53393e90b0bfc38f38
                           .group:00000000 wm4.gd32f30x_fmc.h.37.17b3f65aacec1755989aca30031b6a7c
                           .group:00000000 wm4.gd32f30x_fwdgt.h.36.1e7c1bfe259ede52150f5b1c58591a95
                           .group:00000000 wm4.gd32f30x_gpio.h.36.faffc48a681d1163918cf519d3cc7454
                           .group:00000000 wm4.gd32f30x_i2c.h.36.5765e4fd7e67145781f52c3602fdf526
                           .group:00000000 wm4.gd32f30x_bkp.h.36.74dcfa31c344ae6ddc6f3a850e1b1f1c
                           .group:00000000 wm4.gd32f30x_rtc.h.37.6e2dc4b1c1143d8443b19d8b8578e187
                           .group:00000000 wm4.gd32f30x_sdio.h.36.6dde0ac1ffebc8ac87750ca48ebf5355
                           .group:00000000 wm4.gd32f30x_spi.h.36.761dbcfdf151612384a2a7e1dfbd70a2
                           .group:00000000 wm4.gd32f30x_timer.h.36.aa3a076608594e31d0be360d6248cd0c
                           .group:00000000 wm4.gd32f30x_usart.h.36.c16033d6419d9317c5e1d5c9a4db894a
                           .group:00000000 wm4.gd32f30x_wwdgt.h.37.074fc90df4806e0bcba242ad61cb154f
                           .group:00000000 wm4.gd32f30x_misc.h.36.ca5ec56efc9d42fdcdbc33fa419c4320
                           .group:00000000 wm4.gd32f30x_enet.h.36.7f39b2eaaae239e349e809a8bdf838ed
                           .group:00000000 wm4.gd32f30x_exmc.h.36.6a5eb51a45aba96edb0f318836bccfc7
                           .group:00000000 wm4.gd32f30x_pmu.h.42.7f4d932d3ce2aa8cab20fadf0340e031

UNDEFINED SYMBOLS
rcu_periph_reset_enable
rcu_periph_reset_disable
